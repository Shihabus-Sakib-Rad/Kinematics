function cam2_ff_cam_ana(Action,splength,direction,ainc,segments,user_data) % the contents of the userdata of Analysis Window % handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(4) = handle of fig3 popupmenu% handles(5) = handle of fig4 popupmenu% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(8) = handle of axe3% handles(9) = handle of axe4% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(13) = handle of bead(3)% handles(14) = handle of bead(4)% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1% handles(18) = handle of reference axe for axe2% handles(19) = handle of reference axe for axe3% handles(20) = handle of reference axe for axe4% handles(21) = handle of submenu 'Load'% handles(22) = handle of submenu 'Save'% handles(23) = handle of return button;% handles(24) = handle of speed plus button;% handles(25) = flag1;% each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler rocker];      %global strFigTypeglobal nAnimationFlagglobal g_AnaResglobal nChangeSpeed% Define the axes for the first graph (input/output angle graph)if nargin==0 && isempty(findobj('Tag','FF Cam Analysis Window')),  % cogana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','FF Cam Analysis Window'))      % cogana is already open   Action='None';elseif nargin== 1 && ~isempty(findobj('Tag','FF Cam Analysis Window')) && strcmp( Action, 'initialize'), % cogana is already open	% Recalculate the value, and then redraw	Action='None';endswitch Actioncase 'initialize'   if  isempty(findobj('Tag','FF Cam Analysis Window'))         LocalOpenFig;      nAnimationFlag = 0;   else  		cam2_ff_cam_ana('None');   end      if nargin < 7       rb = 3.2;      rise = 2;      tmin = 1.6;	      tmax = 2.6;   	  direction = '-';   	  ainc = 5;   end      if exist('nAnimationFlag')       if nAnimationFlag == 1      	 cam2_ff_cam_ana('Stop');         return;      end   end   rb = splength(1);   rise = splength(2);   tmax = splength(4);   tmin = splength(5);   g_AnaRes = CalcResult( rb,rise,tmin,tmax,direction,ainc, segments, user_data  ); %*********************   DrawAnalysisWindow;   cam2_ff_cam_ana('ShowFigure');   cam2_ff_cam_ana('Start');    	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	%	Change Figure Call Back Function	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'ChangeFigure'   DrawAnalysisWindow;   cam2_ff_cam_ana('ShowFigure');   cam2_ff_cam_ana('Start');   case 'SetSpeed'   rb = splength(1);          %*********** added *************************************   nChangeSpeed = rb;   case 'ChangeFigureNo'   DrawAnalysisWindow;   cam2_ff_cam_ana('ShowFigure');   cam2_ff_cam_ana('Start');   case 'Animation'   a = findobj('Tag','FF Cam Analysis Window');   UD=a.UserData;   handles = UD.hand;   Q1 = 0;      [ m, n ] = size( g_AnaRes);   jtotal = g_AnaRes(m,9);   ntotal = g_AnaRes(m,10);   ctotal = g_AnaRes(m,11);   rotinc = g_AnaRes(m,12);   itotal = ntotal;   timesink = UD.tsink;   i = UD.inum;   dt = 5;         nFigNum  = get( handles(1),'value');   nType(1) = get( handles(2),'value');   nType(2) = get( handles(3),'value');   nType(3) = get( handles(4),'value');%   nType(4) = get( handles(5),'value');     %*************** 4th fig. ****************************      bead  = zeros(1,4);   links = zeros(4,3);   bead(1) = handles(10);   bead(2) = handles(11);   bead(3) = handles(12);%  bead(4) = handles(13);           %*************** 4th fig. ****************************      h_plus = handles(21);       u = 12;   u = u+1; xca = g_AnaRes(u:u+jtotal-1,1:ntotal);   u = u+jtotal; yca = g_AnaRes(u:u+jtotal-1,1:ntotal);   u = u+jtotal; xstema = g_AnaRes(u:u+3,1:jtotal);   u = u+4; ystema = g_AnaRes(u:u+3,1:jtotal);   xstema = xstema';   ystema = ystema';   u = u+4; xfollower = g_AnaRes(u:u+4,1:jtotal);   u = u+5; yfollower = g_AnaRes(u:u+4,1:jtotal);   xfollower = xfollower';   yfollower = yfollower';      for j = 1:nFigNum      if nType(j) == 1       	links(j,:) = get(handles(j+5),'userdata');     	end   end      % set timer   tic;   while nAnimationFlag                      cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i ==1         drawnow;      end               if nFigNum > 0         if nType(1) == 1   			SetMechanismPosition( links(1,:),i,xca,yca,xstema,ystema,xfollower,yfollower);         else            j = nType(1) * 2 -3;            set(bead(1), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));   		 end      end               	if nFigNum > 1         if nType(2) == 1   			SetMechanismPosition( links(2,:),i,xca,yca,xstema,ystema,xfollower,yfollower);         else         j = nType(2) * 2 -3;         set(bead(2), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end      end         	if nFigNum > 2         if nType(3) == 1   			SetMechanismPosition( links(3,:),i,xca,yca,xstema,ystema,xfollower,yfollower);         else         j = nType(3) * 2 -3;         set(bead(3), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end     end                    	drawnow;   %flush the draw buffer%      i= i+1;% In cam program, the increment is decided by ainc, a variable given by users% therefore, we setup animation increment = rotinc which is a variable directly% decided by ainc.      i= i+rotinc;      if i >= itotal         i = 1;      end      if nChangeSpeed ~= 0         timesink = timesink * nChangeSpeed;         nChangeSpeed = 0;      end      while toc < timesink      end         tic;   end      nAnimationFlag = 0;   UD.inum = i;   UD.tsink = timesink;   set(a,'Userdata',UD);   case 'ShowFigure'   a = findobj('Tag','FF Cam Analysis Window');   UD=a.UserData;   handles = UD.hand;   nFigNum = get(handles(1),'value');   [ m, n ] = size( g_AnaRes);   axislimit = g_AnaRes(m,1:4);   rise = g_AnaRes( m,5);   bpoints = g_AnaRes( m,6);   npoints = g_AnaRes( m,7);   npoints1 = g_AnaRes( m,8);   jtotal = g_AnaRes( m,9);   ntotal = g_AnaRes( m,10);   ctotal = g_AnaRes( m,11);      u = 4;   u = u+1; xbush = g_AnaRes(u,1:bpoints);   u = u+1; ybush = g_AnaRes(u,1:bpoints);   u = u+1; xcoordcp = g_AnaRes(u,1:npoints);   u = u+1; ycoordcp = g_AnaRes(u,1:npoints);   u = u+1; xsl(1,:) = g_AnaRes(u,1:npoints1);   u = u+1; ysl(1,:) = g_AnaRes(u,1:npoints1);   u = u+1; xsl(2,:) = g_AnaRes(u,1:npoints1);   u = u+1; ysl(2,:) = g_AnaRes(u,1:npoints1);   qstart = 0;   qstop = 360;    if nFigNum > 0        nType = get(handles(2),'value');        axes(handles(6));        if nType == 1            CreateMechanismHandles( handles(6),axislimit,xcoordcp,ycoordcp,xbush,ybush,xsl,ysl);        else            i = nType * 2 -3;            line1 = line( 'xdata', g_AnaRes(i,1:ctotal), 'ydata', g_AnaRes(i+1,1:ctotal),'tag','line3','color', 'r');            b1 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b3');            handles(10) = b1;            labels = GetFigLabel( nType );            xlabel(labels(1));            ylabel(labels(2));            set(handles(6), 'XTick',[0 60 120 180 240 300 360]);            axis([qstart qstop 0.8*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);        end    end         if nFigNum > 1      nType = get(handles(3),'value');      axes(handles(7));      if nType == 1         CreateMechanismHandles( handles(7),axislimit,xcoordcp,ycoordcp,xbush,ybush,xsl,ysl);      else         i = nType * 2 -3;         line2 = line( 'xdata', g_AnaRes(i,1:ctotal), 'ydata', g_AnaRes(i+1,1:ctotal),'tag','line3','color', 'g');   		 b2 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b3');        	handles(11) = b2;   		 labels = GetFigLabel( nType );        	xlabel(labels(1));        	ylabel(labels(2));         set(handles(7), 'XTick',[0 60 120 180 240 300 360]);%         axis([qstart qstop 0.8*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);        axis auto;      end   end            if nFigNum > 2      nType = get(handles(4),'value');      axes(handles(8));      if nType == 1         CreateMechanismHandles( handles(8),axislimit,xcoordcp,ycoordcp,xbush,ybush,xsl,ysl);      else         i = nType * 2 -3;         line3 = line( 'xdata', g_AnaRes(i,1:ctotal), 'ydata', g_AnaRes(i+1,1:ctotal),'tag','line3','color', 'r');   		b3 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b3');        	handles(12) = b3;   		labels = GetFigLabel( nType );        	xlabel(labels(1));        	ylabel(labels(2));         set(handles(8), 'XTick',[0 60 120 180 240 300 360]);         axis([qstart qstop 0.8*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);      end   end            drawnow;   UD.hand=handles;      set(a,'Userdata',UD);   case 'None'   figure( findobj('Tag','FF Cam Analysis Window'));% Bring the figure to front, if it already existscase 'Close'   cam2_ff_cam_ana('Stop');   a = findobj('Tag','FF Cam Analysis Window');      close(a);case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','FF Cam Analysis Window');   UD=a.UserData;   handles = UD.hand;   set(handles(1),'Enable','off');   set(handles(2),'Enable','off');   set(handles(3),'Enable','off');   set(handles(4),'Enable','off');%   set(handles(5),'Enable','off');      %*************** 4th fig. ****************************   set(handles(18),'Enable','off');   set(handles(19),'Enable','off');   set(handles(20),'Enable','off');      nAnimationFlag = 1;   nChangeSpeed = 0;   UD.nAni = nAnimationFlag;   set(a,'userdata',UD);   cam2_ff_cam_ana('Animation');   case 'Stop'   if  isempty(findobj('Tag','FF Cam Analysis Window'))     	return;      end   a = findobj('Tag','FF Cam Analysis Window');   UD=a.UserData;   handles = UD.hand;   nAnimationFlag = 0;   UD.nAni = nAnimationFlag;   set(a,'userdata',UD);   set(handles(1),'Enable','on');   set(handles(18),'Enable','on');   set(handles(19),'Enable','on');   set(handles(20),'Enable','on');   nFigNum = get(handles(1),'value');   for i = 1:nFigNum,     	set(handles(i+1),'Enable','on');   end      case 'Return'       %************************* make "return" works !  ******************   cam2_ff_cam_ana('Stop');%    if ~isempty(findobj('Tag','cam_dsgn'))   %      	b = findobj('Tag','cam_dsgn');% %    if ~isempty(findobj('Tag','cam2'))   % %      	b = findobj('Tag','cam2');%       figure(b);%      	b = findobj('Tag','FF Cam Analysis Window');   %      	close(b);%    else%   	   return;      %    end   a = findobj('Tag','FF Cam Analysis Window');      close(a);% case 'Get File'% % Get the file name using the UIGETFILE%    [sFileName sFilePath] = uigetfile('*.dat','Load File'); % %    if sFileName == 0 && sFilePath == 0%    	return;%    end% % % Combine the path and file name together%    sTemp = strcat( sFilePath, sFileName );% % get the size to erase the '.dat' extension %    sz = size(sFileName);% % load the data file%    load(sTemp);% % assign the parameter to a variable%    Parameter = eval(sFileName(1:(sz(2)-4))); % %    a = findobj('Tag','Analysis Window');%    UD=a.UserData;%    handles = UD.hand;% %    if splength(Parameter) == 5%    	nFigNum = Parameter(1);%    	nType1 = Parameter(2);%    	nType2 = Parameter(3);%    	nType3 = Parameter(4);% %   	nType4 = Parameter(5);          %*************** 4th fig. ****************************% %    	set(handles(1),'Value',nFigNum);%     set(handles(2),'Value',nType1);%    	set(handles(3),'Value',nType2);%    	set(handles(4),'Value',nType3);% %   	set(handles(5),'Value',nType4);     %*************** 4th fig. ****************************% %    	set(a,'userdata',UD);%    	DrawAnalysisWindow;%    	cam2_ff_cam_ana('ShowFigure');%    	cam2_ff_cam_ana('Start');%    else%    	return;%    end% % case 'Put File'%    [sFileName sFilePath] = uiputfile('*.dat','Save As'); % %    a = findobj('Tag','Analysis Window');%    UD=a.UserData;%    handles = UD.hand;% %    nFigNum = get(handles(1),'Value');%    nType1 = get(handles(2),'Value');%    nType2 = get(handles(3),'Value');%    nType3 = get(handles(4),'Value');% %   nType4 = get(handles(5),'Value');        %*************** 4th fig. ****************************%    ParameterData = [nFigNum; nType1; nType2; nType3]; % % % sTemp = strcat( sFilePath, sFileName)%    [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);%    [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');%    eval(strCmd);end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow()a = findobj('Tag','FF Cam Analysis Window');UD=a.UserData;handles = UD.hand;h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);h_fig3 = handles(4);h_fig4 = handles(5);nFigNum=get(h_fignum,'Value');position = zeros( 4, 4, 4);position(1,1,:) = [0.2 0.25 0.6 0.6];position(2,1,:) = [0.25 0.65 0.5 0.31];position(2,2,:) = [0.25 0.22 0.5 0.31];position(3,1,:) = [0.1 0.42 0.38 0.31];position(3,2,:) = [0.58 0.65 0.38 0.31];position(3,3,:) = [0.58 0.22 0.38 0.31];%***************** 4th fig. ***********************************************% position(4,1,:) = [0.1 0.65 0.38 0.31];% position(4,2,:) = [0.58 0.65 0.38 0.31];% position(4,3,:) = [0.1 0.22 0.38 0.31];% position(4,4,:) = [0.58 0.22 0.38 0.31]; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:8,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endend%for i = 17:19,for i = 14:17	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 1:nFigNum,	set(handles(i+1),'Enable','on');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 1	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(14) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(14) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...   'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(15) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 3%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 3	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(14) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(15) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(16) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;end% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 4  ******** 4th fig. ************************************************% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 4% 	b = axes('Parent',a, ...% 	'Box','on', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,1,:), ...% 	'XColor',[0 0 0], ...% 	'XGrid','off', ...% 	'XTick',[],...% 	'YColor',[0 0 0], ...% 	'YGrid','off', ...% 	'YTick',[], ...% 	'ZColor',[0 0 0], ...% 	'ZGrid','off', ...% 	'ZTick',[]);% handles(17) = b;% % h_1 = axes('Parent',a, ...% 	'CameraUpVector',[0 1 0], ...% 	'CameraUpVectorMode','manual', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,1,:), ...% 	'Tag','Axes1', ...% 	'XColor',[0 0 0], ...% 	'YColor',[0 0 0], ...% 	'ZColor',[0 0 0]);% % b = axes('Parent',a, ...% 	'Box','on', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,2,:), ...% 	'XColor',[0 0 0], ...% 	'XGrid','off', ...% 	'XTick',[],...% 	'YColor',[0 0 0], ...% 	'YGrid','off', ...% 	'YTick',[], ...% 	'ZColor',[0 0 0], ...% 	'ZGrid','off', ...% 	'ZTick',[]);% handles(18) = b;% % h_2 = axes('Parent',a, ...% 	'CameraUpVector',[0 1 0], ...% 	'CameraUpVectorMode','manual', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,2,:), ...% 	'Tag','Axes2', ...% 	'XColor',[0 0 0], ...% 	'YColor',[0 0 0], ...% 	'ZColor',[0 0 0]);% % b = axes('Parent',a, ...% 	'Box','on', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,3,:), ...% 	'XColor',[0 0 0], ...% 	'XGrid','off', ...% 	'XTick',[],...% 	'YColor',[0 0 0], ...% 	'YGrid','off', ...% 	'YTick',[], ...% 	'ZColor',[0 0 0], ...% 	'ZGrid','off', ...% 	'ZTick',[]);% handles(19) = b;% % h_3 = axes('Parent',a, ...% 	'CameraUpVector',[0 1 0], ...% 	'CameraUpVectorMode','manual', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,3,:), ...% 	'Tag','Axes3', ...% 	'XColor',[0 0 0], ...% 	'YColor',[0 0 0], ...% 	'ZColor',[0 0 0]);% % b = axes('Parent',a, ...% 	'Box','on', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,4,:), ...% 	'XColor',[0 0 0], ...% 	'XGrid','off', ...% 	'XTick',[],...% 	'YColor',[0 0 0], ...% 	'YGrid','off', ...% 	'YTick',[], ...% 	'ZColor',[0 0 0], ...% 	'ZGrid','off', ...% 	'ZTick',[]);% handles(20) = b;% % h_4 = axes('Parent',a, ...% 	'CameraUpVector',[0 1 0], ...% 	'CameraUpVectorMode','manual', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,4,:), ...% 	'Tag','Axes4', ...% 	'XColor',[0 0 0], ...% 	'YColor',[0 0 0], ...% 	'ZColor',[0 0 0]);% % handles(6) = h_1;% handles(7) = h_2;% handles(8) = h_3;% handles(9) = h_4;% endUD.hand=handles;set(a,'userdata',UD);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig()strFigType = [ ...   	'mechanism           ';...      'displacement graph  ';...      'radius of curavature'];%      'pressure angle      '];      %********** 4th fig. ************************%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','Pixels', ...	'Color',[0.8 0.8 0.8], ...   'Name','FF Cam Analysis Window', ...    'NumberTitle','off', ...	'Position',FigPos, ... 	'Tag','FF Cam Analysis Window');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...   'Position',[0.01731 0.020 0.77 0.1117], ...   'Style','frame', ...	'Tag','Frame2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.7808 0.020 0.2038 0.1117], ...   'Style','frame', ...   'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');h_load = uimenu('Parent',b, ...	'Callback','cam2_ff_cam_ana(''GetFile'')', ...	'Label','Load', ...	'Tag','submenu_load');h_save = uimenu('Parent',b, ...	'Callback','cam2_ff_cam_ana(''PutFile'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...	'Position',[0.03 0.07 0.095 0.03911], ... 	'String','No. of figs ', ...	'Style','text', ...	'Tag','StaticText2');h_fignum = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','cam2_ff_cam_ana(''ChangeFigureNo'');', ...   'Position',[0.135 0.0985 0.10 0.027], ...   'String',['1';'2';'3'], ...      %************* 4th fig. - add '4' **********   'Style','popupmenu', ...	'Tag','FigNumber', ... 	'Value',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.03 0.02793 0.08 0.03910], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','cam2_ff_cam_ana(''SetSpeed'',0.707);', ...   'Position',[0.1327 0.02955 0.04038 0.03182], ...    'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','cam2_ff_cam_ana(''SetSpeed'',1.414);', ...   'Position',[0.2 0.02955 0.04038 0.03182], ...   'String','-', ... 	'Tag','Minus_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.07821 0.06262 0.03724], ...   'String','Fig 1', ...	'Style','text', ... 	'Tag','StaticText1'); b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.08007 0.06262 0.03724], ...   'String','Fig 2', ...	'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.03352 0.06262 0.03724], ...   'String','Fig 3', ...   'Style','text', ...	'Tag','StaticText1');% %*************** 4th fig. ************************************************% b = uicontrol('Parent',a, ...% 	'Units','normalized', ...%    'Position',[0.5019 0.03352 0.06262 0.03724], ...%    'String','Fig 4', ...%    'Style','text', ...% 	'Tag','StaticText1');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup the Popup menu contents for Figure Type Selection 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_fig1 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','cam2_ff_cam_ana(''ChangeFigure'',1);', ...   'Position',[0.3077 0.0985 0.19256 0.027], ...   'String',strFigType, ... 	'Style','popupmenu', ...	'Tag','Fig1', ...	'Value',1);h_fig2 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','cam2_ff_cam_ana(''ChangeFigure'',2);', ...   'Position',[0.5692 0.0985 0.19256 0.027], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig2', ...	'Value',2);h_fig3 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','cam2_ff_cam_ana(''ChangeFigure'',3);', ...   'Position',[0.3077 0.0495 0.1926 0.027], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig3', ...	'Value',3);% %*************** 4th fig. ************************************************% h_fig4 = uicontrol('Parent',a, ...% 	'Units','normalized', ...%    'Callback','cam2_ff_cam_ana(''ChangeFigure'',4);', ...%    'Position',[0.5692 0.0495 0.1926 0.027], ...%    'String',strFigType, ...% 	'Style','popupmenu', ...% 	'Tag','Fig4', ...% 	'Value',4);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','cam2_ff_cam_ana(''Start'')', ...   'Position',[0.7942 0.07727 0.08577 0.04318], ...   'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','cam2_ff_cam_ana(''Stop'')', ...	'Position',[0.8854 0.07727 0.08577 0.04318], ...    'String','Stop', ...   'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','cam2_ff_cam_ana(''Return'')', ...	'Position',[0.7942 0.02891 0.1773 0.04318], ...    'String','Return', ...   'Tag','return_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros(1,21);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(4) = h_fig3;handles(5) = 0; % h_fig4 is set to 0 since there're three plots at most.%handles(5) = h_fig4;     %********** 4th fig. **********************************************handles(18) = h_load;handles(19) = h_save;handles(20) = h_return;handles(21) = h_plus;UD=struct('hand',handles,'nAni',nAnimationFlag,'tsink',0.1,'inum',1);set(a,'UserData',UD);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	String Table%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [ labels ] = GetFigLabel( nFigType )strTable = cell( 2, 3 );strTable( 2,:) = {'cam angle (degree)';'follower displacement';'follower displacement graph';};strTable( 3,:) = {'cam angle (degree)';'radius of curvature';'radius curvature graph';};labels = strTable( nFigType,:);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%***********************************%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%***********************************%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] = CalcResult( rb,rise,tmin,tmax,direction,ainc, segments, user_data  )fact=pi/180;% Compute the displacement of the flat-faced follower.  The variable% dtheta will change the resolution of the cam.  Make it smaller for% accurate results.		%dtheta=aincdtheta=ainc;sign=1;if direction=='+'	dtheta=-ainc;	sign=-1;endtemp=-dtheta;n=abs(360/dtheta);ctotal = n;%**********************************************************************************************************%**********************************************************************************************************% Compute the follower displacement and follower center coordinates % relative to cam.%input data from cam2.mb=user_data(1, 1:segments);ts=user_data(2, 1:segments);te=user_data(3, 1:segments);mot=user_data(4, 1:segments);deflect=user_data(5, 1:segments);hs=user_data(6, 1:segments);he=user_data(7, 1:segments);for i=1:segmentspts=(te(:,i)-ts(:,i))/dtheta;if pts > 0     %<-----------******************************    for j=1:pts	temp=temp+dtheta;	theta(j)=temp;	camangle(j)=abs(theta(j));            if mot(i)==1.0            coords=[hs(i) 0 0];%             fd(j)=0;%             fdd(j)=0;%             fddd(j)=0;        elseif mot(i)==2.0            coords=uniform(camangle(j),hs(i),he(i),ts(i),te(i));%             f(num)=ff(1);%             fd(num)=ff(2);%             fdd(num)=ff(3);%             fddd(num)=ff(4);        elseif mot(i)==3.0            coords=harmonic(camangle(j),hs(i),he(i),ts(i),te(i));%             f(num)=ff(1);%             fd(num)=ff(2);%             fdd(num)=ff(3);%             fddd(num)=ff(4);        elseif mot(i)==4.0            coords=cycloidal(camangle(j),hs(i),he(i),ts(i),te(i));%             f(num)=ff(1);%             fd(num)=ff(2);%             fdd(num)=ff(3);%             fddd(num)=ff(4);%%%%%%%%%%%%%%%%%%%%%%%% for "poly7" function  **************************        elseif mot(i)==5.0%                  n=(te(:,i)-ts(:,i))/dtheta;% %                 f(1:n)=0;%                 fd(1:n)=0;%                 fdd(1:n)=0;%                 fddd(1:n)=0;                    fd=0;                    fdd=0;                    fddd=0;%%%%%%%%%%%%%%%%%%%%%%%% "poly7" function  **************************    %        if mot(i)==5.0%             coords=poly7(camangle(j),hs(i),he(i),fd(ts(i)/dtheta+1),fd(te(i)/dtheta+1),...%                 fdd(ts(i)/dtheta+1),fdd(te(i)/dtheta+1),fddd(ts(i)/dtheta+1),fddd(te(i)/dtheta+1),ts(i),te(i));              coords=poly7(camangle(j),hs(i),he(i),fd,fd,...                fdd,fdd,fddd,fddd,ts(i),te(i));%            f(j)=coords(1);                        %        end%********************************************************************         end     % end of "if mot(i)==1.0"            f(j)=coords(1);    fp(j)=coords(2);	fpp(j)=coords(3);      end     % end of "for j=1:pts"      if i==1        f_1=f;         f_2=[]; f_3=[]; f_4=[]; f_5=[]; f_6=[]; f_7=[]; f_8=[]; f_9=[]; f_10=[];                fp_1=fp;         fp_2=[]; fp_3=[]; fp_4=[]; fp_5=[]; fp_6=[]; fp_7=[]; fp_8=[]; fp_9=[]; fp_10=[];                fpp_1=fpp;         fpp_2=[]; fpp_3=[]; fpp_4=[]; fpp_5=[]; fpp_6=[]; fpp_7=[]; fpp_8=[]; fpp_9=[]; fpp_10=[];                theta_1=theta;        theta_2=[]; theta_3=[]; theta_4=[]; theta_5=[];         theta_6=[]; theta_7=[]; theta_8=[]; theta_9=[]; theta_10=[];                camangle_1=camangle;         camangle_2=[]; camangle_3=[]; camangle_4=[]; camangle_5=[];         camangle_6=[]; camangle_7=[]; camangle_8=[]; camangle_9=[]; camangle_10=[];            elseif i==2        %f_1=[];         f_2=f;         f_3=[]; f_4=[]; f_5=[]; f_6=[]; f_7=[]; f_8=[]; f_9=[]; f_10=[];                fp_2=fp;         fp_3=[]; fp_4=[]; fp_5=[]; fp_6=[]; fp_7=[]; fp_8=[]; fp_9=[]; fp_10=[];                fpp_2=fpp;         fpp_3=[]; fpp_4=[]; fpp_5=[]; fpp_6=[]; fpp_7=[]; fpp_8=[]; fpp_9=[]; fpp_10=[];        %theta_1=[];         theta_2=theta;        theta_3=[]; theta_4=[]; theta_5=[];         theta_6=[]; theta_7=[]; theta_8=[]; theta_9=[]; theta_10=[];        %camangle_1=[];         camangle_2=camangle; camangle_3=[]; camangle_4=[]; camangle_5=[];         camangle_6=[]; camangle_7=[]; camangle_8=[]; camangle_9=[]; camangle_10=[];     elseif i==3        %f_1=[]; f_2=[];         f_3=f;         f_4=[]; f_5=[]; f_6=[]; f_7=[]; f_8=[]; f_9=[]; f_10=[];                fp_3=fp;         fp_4=[]; fp_5=[]; fp_6=[]; fp_7=[]; fp_8=[]; fp_9=[]; fp_10=[];                fpp_3=fpp;         fpp_4=[]; fpp_5=[]; fpp_6=[]; fpp_7=[]; fpp_8=[]; fpp_9=[]; fpp_10=[];                %theta_1=[]; theta_2=[];         theta_3=theta;        theta_4=[]; theta_5=[];         theta_6=[]; theta_7=[]; theta_8=[]; theta_9=[]; theta_10=[];        %camangle_1=[]; camangle_2=[];         camangle_3=camangle; camangle_4=[]; camangle_5=[];         camangle_6=[]; camangle_7=[]; camangle_8=[]; camangle_9=[]; camangle_10=[];     elseif i==4        %f_1=[]; f_2=[]; f_3=[];         f_4=f;         f_5=[]; f_6=[]; f_7=[]; f_8=[]; f_9=[]; f_10=[];                fp_4=fp;         fp_5=[]; fp_6=[]; fp_7=[]; fp_8=[]; fp_9=[]; fp_10=[];                fpp_4=fpp;         fpp_5=[]; fpp_6=[]; fpp_7=[]; fpp_8=[]; fpp_9=[]; fpp_10=[];                %theta_1=[]; theta_2=[]; theta_3=[];         theta_4=theta;        theta_5=[]; theta_6=[]; theta_7=[]; theta_8=[]; theta_9=[]; theta_10=[];        %camangle_1=[]; camangle_2=[]; camangle_3=[];         camangle_4=camangle; camangle_5=[];         camangle_6=[]; camangle_7=[]; camangle_8=[]; camangle_9=[]; camangle_10=[];    elseif i==5        %f_1=[]; f_2=[]; f_3=[]; f_4=[];         f_5=f;        f_6=[]; f_7=[]; f_8=[]; f_9=[]; f_10=[];                fp_5=fp;         fp_6=[]; fp_7=[]; fp_8=[]; fp_9=[]; fp_10=[];                fpp_5=fpp;         fpp_6=[]; fpp_7=[]; fpp_8=[]; fpp_9=[]; fpp_10=[];        %theta_1=[]; theta_2=[]; theta_3=[]; theta_4=[];         theta_5=theta;         theta_6=[]; theta_7=[]; theta_8=[]; theta_9=[]; theta_10=[];        %camangle_1=[]; camangle_2=[]; camangle_3=[]; camangle_4=[];         camangle_5=camangle;         camangle_6=[]; camangle_7=[]; camangle_8=[]; camangle_9=[]; camangle_10=[];    elseif i==6        %f_1=[]; f_2=[]; f_3=[]; f_4=[]; f_5=[];         f_6=f;        f_7=[]; f_8=[]; f_9=[]; f_10=[];                fp_6=fp;         fp_7=[]; fp_8=[]; fp_9=[]; fp_10=[];                fpp_6=fpp;         fpp_7=[]; fpp_8=[]; fpp_9=[]; fpp_10=[];                %theta_1=[]; theta_2=[]; theta_3=[]; theta_4=[]; theta_5=[];         theta_6=theta; theta_7=[]; theta_8=[]; theta_9=[]; theta_10=[];        %camangle_1=[]; camangle_2=[]; camangle_3=[]; camangle_4=[]; camangle_5=[];         camangle_6=camangle; camangle_7=[]; camangle_8=[]; camangle_9=[]; camangle_10=[];    elseif i==7        %f_1=[]; f_2=[]; f_3=[]; f_4=[]; f_5=[]; f_6=[];         f_7=f;        f_8=[]; f_9=[]; f_10=[];                fp_7=fp;         fp_8=[]; fp_9=[]; fp_10=[];                fpp_7=fpp;         fpp_8=[]; fpp_9=[]; fpp_10=[];                %theta_1=[]; theta_2=[]; theta_3=[]; theta_4=[]; theta_5=[];         %theta_6=[];         theta_7=theta; theta_8=[]; theta_9=[]; theta_10=[];        %camangle_1=[]; camangle_2=[]; camangle_3=[]; camangle_4=[]; camangle_5=[];         %camangle_6=[];         camangle_7=camangle; camangle_8=[]; camangle_9=[]; camangle_10=[];    elseif i==8        %f_1=[]; f_2=[]; f_3=[]; f_4=[]; f_5=[]; f_6=[]; f_7=[];         f_8=f;        f_9=[]; f_10=[];                fp_8=fp;         fp_9=[]; fp_10=[];                fpp_8=fpp;         fpp_9=[]; fpp_10=[];                %theta_1=[]; theta_2=[]; theta_3=[]; theta_4=[]; theta_5=[];         %theta_6=[]; theta_7=[];         theta_8=theta; theta_9=[]; theta_10=[];        %camangle_1=[]; camangle_2=[]; camangle_3=[]; camangle_4=[]; camangle_5=[];         %camangle_6=[]; camangle_7=[];         camangle_8=camangle; camangle_9=[]; camangle_10=[];    elseif i==9        %f_1=[]; f_2=[]; f_3=[]; f_4=[]; f_5=[]; f_6=[]; f_7=[]; f_8=[];         f_9=f;        f_10=[];                fp_9=fp;         fp_10=[];                fpp_9=fpp;         fpp_10=[];                %theta_1=[]; theta_2=[]; theta_3=[]; theta_4=[]; theta_5=[];         %theta_6=[]; theta_7=[]; theta_8=[];         theta_9=theta; theta_10=[];        %camangle_1=[]; camangle_2=[]; camangle_3=[]; camangle_4=[]; camangle_5=[];         %camangle_6=[]; camangle_7=[]; camangle_8=[];         camangle_9=camangle; camangle_10=[];    elseif i==10        %f_1=[]; f_2=[]; f_3=[]; f_4=[]; f_5=[]; f_6=[]; f_7=[]; f_8=[]; f_9=[];         f_10=f;        fp_10=fp;                 fpp_10=fpp;                 %theta_1=[]; theta_2=[]; theta_3=[]; theta_4=[]; theta_5=[];         %theta_6=[]; theta_7=[]; theta_8=[]; theta_9=[];         theta_10=theta;        %camangle_1=[]; camangle_2=[]; camangle_3=[]; camangle_4=[]; camangle_5=[];         %camangle_6=[]; camangle_7=[]; camangle_8=[]; camangle_9=[];         camangle_10=camangle;        end    f=[];   % empty the buffer    fp=[];    fpp=[];    theta=[];    camangle=[];end     % end of "if pts > 0"  <-----------******************************end     % end of "for i=1:segments"f=[f_1 f_2 f_3 f_4 f_5 f_6 f_7 f_8 f_9 f_10];fp=[fp_1 fp_2 fp_3 fp_4 fp_5 fp_6 fp_7 fp_8 fp_9 fp_10];fpp=[fpp_1 fpp_2 fpp_3 fpp_4 fpp_5 fpp_6 fpp_7 fpp_8 fpp_9 fpp_10];theta=[theta_1 theta_2 theta_3 theta_4 theta_5 theta_6 theta_7 theta_8 theta_9 theta_10];camangle=[camangle_1 camangle_2 camangle_3 camangle_4 camangle_5 camangle_6 camangle_7 ...        camangle_8 camangle_9 camangle_10];%  size_f=size(f)             % check the size of the vectors%  size_theta=size(theta)%  size_cam=size(camangle)      for j=1:n    tt=theta(j)*fact;	if tt<0; tt=tt+2*pi; end	ct=cos(tt);	st=sin(tt);	xc(j)=(rb+f(j))*ct-sign*fp(j)*st;	yc(j)=(rb+f(j))*st+sign*fp(j)*ct;	rho(j)=rb+f(j)+	fpp(j);end%************************************************************************************************%************************************************************************************************%************************************************************************************************xc(n+1)=xc(1);yc(n+1)=yc(1);rhom=2*sqrt((max(xc))^2+(max(yc))^2);for j=1:1:n	rhod(j)=rho(j);	if abs(rho(j))>rhom		rhod(j)=rhom*rho(j)/abs(rho(j));	endend	% Set up coordinates of bushings and pins.rpivot=rb/10;ninc=20;  npoints=ninc+1;centerx=0;centery=0;coord=circle2(rpivot,centerx,centery,ninc);% find coordinates of cam pinfor i=1:1:npoints	xcoordcp(i)=coord(i,1);	ycoordcp(i)=coord(i,2);end% Find coordinates of cam bushingbinc=ninc/2;coord1=bushing(rpivot,centerx,centery,binc,0);bpoints=ninc/2+16;for i=1:1:bpoints	xbush(i)=coord1(i,1);	ybush(i)=coord1(i,2);end% Set up coordinates of follower face in position 1.flag=1;npointf=ninc+1;x0=xc(1);y0=yc(1)-tmin;height=tmax+tmin;length=0.1*height;angle=0;coord = rect(length,height,x0,y0,angle,flag);% find coordinates of follower facefor i=1:1:5	xcoordf(i)=coord(i,1);	ycoordf(i)=coord(i,2);end% Find coordinates of follower stemcenterxf=x0+length;centeryf=0;xstem(1)=centerxf;ystem(1)=centeryf+length/2;xstem(2)=xstem(1)+2*rise;ystem(2)=ystem(1);xstem(4)=centerxf;ystem(4)=centeryf-length/2;xstem(3)=xstem(2);ystem(3)=ystem(4);% set up coordinates of top sliderline.		length=rise;ndash=8;xe = xstem(1)+rise;ye = ystem(1)+0.3*(ystem(1)-ystem(3));flag=-1;coordf1=frameline(length,xe,ye,ndash,0,flag);					npoints1=3*ndash;for i=1:1:npoints1	xsl1(i)=coordf1(i,1);	ysl1(i)=coordf1(i,2);end% set up coordinates of bottom sliderline.ye = ystem(3)-0.3*(ystem(1)-ystem(3));flag=1;coordf2=frameline(length,xe,ye,ndash,0,flag);					for i=1:1:npoints1	xsl2(i)=coordf2(i,1);	ysl2(i)=coordf2(i,2);end% Loop to analyze the cam machanism for a full cyclenposn=30;rotinc=floor(n/nposn);  %rotation increment to get nrot positions per rotationk=0;jj=0;for j=1:1:n	jj=jj+1;	Q21=-theta(j);	Q2 = Q21*fact;	ct=cos(Q2);	st=sin(Q2);% Translate the follower by f(j)	for i=1:1:4		k=k+1;		xstema(jj,i)=xstem(i)+f(j);		ystema(jj,i)=ystem(i);		tempx(k)=xstema(jj,i);		tempy(k)=ystema(jj,i);	end	for i=1:1:5		k=k+1;			xfollower(jj,i)=xcoordf(i)+f(j);		yfollower(jj,i)=ycoordf(i);		tempx(k)=xfollower(jj,i);		tempy(k)=yfollower(jj,i);	end% rotate the cam coordinates by theta(j)	ii=0;% Modify the original program so that it will be suitable for animation% requirement. That is, it will have all the data instead of data% only for specific variable ainc.	for i=1:1:n		ii=ii+1;		k=k+1;			xca(jj,ii)=xc(i)*ct-yc(i)*st;		yca(jj,ii)=xc(i)*st+yc(i)*ct;			tempx(k)=xca(jj,ii);		tempy(k)=yca(jj,ii);	end	xca(jj,ii+1)=xc(1)*ct-yc(1)*st;   yca(jj,ii+1)=xc(1)*st+yc(1)*ct;endjtotal = jj;ntotal = ii+1;%ntotal = ctotal = n% Set the axis limits for the graphs.  Start with the cam mechanism% position graphwidth=0.95;height=0.95;		 xmina=min(tempx)-0.3*abs(min(tempx));xmaxa=max(tempx)+0.1*abs(max(tempx));ymina=min(tempy)-0.2*abs(min(tempy));ymaxa=max(tempy)+0.2*abs(max(tempy));rangex=xmaxa-xmina;rangey=ymaxa-ymina;xmin=xmina-0.05*rangex;xmax=xmaxa+0.05*rangex;ymin=ymina-0.05*rangey;ymax=ymaxa+0.05*rangey;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin=values(1);xmax=values(2);ymin=values(3);ymax=values(4);% Decide the matrix size itotal = max([bpoints ntotal ctotal]);rtotal = 31+jtotal*2;res = zeros( rtotal, itotal);i = 0;i = i+1; res( i,1:ctotal ) = camangle;i = i+1; res( i,1:ctotal ) = f;i = i+1; res( i,1:ctotal ) = camangle;i = i+1; res( i,1:ctotal ) = rho;i = i+1; res( i,1:bpoints ) = xbush;i = i+1; res( i,1:bpoints ) = ybush;i = i+1; res( i,1:npoints ) = xcoordcp;i = i+1; res( i,1:npoints ) = ycoordcp;i = i+1; res( i,1:npoints1 ) = xsl1;i = i+1; res( i,1:npoints1 ) = ysl1;i = i+1; res( i,1:npoints1 ) = xsl2;i = i+1; res( i,1:npoints1 ) = ysl2;i = i+1; res( i:i+jtotal-1,1:ntotal ) = xca;i = i+jtotal; res( i:i+jtotal-1,1:ntotal ) = yca;xstema = xstema';ystema = ystema';i = i+jtotal; res( i:i+3,1:jtotal ) = xstema;i = i+4; res( i:i+3,1:jtotal ) = ystema;xfollower = xfollower';yfollower = yfollower';i = i+4; res( i:i+4,1:jtotal ) = xfollower;i = i+5; res( i:i+4,1:jtotal ) = yfollower;i = i+5;res( i,1:4 ) = [xmin xmax ymin ymax];res( i,5 ) = rise;res( i,6:12 ) = [bpoints npoints npoints1 jtotal ntotal ctotal rotinc ];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateMechanismHandles( handle,axislimits,xcoordcp,ycoordcp,xbush,ybush,xsl,ysl) axes(handle);%setup the aspect ratio of the mechanism to 1 set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;xmin = axislimits(1);xmax = axislimits(2);ymin = axislimits(3);ymax = axislimits(4);axis([xmin xmax ymin ymax]);%cam=animatedline('linewidth' ,1,'color', 'k');%face=animatedline('linewidth' ,1,'color', 'k');%stem=animatedline('linewidth',1,'color', 'k');cam=line('linewidth' ,1,'color', 'k');face=line('linewidth' ,1,'color', 'k');stem=line('linewidth',1,'color', 'k');baset=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'r');baseb=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'r');bush=line('xdata',[],'ydata',[], 'color', 'r');pin=line('xdata',[],'ydata',[], 'color', 'r');% Define the axes for the radius of curvature% Draw the fixed curves first.set(pin,'xdata', xcoordcp, 'ydata',ycoordcp);set(bush,'xdata', xbush,'ydata', ybush);set (baset,'xdata', xsl(1,:), 'ydata',ysl(1,:))set (baseb,'xdata', xsl(2,:), 'ydata',ysl(2,:))hdls=[cam face stem];set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition( links,i,xca,yca,xstema,ystema,xfollower,yfollower)cam = links(1);face = links(2);stem = links(3);[nn,mm] = size(xca);for j=1:1:mm	xcam(j)=xca(i,j);	ycam(j)=yca(i,j);endfor j=1:1:4	xstemn(j)=xstema(i,j);	ystemn(j)=ystema(i,j);endfor j=1:1:5	xface(j)=xfollower(i,j);	yface(j)=yfollower(i,j);endset(cam,'xdata',xcam,'ydata', ycam)set(face,'xdata', xface,'ydata', yface);set(stem,'xdata', xstemn,'ydata', ystemn);% clearpoints(cam);% addpoints(cam,xcam,ycam);% clearpoints(face);% addpoints(face,xface,yface);% clearpoints(stem);% addpoints(stem,xstemn,ystemn);
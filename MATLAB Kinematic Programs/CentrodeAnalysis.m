function []=CentrodeAnalysis(Action,Argument2)% centrode.m% MATLAB program for finding centrodes of  crank-rocker mechanism%Variables%   r1=frame length (cm)%   r2=crank length (cm)%   r3=coupler length (cm)%   r4=rocker length (cm)%   cr1=coupler radius (cm) (to point D1 from the crank pin)%   beta1=coupler angle (deg) (to point D2 from the rocker pin)%   cpad=coupler angle (rad) (to point D2 from the rocker pin)%   Q1=frame angle (deg)%   Q11=frame angle (rad)%   Q2=crank angle (rad)%   Q21=crank angle (deg)%   Q22=crank angle (deg) (vector)%   Q3,Q33=coupler angle (deg)%   Q4,Q44=rocker angle (deg)%   cang1=angle from the line connecting the coupler point one and the crank pin (rad)%   cang2=angle from the line connecting the coupler point two and the rocker pin (rad)%   mode=assembly mode%   tt=number of cycles to animate%   dt=number of animation positions per revolution%   itotal=number of animation positions%   cycle=number of cycles as an integer%   bush1,bush2=x,y coordinates of the bushings%   cir1,cir2=x,y coordinates of the circles inside the bushings%   Bx,By=x,y coordinates of the crank pin%   Cx,Cy=x,y coordinates of the rocker pin%   Bx2,By2=x,y coordinates of the crank pointer%   Cx2,Cy2=x,y coordinates of the rocker pointer%   d2r,r2d=conversion factors between radians and degrees%   i=counting variable%   ans=repetition variable%	readmode = 2 if data are to be read in interactively%			=1 if the data are to be read in through a file.%Graphics variables%   xmin,xmax,ymin,ymax=axes limits%   displ=line representing the crank angle vs. rocker angle%   dbead=bead which follows the crank angle/rocker angle throughout animation%   bushy1=line representing the bushing at the crank hinge%   bushy2=line representing the bushing at the rocker hinge%   circ1=line representing the circle inside the bushing at the crank hinge %   circ2=line representing the circle inside the bushing at the rocker hinge%   joint1=line representing the joint at the crank pin %   joint2=line representing the joint at the rocker pin%   crank=line representing the crank %   coupler=line representing the coupler%   rocker=line representing the rocker%   couplerptr=line representing the coupler point%   couplerpt1=line from the crank pin to the coupler point one%   couplerpt2=line from the rocker pin to the coupler point two% program global g_AnaRes%g_AnaRes = zeros(36,3);if nargin == 0 && isempty(findobj('Tag','centrode_dsgn'))	Action = 'initialize';elseif nargin == 0 && ~isempty(findobj('Tag','centrode_dsgn'))   Action = 'None';endif ~strcmp(Action,'initialize') && ~strcmp(Action,'Help')% To retrieve handles for uicontrols      a = findobj('Tag','centrode_dsgn');   UD=a.UserData;   handles = UD.hand;   h_edit = handles(1:5);   h_status = handles(6);   for i = 1:5      val(i) = get(h_edit(i),'userdata');   end   r1 = val(1);   r2 = val(2);   r3 = val(3);   r4 = val(4);   Q1 = val(5);   % To retrieve graphics handles      b = findobj('Tag','centrode_axes');   UD=b.UserData;   handles =UD.hand;   joint1 = handles(1);   joint2 = handles(2);   crank = handles(3);   coupler = handles(4);   rocker = handles(5);   fcentrode = handles(6:8);   gridpt = handles(9);   bushy1 = handles(10);   bushy2 = handles(11);   circ1 = handles(12);   circ2 = handles(13);   mcentrode = handles(14:16);endswitch Actioncase 'None' 	findobj('Tag','centrode_dsgn');case 'initialize'   if nargin >= 2 || ~isempty(findobj('tag','menu_page'))	   LocalOpenFig;	   CentrodeAnalysis('Draw Axes');   else   	show_me_logo('initialize','CentrodeAnalysis');   end   case 'Draw Axes'   	ttt1=1;	ddx1=1;	ddy1=1;	Q11=Q1*pi/180;% Define constants	mode=-1;	i=0;	d2r=pi/180;	r2d=180/pi;	dddx=1;	dddy=1;	qstart=0.0;	qstop=360.0;   % Check for the Grashof type	r=[r1 r2 r3 r4];	[rnew,Inew]=sort(r);	drock=1;	if (rnew(1)+rnew(4)<rnew(2)+rnew(3))    		drock=0;		if r3==rnew(1); drock=1; end			end	if drock ==1		qstart=1.00001*r2d*acos(((r2+r3)^2+r1^2-r4^2)/(2*r1*(r2+r3)));		qstop=0.99999*r2d*acos((r1^2+r2^2-(r3+r4)^2)/(2*r1*r2));	end	% Loop to analyze the linkage for tt full cycles	icent1=1;	icent2=1;	dt=(qstop-qstart)/60;	for Q21 = qstart:dt:qstop;		i=i+1;		Q2 = Q21*d2r;	% Call function to compute the position		para = fourbar(r1,r2,r3,r4,Q21,1,0,mode,Q1,2); 		Q3=para(7);		Q33(i)=Q3;		Q4=para(8);		Q44(i)=Q4;		assem=para(29);% Store position information in matrices.		Bx(i)= para(17);		By(i)= para(18);		Cx(i)= para(19);		Cy(i)= para(20);		a1(1)=0.0;		a1(2)=0.0;		a2(1)=Bx(i);		a2(2)=By(i);		b1(1)=r1*cos(Q11);		b1(2)=r1*sin(Q11);		b2(1)=Cx(i);		b2(2)=Cy(i);		coords=lineintersect(a1,a2,b1,b2);		Dx4(i)=coords(1);		Dy4(i)=coords(2);% Check distance to instant center.  If it is large, % set it near the previous value.		if i~=1; 			ddx2=Dx4(i)-Dx4(i-1);			ddy2=Dy4(i)-Dy4(i-1);					if ddx1 ~= 0; dddx=ddx2/ddx1; end			if ddy1 ~= 0; dddy=ddy2/ddy1; end			if dddx > 0 || dddy > 0 				ddx1=ddx2;				ddy1=ddy2;			end		end		if i > 1 && dddx<0 && dddy<0			if icent1==1; 				icent1=i-1;			end			if icent2==1 && icent1~=i-1; 				icent2=i-1;			end		end		% Compute the angle to the moving centrode		Qp=r2d*atan2((Dy4(i)-By(i)), (Dx4(i)-Bx(i)));			Qbeta(i)=Qp-Q3;		r5(i)=sqrt((Dy4(i)-By(i))^2+(Dx4(i)-Bx(i))^2);		Q22(i) = Q21;	end		itotal=i;% Determine the three parts of the centrode.	jstop1=itotal;	jstop2=itotal;	if icent1~=1; jstop1=icent1; end	for j=1:1:jstop1		Dx1(j)=Dx4(j);		Dy1(j)=Dy4(j);	end	% Determine the second part of the centrode	k=0;	Dx2(1)=Dx4(itotal);	Dy2(1)=Dy4(itotal);	jstart2=icent1+1;	jstop2=icent2;	if icent2==1; jstop2 = itotal; end	if icent1==1; jstart2 = itotal; end	for j=jstart2:1:jstop2;		k=k+1;		Dx2(k)=Dx4(j);		Dy2(k)=Dy4(j);	end	ktotal = k;% Determine the third part of the centrode	m=0;	jstart3=icent2+1;	jstop3=itotal;	if icent2==1; jstop3 = itotal; end	if icent2==1; jstart3 = itotal; end	for j=jstart3:1:jstop3;		m=m+1;		Dx3(m)=Dx4(j);		Dy3(m)=Dy4(j);	end	mtotal = m;	% Find the coordinates of the moving centrode for each position.% Start with first part. 	for k=1:1:itotal		for j=1:1:jstop1			angle=(Qbeta(j)+Q33(k))*d2r;			centx1(k,j)=Bx(k)+r5(j)*cos(angle);			centy1(k,j)=By(k)+r5(j)*sin(angle);		end	% Do the second part.		l=0;		for j=jstart2:1:jstop2			l=l+1;			angle=(Qbeta(j)+Q33(k))*d2r;			centx2(k,l)=Bx(k)+r5(j)*cos(angle);			centy2(k,l)=By(k)+r5(j)*sin(angle);		end% Do the third part.		m=0;		for j=jstart3:1:itotal			m=m+1;			angle=(Qbeta(j)+Q33(k))*d2r;			centx3(k,m)=Bx(k)+r5(j)*cos(angle);			centy3(k,m)=By(k)+r5(j)*sin(angle);		end    end    % Set up the axes for first drawing.	Ex = r1*cos(Q11);	Ey = r1*sin(Q11);		max1=max(Bx);	max2=max(Cx);	max3=max(Dx4);	max4=max(centx1);	max5=max(centx2);	max6=max(centx3);	xmax=max([max1, max2, max3, max4, max5, max6, Ex]);	if xmax>3*r1; xmax=3*r1; end		max1=max(By);	max2=max(Cy);	max3=max(Dy4);	max4=max(centy1);	max5=max(centy2);	max6=max(centy3);	ymax=max([max1, max2, max3, max4, max5, max6, Ey]);	if ymax>6*r4; ymax=6*r4; end		min1=min(Bx);	min2=min(Cx);	min3=min(Dx4);	min4=min(centx1);	min5=min(centx2);	min6=min(centx3);	xmin=min([min1, min2, min3, min4, min5, min6, Ex]);	if xmin<-3*r1; xmin=-3*r1; end	min1=min(By);	min2=min(Cy);	min3=min(Dy4);	min4=min(centy1);	min5=min(centy2);	min6=min(centy3);	ymin=min([min1, min2, min3, min4, min5, min6, Ey]);	if ymin<-2*r4; ymin=-2*r4; end      width = 0.95;   height = 0.95;%get the bushing points	bush1=bushing(((ymax-ymin)/50),0,0,20,0);	cir1=circle2(((ymax-ymin)/60),0,0,20);	bush2=bushing(((ymax-ymin)/50), Ex, Ey, 20,0);	cir2=circle2(((ymax-ymin)/60), Ex, Ey, 20);	max1=max(bush1(:, 1));	max2=max(bush2(:, 1));	xmax1=max([max1, max2, xmax]);   max1=max(bush1(:, 2));   max2=max(bush2(:, 2));	ymax1=max([max1, max2, ymax]);	min1=min(bush1(:, 1));	min2=min(bush2(:, 1));	xmin1=min([min1, min2, xmin]);	min1=min(bush1(:, 2));	min2=min(bush2(:, 2));	ymin1=min([min1, min2, ymin]);	xmin=xmin1-0.05*abs(xmax1-xmin1);	xmax=xmax1+0.05*abs(xmax1-xmin1);	ymin=ymin1-0.05*abs(ymax1-ymin1);	ymax=ymax1+0.05*abs(ymax1-ymin1);	values=axisadjust(xmin, xmax, ymin, ymax, width, height);	xmin=values(1);	xmax=values(2);	ymin=values(3);	ymax=values(4);	axis([xmin xmax ymin ymax]);% draw the pushings.	set(circ1,'xdata', cir1(:,1), 'ydata', cir1(:,2));	set(bushy1,'xdata', bush1(:,1),'ydata', bush1(:,2));	set(circ2,'xdata', cir2(:,1), 'ydata', cir2(:,2));	set(bushy2,'xdata', bush2(:,1),'ydata', bush2(:,2));   % Draw the coupler curve first.	set(fcentrode(1),'xdata', Dx1, 'ydata' ,Dy1);	set(fcentrode(2),'xdata', Dx2, 'ydata' ,Dy2);   set(fcentrode(3),'xdata', Dx3, 'ydata' ,Dy3);   % Draw the linkages    	i = floor(itotal/2);   set(rocker,'xdata', Ex,'ydata', Ey);	set(joint1,'xdata', Bx(i), 'ydata',By(i));	set(joint2,'xdata', Cx(i), 'ydata',Cy(i));	set(crank,'xdata',[0 Bx(i)],'ydata', [0 By(i)]);	set(coupler,'xdata', [Bx(i) Cx(i)],'ydata', [By(i) Cy(i)]);	set(rocker,'xdata', [Ex Cx(i)],'ydata', [Ey Cy(i)]);	set(mcentrode(1),'xdata', [centx1(i,:)],'ydata' ,[centy1(i,:)]);	set(mcentrode(2),'xdata', [centx2(i,:)],'ydata' ,[centy2(i,:)]);	set(mcentrode(3),'xdata', [centx3(i,:)],'ydata' ,[centy3(i,:)]);	set(gridpt,'xdata',Dx4(i), 'ydata' ,Dy4(i));%flush the draw buffer	refresh; case 'Change Value'   n = Argument2;   val = [r1 r2 r3 r4 Q1];	newval=get(h_edit(n),'string');	val=check_val(val(n),newval);	set(h_edit(n),'UserData',val,'string',num2str(val));	CentrodeAnalysis('Draw Axes');         case 'None'      	% the following command will bring the existing figure 	% to foreground	a = findobj('Tag','centrode_dsgn');	figure(a);   case 'Close'   	% if the target window exist then close it	if ~isempty(findobj('Tag','Centrode Analysis Window'))      centrode_ana('Stop');      a = findobj('Tag','Centrode Analysis Window');   	  	close(a);	end   	a = findobj('Tag','centrode_dsgn');	close(a);   case 'Analysis'   centrode_ana('initialize',r1,r2,r3,r4,Q1);   case 'Show Definitions'   Show_definition('initialize','CentrodeAnalysis.jpg');   case 'Help'%-------On-line help     HelpStr={'Centrode Design';    '';    '    "CentrodeAnalysis" is a program  to generate the moving and fixed';    'centrod for the coupler of a fourbar linkage.   The  program contains';    'two windows:a design window and an analysis window.  The nomenclature';    'used  by  the  program  is that  given in  the  textbook, Kinematics,';    'Dynamics, and Design of Mechanisms by Kenneth Waldron and Gary Kinzel.';    '';    '    In the  design  window, the  variables  are  the four link length';    '(frame, crank, coupler and rocker) and the frame angle. ';    '';    '    In the analysis  window, the  moving  centrode  of the coupler is';    'displayed.   Also the animation  speed  can  be  easily  adjusted  by';    'clicking on the speed buttons.';    ' '};   helpwin(HelpStr,'Centrode Design');   case 'Get File'% Get the file name using the UIGETFILE	[sFileName sFilePath] = uigetfile('*.dat','Load File');  	if sFileName == 0 && sFilePath == 0	   return;	end      % Combine the path and file name together	sTemp = strcat( sFilePath, sFileName );% get the size to erase the '.dat' extension   	sz  = size(sFileName);% load the data file  	load(sTemp);% assign the parameter to a variable	Parameter = eval(sFileName(1:(sz(2)-4)));	if max(size((Parameter))) == 5      val = Parameter(1:5);      for i = 1:5			set(h_edit(i),'UserData',val(i),'string',num2str(val(i)));      end      CentrodeAnalysis('Draw Axes');         	refresh;	else	   set(h_status,'string','invalid file format');  	   return;	end             case 'Put File'	[sFileName sFilePath] = uiputfile('*.dat','Save As');	ParameterData = [r1; r2; r3; r4; Q1];  %sTemp = strcat( sFilePath, sFileName);	[sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);	[strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');	eval(strCmd);   end   function val=check_val(oldval,newval)% Check if the user input is number input% if not, retrieve the previous value in userdataval=zeros(1);if ~isequal(length(oldval),length(str2num(newval))),  	val=oldval;%	set(findobj(gcf,'Tag','status_txt'),'String', ...%   ['Warning: An invalid property value has been entered.']);else  	val=str2num(newval);endfunction LocalOpenFig()hdls = zeros(25,0);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Control the color of the UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%StdColor = get(0,'DefaultUIcontrolBackgroundColor');%PointsPerPixel = 72/get(0,'ScreenPixelsPerInch');bgframe = StdColor;bgedit = [1 1 1];bgtext = bgframe;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Main Figure of Crank Rocker Design%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 480;sy = 400;FigPos = [ 10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','pixels', ...	'Color',[0.8 0.8 0.8], ...	'Name','Centrode Analysis', ...	'NumberTitle','off', ...	'Position',FigPos, ...  	'Tag','centrode_dsgn');  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');  c = uimenu('Parent',b, ...	'Callback','CentrodeAnalysis(''Get File'')', ...	'Label','Load Parameters', ...	'Tag','submenu_load');   c = uimenu('Parent',b, ...	'Callback','CentrodeAnalysis(''Put File'')', ...	'Label','Save Parameters', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Draw Frame First% This will prevent the frames from been drawn on top of% other UICONTROLS. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0125 0.0119332 0.98 0.1106], ...	'Style','frame', ...	'Tag','Frame_status');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6125 0.43 0.38 0.545], ...	'Style','frame');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6125 0.315 0.38 0.1075], ...	'Style','frame');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6125 0.2225 0.38 0.085], ...	'Style','frame');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6125 0.13 0.38 0.0850], ...	'Style','frame', ...	'Tag','Frame_pushbutton');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create graphics window for design input%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-------Reference axisb = axes('Parent',a, ...  	'Box','on', ...  	'Color',[1 1 1], ...	'Position',[0.0125 0.13 0.5896 0.85], ...  	'XColor',[0 0 0], ...  	'XGrid','off', ...  	'XTick',[],...  	'YColor',[0 0 0], ...  	'YGrid','off', ...  	'YTick',[], ...  	'ZColor',[0 0 0], ...  	'ZGrid','off', ...  	'ZTick',[]);  b = axes('Parent',a, ...   'Box','off', ...  	'DataAspectRatio',[1 1 1],...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Position',[0.0125 0.13 0.5896 0.85], ...	'Tag','centrode_axes');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Editable box controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_edit(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CentrodeAnalysis(''Change Value'',1)', ...	'Position',[0.8333 0.805 0.1333 0.06313], ...	'String','3', ...	'Style','edit', ...	'UserData',3);   h_edit(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CentrodeAnalysis(''Change Value'',2)', ...	'Position',[0.8333 0.7025 0.1333 0.06313], ...	'String','3', ...	'Style','edit', ...	'UserData',3);   h_edit(3) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CentrodeAnalysis(''Change Value'',3)', ...	'Position',[0.8333 0.595 0.1333 0.06313], ...	'String','2', ...	'Style','edit', ...	'UserData',2);   h_edit(4) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CentrodeAnalysis(''Change Value'',4)', ...	'Position',[0.8333 0.4875 0.1333 0.06313], ...	'String','3', ...	'Style','edit', ...	'UserData',3);   h_edit(5) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CentrodeAnalysis(''Change Value'',5)', ...	'Position',[0.8333 0.335 0.1333 0.06313], ...	'String','0', ...	'Style','edit', ...	'UserData',0);   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% push button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CentrodeAnalysis(''Help'')', ...	'Position',[0.6208 0.235 0.1801 0.0625], ...	'String','Info', ...	'Tag','CloseButon');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CentrodeAnalysis(''Show Definitions'')', ...	'Position',[0.803 0.235 0.1801 0.0625], ...	'String','Definitions', ...	'Tag','CloseButon');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CentrodeAnalysis(''Analysis'')', ...	'Position',[0.6208 0.14 0.1801 0.0625], ...	'String','Analysis', ...	'Tag','AnalysisButton');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CentrodeAnalysis(''Close'')', ...	'Position',[0.803 0.14 0.1801 0.0625], ...	'String','Close', ...	'Tag','CloseButon');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% text controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_status = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'HorizontalAlignment','left', ...	'Position',[0.05625 0.0275 0.9083 0.0775], ...	'String',' ', ...	'Style','text', ...	'Tag','status_txt');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6937 0.9050 0.2 0.04], ...	'String','link length', ...	'Style','text');       b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.8125 0.2 0.04], ...	'String','frame length', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.7075 0.2 0.04], ...	'String','crank length', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.605 0.2 0.04], ...	'String','coupler length', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.5 0.2 0.04], ...	'String','rocker length', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.3475 0.2 0.04], ...	'String','frame angle', ...	'Style','text');   axis off;hdls = [h_edit h_status ];a = findobj('Tag','centrode_dsgn');set(a,'UserData',struct('hand',hdls));	% Set up the vectors needed to draw the linkagejoint1=line('xdata', [], 'ydata', [], 'marker', 'o', 'color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o', 'color','k');crank=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'k');rocker=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');fcentrode(1)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r');	fcentrode(2)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r');	fcentrode(3)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r');	gridpt=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'markersize',6,'color', 'k', 'marker', 'o');	bushy1=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');bushy2=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');circ1=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');circ2=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');mcentrode(1)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');	mcentrode(2)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');	mcentrode(3)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');	hdls = [	joint1 joint2 crank coupler ...      rocker fcentrode gridpt bushy1 ...		bushy2 circ1 circ2 mcentrode];b = findobj('Tag','centrode_axes');set(b,'userdata',struct('hand',hdls));drawnow;   	
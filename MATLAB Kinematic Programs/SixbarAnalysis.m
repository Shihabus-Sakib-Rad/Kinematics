function []=SixbarAnalysis(Action,Argument2)% MATLAB program for analyzing sixbar Stephenson's mechanism.%Variables%   r1=frame length (cm)%   r2=crank length (cm)%   r3=coupler length (cm)%   r4=rocker length (cm)%   cr1=coupler radius (cm) (to point D1 from the crank pin)%   beta1=coupler angle (deg) (to point D2 from the rocker pin)%   cpad=coupler angle (rad) (to point D2 from the rocker pin)%   dmode=assembly mode for dyad (+1 or -1)%   Q1=frame angle (deg)%   Q11=frame angle (rad)%   Q2=crank angle (rad)%   Q21=crank angle (deg)%   Q22=crank angle (deg) (vector)%   Q3,Q33=coupler angle (deg)%   Q4,Q44=rocker angle (deg)%   w2=angular velocity of the crank (rad/sec)%   w22=w2 (vector)%   w33=angular velocity of the coupler (rad/sec)%   w44=angular velocity of the rocker (rad/sec)%   cang1=angle from the line connecting the coupler point one and the crank pin (rad)%   cang2=angle from the line connecting the coupler point two and the rocker pin (rad)%   mode,assem=assembly mode%   tt=number of cycles to animate%   dt=number of animation positions per revolution%   itotal=number of animation positions%   cycle=number of cycles as an integer%   bush1,bush2=x,y coordinates of the bushings%   cir1,cir2=x,y coordinates of the circles inside the bushings%   Bx,By=x,y coordinates of the crank pin%   Cx,Cy=x,y coordinates of the rocker pin%   Bx2,By2=x,y coordinates of the crank pointer%   Cx2,Cy2=x,y coordinates of the rocker pointer%   d2r,r2d=conversion factors between radians and degrees%   i=counting variable%   ans=repitition variable%Graphics variables%   xmin,xmax,ymin,ymax=axes limits%   h1=handle on the first axes in the window (crank angle vs. rocker angle)%   h2=handle on the second axes in the window (crank angle vs. rocker velocity)%   h3=handle on the third axes in the window (crank angle vs. input torque)%   h4=handle on the fourth axes in the window (linkage animation)%   displ=line representing the crank angle vs. rocker angle%   vel=line representing the crank angle vs. rocker velocity%   dbead=bead which follows the crank angle/rocker angle throughout animation%   vbead=bead which follows the crank angle/rocker velocity throughout animation%   tbead=bead which follows the crank angle/input torque throughout animation%   bushy1=line representing the bushing at the crank hinge%   bushy2=line representing the bushing at the rocker hinge%   circ1=line representing the circle inside the bushing at the crank hinge %   circ2=line representing the circle inside the bushing at the rocker hinge%   joint1=line representing the joint at the crank pin %   joint2=line representing the joint at the rocker pin%   crank=line representing the crank %   coupler=line representing the coupler%   rocker=line representing the rocker%   couplerptr=line representing the coupler point%   couplerpt1=line from the crank pin to the coupler point one%   couplerpt2=line from the rocker pin to the coupler point two%Program  global nBetaflagglobal nCradiusflagglobal nGflagif nargin==0 && isempty(findobj('Tag','sixbar_dsgn'))	Action='initialize';elseif nargin==0 && ~isempty(findobj('Tag','sixbar_dsgn'))	Action='None';endif ~strcmp(Action,'initialize') && ~strcmp(Action,'Help')	a=findobj('Tag','sixbar_dsgn');%To retrieve handles for uicontrols	    UD=a.UserData;    hdls = UD.hand;	h_beta = hdls(1);	h_Q = hdls(2);	h_R = hdls(3:9);	h_vel = hdls(10);	h_ASradio = hdls(11:12);  	h_Gx = hdls(13);  	h_Gy = hdls(14);  	h_status = hdls(15);	beta = get(h_beta,'userdata');  	Q1 = get(h_Q,'userdata'); %slider line angle  	Gx = get(h_Gx,'userdata'); %bushing3 x coordinate  	Gy = get(h_Gy,'userdata'); %bushing3 y coordinate  	for i = 1 : 7     	r(i) = get(h_R(i),'userdata');  	end   	r1 = r(1); %frame length	r2 = r(2); %crank length	r3 = r(3); %coupler length	r4 = r(4); %rocker offset	r5 = r(5); %r5 length	r6 = r(6); %r6 length	cr = r(7); %coupler point radius      if get(h_ASradio(1),'value') == 1     	dmode = 1;   else     	dmode = -1;   end           w2 = get(h_vel,'userdata');      b=findobj('Tag','sixbar_axe');   UD=b.UserData;   hdls = UD.hand;   joint1 = hdls(1);          joint2 = hdls(2);          joint3 = hdls(3);          joint4 = hdls(4);          crank = hdls(5);          coupler = hdls(6);          rocker = hdls(7);          r5link = hdls(8);          r6link = hdls(9);          couplerptr = hdls(10);          couplerpt1 = hdls(11);          bushy1 = hdls(12);          bushy2 = hdls(13);          bushy3 = hdls(14);          circ1 = hdls(15);          circ2 = hdls(16);          circ3 = hdls(17);       endswitch Actioncase'None'	findobj('Tag','sixbar_dsgn');case 'initialize'	nBetaflag=1;	nCradiusflag=1;	nGflag=1;   if nargin >= 2 || ~isempty(findobj('tag','menu_page'))	   LocalOpenFig;       SixbarAnalysis('Draw Axes');   else        show_me_logo('initialize','SixbarAnalysis');   endcase 'Draw Axes'		Q11=Q1*pi/180;% Define constants	i=0;	d2r=pi/180;	r2d=180/pi;	mode=-1;	dt=5; % Loop to analyze the linkage	for Q21 = 0:dt:360;		i=i+1;		Q2 = Q21*d2r;% Call function to compute the fourbar position		para = fourbar(r1,r2,r3,r4,Q21,w2,0,mode,Q1,2);		Q3=para(7);		Q33(i)=Q3;		Q4=para(8);		Q44(i)=Q4;		w33(i)=para(11);		w44(i)=para(12);		assem=para(29);		cang=(Q3+beta)*d2r;% Store position information in matrices.		Bx(i)= para(17);		By(i)= para(18);		Cx(i)= para(19);		Cy(i)= para(20);		Ex(i)=Bx(i)+cr*cos(cang);		Ey(i)=By(i)+cr*sin(cang);		Q22(i) = Q21;		w22(i) = w2; % Analyze the rigid body		value = rbody1(cr,beta, para(17),para(18),para(19),para(20), ...			para(21),para(22),para(23),para(24),para(25),para(26),...			para(27),para(28),2);% Analyze the dyad		values = dyad(r5,r6,Ex(i),Ey(i),value(3),value(4),value(5),value(6),Gx,...		         Gy,0,0,0,0,dmode,2,0);		Fx(i)= values(1);		Fy(i)= values(2);		Q6(i)=values(4);		w66(i)=values(8);		if values(13)==0;i=i-1;end	enditotal=i;% Check that the output dyad for the linkage can be assembled.   a = findobj('tag','SixbarAnalButton');	if itotal == 0      set(a,'Enable','off');      set(h_status,'string','Output dyad cannot be assembled');		return;   	end			set(h_status,'string','');		set(a,'Enable','on');	if itotal > 0% Compute the angle change for the output link			Q6min=min(Q6);		for k=1:itotal			Q66(k)=Q6(k)-Q6min;		end				Ax= 0;		Ay= 0;		Dx= r1*cos(Q1*pi/180);		Dy= r1*sin(Q1*pi/180);% Get the bushing points		bush1=bushing((r1/50),0,0,20,0);		cir1=circle2((r1/60),0,0,20);		bush2=bushing((r1/50),Dx,Dy,20,0);		cir2=circle2((r1/60),Dx,Dy,20);		bush3=bushing((r1/50),Gx,Gy,20,0);		cir3=circle2((r1/60),Gx,Gy,20);% Define the axes for the graph showing the dwell linages		height=0.8;		width=0.8;		xmina=min([min(Ex),min(Fx),min(Bx),min(Cx),Dx, Gx, ...	    	min(bush1(:,1)), min(bush2(:,1)), min(bush3(:,1))]);		xmaxa=max([max(Ex),max(Fx),max(Bx),max(Cx),Dx, Gx, ...	    	max(bush1(:,1)), max(bush2(:,1)), max(bush3(:,1))]);		ymina=min([min(Ey),min(Fy),min(By),min(Cy),Dy, Gy, ...	    	min(bush1(:,2)), min(bush2(:,2)), min(bush3(:,2))]);		ymaxa=max([max(Ey),max(Fy),max(By),max(Cy),Dy, Gy, ...	    	max(bush1(:,2)), max(bush2(:,2)), max(bush3(:,2))]);		rangex=xmaxa-xmina;		rangey=ymaxa-ymina;		xmin=xmina-0.05*rangex;		xmax=xmaxa+0.05*rangex;		ymin=ymina-0.05*rangey;		ymax=ymaxa+0.05*rangey;		values=axisadjust(xmin, xmax, ymin, ymax, width, height);		xmin=values(1);		xmax=values(2);		ymin=values(3);		ymax=values(4);		axis equal        axis([xmin xmax ymin ymax]);   		a = findobj('Tag','sixbar_dsgn');        UD=a.UserData;		hdls = UD.hand;		lim =[xmin xmax ymin ymax];		a.UserData=struct('hand',hdls,'wlim',lim);   % Draw the coupler curve first.		set(bushy1,'xdata', bush1(:,1), 'ydata',bush1(:,2));		set(bushy2,'xdata', bush2(:,1), 'ydata',bush2(:,2));		set(bushy3,'xdata', bush3(:,1), 'ydata',bush3(:,2));   	set(circ1,'xdata', cir1(:,1), 'ydata',cir1(:,2));   	set(circ2,'xdata', cir2(:,1), 'ydata',cir2(:,2));   	set(circ3,'xdata', cir3(:,1), 'ydata',cir3(:,2));      set(couplerpt1,'xdata', Ex, 'ydata' ,Ey);      refresh;% Plot linkage in fixed position.		i = 1;		set(joint1,'xdata', Bx(i), 'ydata',By(i));		set(joint2,'xdata', Cx(i), 'ydata',Cy(i));		set(joint3,'xdata', Ex(i), 'ydata',Ey(i));		set(joint4,'xdata', Fx(i), 'ydata',Fy(i));		set(crank,'xdata',[0 Bx(i)],'ydata', [0 By(i)]);		set(coupler,'xdata', [Bx(i) Cx(i)],'ydata', [By(i) Cy(i)]);		set(rocker,'xdata', [Dx Cx(i)],'ydata', [Dy Cy(i)]);		set(couplerptr,'xdata', [Bx(i) Ex(i) Cx(i)],...			'ydata' ,[By(i) Ey(i) Cy(i)]);		set(r5link,'xdata',[Ex(i) Fx(i)],'ydata', [Ey(i) Fy(i)]);		set(r6link,'xdata',[Gx Fx(i)],'ydata', [Gy Fy(i)]);   %flush the draw buffer	end	drawnow; 	Bx_fix = Bx(i);	By_fix = By(i);	Cx_fix = Cx(i);	Cy_fix = Cy(i);	b = findobj('Tag','sixbar_axe');    UD=b.UserData;	hdls = UD.hand;	lim =[Bx_fix By_fix Cx_fix Cy_fix];	b.UserData=struct('hand',hdls,'wlim',lim);	set([joint3; couplerpt1],...  	'buttondownfcn','SixbarAnalysis(''Set Calls'',1);SixbarAnalysis(''Move'',1)');	set([circ3],...  	'buttondownfcn','SixbarAnalysis(''Set Calls'',2);SixbarAnalysis(''Move'',2)');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%The Callbacks When the User Moves or Releases%the MouseButton.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'Set Calls'%getthehandleoftheobjectsusedtocontrol%themouseinputa=findobj('Tag','sixbar_dsgn');if Argument2 == 1   nBetaflag = 0;   nCradiusflag = 0;	set(a,'windowbuttonupfcn','a=findobj(''Tag'',''sixbar_dsgn'');set(a,''windowbuttonmotion'','''');refresh');	set(a,'windowbuttonmotionfcn','SixbarAnalysis(''Move'',1)');elseif Argument2 == 2   nGflag = 0;	set(a,'windowbuttonupfcn','a=findobj(''Tag'',''sixbar_dsgn'');set(a,''windowbuttonmotion'','''');refresh');	set(a,'windowbuttonmotionfcn','SixbarAnalysis(''Move'',2)');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%TheCallbacksWhenTheUserMovestheMouseButton.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'Move'%Findoutwherethemousepointerislocated.	a=findobj('Tag','sixbar_dsgn');	b=findobj('Tag','sixbar_axe');    UD=b.UserData;   hdls = UD.wlim;   Bx = hdls(1);   By = hdls(2);    Cx = hdls(3);    Cy = hdls(4);    if Argument2 == 1	   if nBetaflag == 1 || nCradiusflag == 1   	   a = get(h_beta,'userdata');      	b = get(h_beta,'string');	      beta = check_val(a,b);   	   a = get(h_R(7),'userdata');     		b = get(h_R(7),'string');      	cr = check_val(a,b);   	else      		pt = get(b,'currentpoint');      	pt = pt(1,1:2);      	% Determine the angle that the pointer is with	% respect to the arrrow hinge.   	beta = atan2(pt(2)-By,pt(1)-Bx)*180/pi-atan2(Cy-By,Cx-Bx)*180/pi;		cr = sqrt((pt(2) -By)^2 + (pt(1) -Bx)^2);   	end   elseif Argument2 == 2      if nGflag == 1    	   a = get(h_Gx,'userdata');      	b = get(h_Gx,'string');	      Gx = check_val(a,b);    	   a = get(h_Gy,'userdata');      	b = get(h_Gy,'string');	      Gy = check_val(a,b);      else    		pt = get(b,'currentpoint');      	pt = pt(1,1:2);         Gx = pt(1);         Gy = pt(2);      end   end   if beta > 180      beta = beta - 360;   elseif beta < -180      beta = beta+360;        end      	   % Store the value in the current axes UserData	% where it can be retrieved by an application.	set(h_beta,'userdata',beta);	set(h_beta,'string',num2str(beta));   set(h_R(7),'userdata',cr);   set(h_R(7),'string',num2str(cr));	set(h_Gx,'userdata',Gx);	set(h_Gx,'string',num2str(Gx));	set(h_Gy,'userdata',Gy);	set(h_Gy,'string',num2str(Gy));   	bush3=bushing((r1/50),Gx,Gy,20,0);   cir3=circle2((r1/60),Gx,Gy,20);      set(circ3,'xdata', cir3(:,1), 'ydata',cir3(:,2));   set(bushy3,'xdata', bush3(:,1), 'ydata',bush3(:,2));   % Plot linkage in fixed position.	Q11=Q1*pi/180;		i=0;	d2r=pi/180;	r2d=180/pi;	mode=-1;	dt=5; % Loop to analyze the linkage	for Q21 = 0:dt:360;		i=i+1;		Q2 = Q21*d2r;% Call function to compute the fourbar position		para = fourbar(r1,r2,r3,r4,Q21,w2,0,mode,Q1,2);		Q3=para(7);		Q33(i)=Q3;		Q4=para(8);		Q44(i)=Q4;		w33(i)=para(11);		w44(i)=para(12);		assem=para(29);		cang=(Q3+beta)*d2r;% Store position information in matrices.		Bx(i)= para(17);		By(i)= para(18);		Cx(i)= para(19);		Cy(i)= para(20);		Ex(i)=Bx(i)+cr*cos(cang);		Ey(i)=By(i)+cr*sin(cang);		Q22(i) = Q21;		w22(i) = w2; % Analyze the rigid body		value = rbody1(cr,beta, para(17),para(18),para(19),para(20), ...			para(21),para(22),para(23),para(24),para(25),para(26),...			para(27),para(28),2);% Analyze the dyad		values = dyad(r5,r6,Ex(i),Ey(i),value(3),value(4),value(5),value(6),Gx,...		         Gy,0,0,0,0,dmode,2,0);		Fx(i)= values(1);		Fy(i)= values(2);		Q6(i)=values(4);		w66(i)=values(8);		if values(13)==0;i=i-1;end	end	itotal=i;		   a = findobj('tag','SixbarAnalButton');	if itotal == 0      set(a,'Enable','off');      set(h_status,'string','Output dyad cannot be assembled');		return;   	end			set(h_status,'string','');      set(a,'Enable','on');         if itotal > 0% Compute the angle change for the output link			Q6min=min(Q6);		for k=1:itotal			Q66(k)=Q6(k)-Q6min;		end				Ax= 0;		Ay= 0;		Dx= r1*cos(Q1*pi/180);		Dy= r1*sin(Q1*pi/180);              i = 1;		set(joint1,'xdata', Bx(i), 'ydata',By(i));		set(joint2,'xdata', Cx(i), 'ydata',Cy(i));		set(joint3,'xdata', Ex(i), 'ydata',Ey(i));		set(joint4,'xdata', Fx(i), 'ydata',Fy(i));		set(crank,'xdata',[0 Bx(i)],'ydata', [0 By(i)]);		set(coupler,'xdata', [Bx(i) Cx(i)],'ydata', [By(i) Cy(i)]);		set(rocker,'xdata', [Dx Cx(i)],'ydata', [Dy Cy(i)]);		set(couplerptr,'xdata', [Bx(i) Ex(i) Cx(i)],...         'ydata' ,[By(i) Ey(i) Cy(i)]);		set(couplerpt1,'xdata', Ex, 'ydata' ,Ey);		set(r5link,'xdata',[Ex(i) Fx(i)],'ydata', [Ey(i) Fy(i)]);		set(r6link,'xdata',[Gx Fx(i)],'ydata', [Gy Fy(i)]);   	drawnow;            end   case 'Change R'	n=Argument2;	newval=get(h_R(n),'string');	r(n)=check_val(r(n),newval);	set(h_R(n),'UserData',r(n));	set(h_R(n),'string',num2str(r(n)));   SixbarAnalysis('Draw Axes'); case 'Change Cradius'nCradiusflag=1;SixbarAnalysis('Move',1);case 'Change Beta'nBetaflag=1;SixbarAnalysis('Move',1);      case 'Change G'nGflag=1;SixbarAnalysis('Move',2);      case 'Change Q'newval=get(h_Q,'string');Q1=check_val(Q1,newval);set(h_Q,'UserData',Q1);set(h_Q,'string',num2str(Q1));SixbarAnalysis('Draw Axes');       case 'AS_radio'  	%nBetaflag = 1;num_buttons = 2;button = Argument2;if get(h_ASradio(button),'value') == 0	set(h_ASradio(button),'value',1);endset(h_ASradio([1:(button-1), (button+1):num_buttons]),'value',0);SixbarAnalysis('Draw Axes');      case 'Change Velocity'   %   nBetaflag = 1;newval=get(h_vel,'string');vel=check_val(vel,newval);set(h_vel,'UserData',vel);set(h_vel,'string',num2str(vel));%	SixbarAnalysis('Draw Axes');      case 'Resize'n = Argument2;%To retrieve current axis limitsa=findobj('Tag','sixbar_dsgn');UD=a.UserData;% If 'Zoom out' button is pressed, downsize the figure by increasing x any y axis limits% If 'Zoom In' button is pressed, enlarge the figure by decreasing x any y axis limitsif n==1	factor=1.05;else	factor=0.95;endUD.wlim=factor*UD.wlim;a.UserData=UD;axis(UD.wlim);case 'None'     % the following command will bring the existing figure % to foregrounda = findobj('Tag','sixbar_dsgn');figure(a);   case 'Close'     % if the target window exist then close itif ~isempty(findobj('Tag','Sixbar Analysis Window'))   sixbar_ana('Stop');   a = findobj('Tag','Sixbar Analysis Window');    	close(a);end   a = findobj('Tag','sixbar_dsgn');close(a);   case 'Analysis'sixbar_ana('initialize',r, beta, Q1, Gx, Gy,w2, dmode);   case 'Show Definitions'   Show_definition('initialize','SixbarAnalysis.jpg');   case 'Help'%-------On-line help     HelpStr={'Six Bar Analysis';    '';    '    "SixbarAnalysis" is a program to design a six bar linkage mechanism';    'and to analyze the result.    The program contains two windows:a design';    'window and an analysis window.  The nomenclature used by the program is';    'that  given  in  the  textbook, Kinematics,  Dynamics,  and  Design  of';    'Mechanisms by Kenneth Waldron and Gary Kinzel.';    '';    '    In the design window, the  variables  are  the  seven  link lengths';    '(frame, crank, coupler, rocker, r5, r6  and  coupler  radius)  and  two';    'angles (beta and frame angle),  the  angular velocity of the  crank and';    'the x and y coordinates of the third bushing.   Two assembly mode (1 or';    '-1) are available in radiobuttons.  One of the program features is that';    'users  can drag  the  mouse to change the coupler point in a continuous';    'fashion.   This changes both the beta angle  and  coupler  radius.   In';    'addition, users can drag the mouse tomove the  location  of  the  third';    'bushing.   This will update the x and y  values  shown  in  the  window';    'because changing the coupler point can move the mechanism plot  out  of';    'the  figure  window, "Zoom In"  and "Zoom Out" buttons are available to';    'downsizeand upsize the mechanism plot.' ;    '';    '    In the analysis window, users can control the number of  plots  (up';    'to four) and the  contents of  each plot (four options)  are  provided.';    'Furthermore, the animation speed can be  easily adjusted by clicking on';    'the speed buttons.';    '';    '    Two buttons connect the two windows.   The "Return" button  in  the';    'analysis window closes the analysis window and brings back  the  design';    'window, while the "Analysis" button in  the  design  window  opens  the';    'analysis window and starts  the  linkage  animation.   Every  time  the';    '"Analysis"  button is pressed, all of the design parameters are updated';    'to start a new animation. ';    '';    '    There is a status bar at the bottom of the design window.   If  the';    'chosen values for the variables can not be  used  to  create a  six bar';    'mechanism, an error message will be shown in the status box.  ';     ' '};   helpwin(HelpStr,'Six Bar Analysis');case 'Get File'% Get the file name using the UIGETFILE[sFileName sFilePath] = uigetfile('*.dat','Load File');if sFileName==0 && sFilePath==0	return;end%Combine the path and file name togethersTemp=strcat(sFilePath,sFileName);%get the size to erase the '.dat' extensionsz=size(sFileName);%load the data fileload(sTemp);%assign the parameter to a variableParameter=eval(sFileName(1:(sz(2)-4)));if length(Parameter)==13	r(1:7) = Parameter(1:7);	beta = Parameter(8);	Q1 = Parameter(9);	Gx = Parameter(10);	Gy = Parameter(11);	dmode = Parameter(12);	w2 = Parameter(13);	for i=1:7		set(h_R(i),'UserData',r(i),'string',num2str(r(i)));	end	set(h_Q,'UserData',Q1,'string',num2str(Q1));	set(h_beta,'Userdata',beta,'string',num2str(beta));   set(h_vel,'Userdata',w2,'string',num2str(w2));   set(h_Gx,'Userdata',Gx,'string',num2str(Gx));   set(h_Gy,'Userdata',Gy,'string',num2str(Gy));   if dmode==1		SixbarAnalysis('AS_radio',1);	else		SixbarAnalysis('AS_radio',2);	end	SixbarAnalysis('Draw Axes');  	refresh;else  	set(h_status,'string','invalid file format');	return;endcase 'Put File'[sFileName sFilePath]=uiputfile('*.dat','SaveAs');ParameterData=[r(1);r(2);r(3);r(4);r(5);r(6);r(7);beta;Q1;Gx;Gy;dmode;w2];[sTemp,errMsg]=sprintf('%s%s',sFilePath,sFileName);[strCmd,errMsg]=sprintf('%s %s %s','save',sTemp,'-ascii ParameterData');eval(strCmd);endfunction val=check_val(oldval,newval)	%Checkiftheuserinputisnumberinput%ifnot,retrievethepreviousvalueinuserdataval=zeros(1);	if~isequal(length(oldval),length(str2num(newval))),   	val=oldval;%	set(findobj(gcf,'Tag','status_txt'),'String',...%['Warning:Aninvalidpropertyvaluehasbeenentered.']);	else   	val=str2num(newval);	end   function LocalOpenFig()hdls = zeros(1,20);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Control the color of the UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%StdColor = get(0,'DefaultUIcontrolBackgroundColor');%PointsPerPixel = 72/get(0,'ScreenPixelsPerInch');bgframe = StdColor;bgedit = [1 1 1];bgtext = bgframe;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Main Figure of Crank Rocker Design%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 480;sy = 400;FigPos = [ 10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','pixels', ...	'Color',[0.8 0.8 0.8], ...	'Name','Sixbar Analysis', ...	'NumberTitle','off', ...	'Position',FigPos, ...  	'Tag','sixbar_dsgn');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Draw Frame First% This will prevent the frames from been drawn on top of% other UICONTROLS. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0083 0.01 0.9813 0.113], ...	'Style','frame', ...  	'Tag','Frame1');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.5925 0.38958 0.38], ...	'Style','frame', ...	'Tag','Frame_link');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0083 0.13 0.585 0.08], ...	'Style','frame', ...	'Tag','Frame_angle');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.13 0.3896 0.08], ...	'Style','frame', ...	'Tag','Frame_pushbutton');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.3975 0.3896 0.065], ...	'Style','frame', ...	'Tag','Frame_vel');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.2165 0.3896 0.08], ...	'Style','frame', ...	'Tag','Frame_zoombutton');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.3045 0.3896 0.085], ...	'Style','frame', ...	'Tag','Frame_assemode');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.47 0.3896 0.115], ...	'Style','frame', ...	'Tag','Frame_G');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');  c = uimenu('Parent',b, ...	'Callback','SixbarAnalysis(''Get File'')', ...	'Label','Load', ...	'Tag','submenu_load');   c = uimenu('Parent',b, ...	'Callback','SixbarAnalysis(''Put File'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create graphics window for design input%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-------Reference axisb = axes('Parent',a, ...  	'Box','on', ...  	'Color',[1 1 1], ...	'Position',[0.0083 0.217 0.585 0.756], ...  	'XColor',[0 0 0], ...  	'XGrid','off', ...  	'XTick',[],...  	'YColor',[0 0 0], ...  	'YGrid','off', ...  	'YTick',[], ...  	'ZColor',[0 0 0], ...  	'ZGrid','off', ...  	'ZTick',[]);		b = axes('Parent',a, ...   'Box','off', ...  	'DataAspectRatio',[1 1 1],...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Position',[0.0083 0.217 0.585 0.756], ...	'Tag','sixbar_axe');axis off;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% edit related uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_beta = uicontrol('Parent',a, ...  	'Units','normalized', ...  	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change Beta'')', ...	'Position',[0.1625 0.1425 0.1125 0.0525], ...	'String','30', ...  	'Horiz','left', ...	'Style','edit', ...	'Tag','beta_edit', ...  	'UserData',30);  h_Q  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change Q'')', ...	'Position',[0.4625 0.1425 0.1125 0.0525], ...	'String','0', ...  	'Horiz','left', ...	'Style','edit', ...	'Tag','Q_edit', ...  	'UserData',0);  h_R(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change R'',1)', ...	'Position',[0.825 0.915 0.1375 0.05], ...	'String','4', ...	'Style','edit', ...	'Tag','R_edit(1)', ...	'UserData',4);   h_R(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change R'',2)', ...	'Position',[0.825 0.8625 0.1375 0.05], ...	'String','1', ...	'Style','edit', ...	'Tag','R_edit(2)', ...	'UserData',1);   h_R(3) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change R'',3)', ...	'Position',[0.825 0.81 0.1375 0.05], ...	'String','3', ...	'Style','edit', ...	'Tag','R_edit(3)', ...	'UserData',3);   h_R(4) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change R'',4)', ...	'Position',[0.825 0.7575 0.1375 0.05], ...	'String','4', ...	'Style','edit', ...	'Tag','R_edit(4)', ...	'UserData',4);   h_R(5) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change R'',5)', ...	'Position',[0.825 0.705 0.1375 0.05], ...	'String','1.576', ...	'Style','edit', ...	'Tag','R_edit(5)', ...	'UserData',1.576);   h_R(6) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change R'',6)', ...	'Position',[0.825 0.655 0.1375 0.05], ...	'String','2.544', ...	'Style','edit', ...	'Tag','R_edit(6)', ...	'UserData',2.544);   h_R(7) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change Cradius'')', ...	'Position',[0.825 0.605 0.1375 0.05], ...	'String','1.579', ...	'Style','edit', ...	'Tag','R_edit(7)', ...	'UserData',1.579);   h_vel = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change Velocity'')', ...	'Position',[0.825 0.405 0.1375 0.05], ...	'String','1', ...	'Style','edit', ...	'Tag','vel_edit', ...	'UserData',1);     h_Gx = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change G'')', ...	'Position',[0.825 0.5275 0.1375 0.05], ...	'String','1.075', ...	'Style','edit', ...	'Tag','Gx_edit', ...	'UserData',1.075);  h_Gy = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','SixbarAnalysis(''Change G'')', ...	'Position',[0.825 0.4775 0.1375 0.05], ...	'String','3.615', ...	'Style','edit', ...	'Tag','Gy_edit', ...	'UserData',3.615);      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% radio button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_ASradio(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','SixbarAnalysis(''AS_radio'',1)', ...	'Position',[0.8292 0.345 0.1 0.0375], ...	'String',' 1', ...	'Style','radiobutton', ...	'Tag','assmode_radio1', ...	'Value',1);  h_ASradio(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','SixbarAnalysis(''AS_radio'',2)', ...	'Position',[0.8292 0.31 0.1 0.0375], ...	'String','-1', ...	'Style','radiobutton', ...	'Tag','assmode_radio2', ...	'Value',0);   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% push button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','SixbarAnalysis(''Analysis'')', ...	'Position',[0.6042 0.14 0.1333 0.06], ...	'String','Analysis', ...	'Tag','SixbarAnalButton');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','SixbarAnalysis(''Close'')', ...	'Position',[0.8542 0.14 0.1324 0.06], ...	'String','Close', ...	'Tag','CloseButon');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','SixbarAnalysis(''Help'')', ...	'Position',[0.7367 0.14 0.1166 0.06], ...	'String','Info', ...	'Tag','InfoButton');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','SixbarAnalysis(''Resize'',1)', ...   'Position',[0.6042 0.2275 0.1333 0.06], ...   'userdata',1, ...	'String','Zoom Out', ...	'Tag','ZoomButton1');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','SixbarAnalysis(''Show Definitions'')', ...	'Position',[0.8542 0.2275 0.1324 0.06], ...   'String','Definitions', ...	'Tag','ZoomButton2');    b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','SixbarAnalysis(''Resize'',2)', ...	'Position',[0.7367 0.2275 0.1166 0.06], ...   'String','Zoom In', ...	'Tag','ZoomButton2');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% text controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_status = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'HorizontalAlignment','left', ...	'Position',[0.05625 0.0175 0.9083 0.0775], ...	'String',' ', ...	'Style','text', ...	'Tag','status_txt');     b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.02708 0.145 0.1375 0.0425], ...	'String','beta angle', ...	'Style','text', ...	'Tag','StaticText1');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.2942 0.145 0.1521 0.0425], ...	'String','frame angle', ...	'Style','text', ...	'Tag','StaticText1');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.615 0.915 0.1729 0.0425], ...	'String','frame length', ...	'Style','text', ...	'Tag','StaticText4');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.615 0.8625 0.1708 0.0425], ...	'String','crank length', ...	'Style','text', ...	'Tag','StaticText2');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.615 0.81 0.1833 0.0425], ...	'String','coupler length', ...	'Style','text', ...	'Tag','StaticText2');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.615 0.7575 0.18125 0.0425], ...	'String','rocker length', ...	'Style','text', ...	'Tag','StaticText3');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.615 0.705 0.18125 0.0425], ...	'String','r5', ...	'Style','text', ...	'Tag','StaticText3');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.615 0.655 0.18125 0.0425], ...	'String','r6', ...	'Style','text', ...	'Tag','StaticText3');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.615 0.605 0.18125 0.0425], ...	'String','coupler radius', ...	'Style','text', ...	'Tag','StaticText4');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.615 0.41 0.175 0.0425], ...	'String','crank velocity', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.615 0.345 0.18625 0.0425], ...	'String','assembly mode', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.615 0.53 0.18625 0.0425], ...	'String','bushing x coord', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.615 0.485 0.18625 0.0425], ...	'String','bushing y coord', ...	'Style','text', ...	'Tag','StaticText4');drawnow;   hdls=[ h_beta h_Q h_R h_vel h_ASradio h_Gx h_Gy h_status ];a = findobj('Tag','sixbar_dsgn');set(a,'userdata',struct('hand',hdls));	crank=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');r5link=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');r6link=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');couplerptr=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');	   couplerpt1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'r', 'linestyle', '-');	rocker=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');bushy1=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');bushy2=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');bushy3=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');circ1=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');circ2=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');circ3=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'g');joint1=line('xdata',[],'ydata',[],'marker','o','markersize',6,'color','k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',6,'color', 'k');joint3=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',6, 'color', 'g', 'linewidth' ,1);joint4=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',6,'color', 'k');    % Set up the vectors needed to draw the linkagehdls=[ joint1 joint2 joint3 joint4 crank coupler ...   	 rocker r5link r6link couplerptr couplerpt1 ...       bushy1 bushy2 bushy3 circ1 circ2 circ3];a = findobj('Tag','sixbar_axe');set(a,'userdata',struct('hand',hdls));			
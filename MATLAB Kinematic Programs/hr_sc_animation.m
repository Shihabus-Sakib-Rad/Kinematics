function hr_sc_animation(Action,r,tl0,tv0,nhgp0,nvgp0,w2,xp,yp)% the contents of the userdata of Analysis Window % handles(1) = flag for deciding to start or stop animation% handles(2) = i% handles(3) = handle of strat button% handles(4) = handle of stop button% handles(5) = handle of return button% handles(6) = handle of analysis button% handles(7) = handle of beta angle text% handles(8) = handle of coupler radius text% handles(9) = timesink% handles(10) = handle of status text% handles(11) = total number of rows in animation% handles(12) = total number of columns in animationglobal nAnimationFlagglobal g_AnaRes2global nChangeSpeedif nargin==0 && isempty(findobj('Tag','SC Coupler Curve Animation Window')),  % hr_sc_animation is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','SC Coupler Curve Animation Window'))      % hr_sc_animation is already open   Action='None';endswitch Action%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Initialize the User Interface%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'initialize'   if  isempty(findobj('Tag','SC Coupler Curve Animation Window'))         LocalOpenFig;      nAnimationFlag = 0;   else      hr_sc_animation('None');   end      if nargin < 9      r = [ 0.75 2.75 1 ];      tl0 = 11;      tv0 = 5.5;      nhgp0 = 5;      nvgp0 = 10;      w2 = 5;      xp = [1 5];      yp = [4 4];      end   if exist('nAnimationFlag')       if nAnimationFlag == 1   	   hr_sc_animation('Stop');         return;      end   end   a = findobj('Tag','SC Coupler Curve Animation Window');   UD=a.UserData;   UD.Dx = xp(2)-xp(1)+1;   UD.Dy = yp(2)-yp(1)+1;   set(a,'userdata',UD);   g_AnaRes2 = CalcResult( r,tl0,tv0,nhgp0,nvgp0,w2,xp,yp );   hr_sc_animation('ShowFigure');   hr_sc_animation('Start');   case 'None'   figure( findobj('Tag','SC Coupler Curve Animation Window'));   % Bring the figure to front, if it already existscase 'ShowFigure'   a = findobj('Tag','SC Coupler Curve Animation Window');   UD=a.UserData;   pp = UD.Dx;   qq = UD.Dy;   u = 8;   for m = 1:pp      for n = 1:qq         u = u+1; mx(m,n,:) = g_AnaRes2(u,:);         u = u+1; my(m,n,:) = g_AnaRes2(u,:);      end      end   u = 8+2*pp*qq;	[ m, n ] = size( g_AnaRes2);	itotal = n;   xmin = g_AnaRes2(u+1,1);   xmax = g_AnaRes2(u+1,2);   ymin = g_AnaRes2(u+1,3);   ymax = g_AnaRes2(u+1,4);   r = g_AnaRes2(u+1,5:8);   theta1r = g_AnaRes2(u+1,9);      handle = findobj('tag','hr_sc_ani_axes');   CreateMechanismHandles( handle,r,theta1r,mx,my,xmin,xmax,ymin,ymax,pp,qq,itotal);%   a = findobj('Tag','SC Coupler Curve Animation Window');   %   set(a,'Userdata',handles);   refresh;   case 'Animation'   a = findobj('Tag','SC Coupler Curve Animation Window');     UD=a.UserData;   pp = UD.Dx;   qq = UD.Dy;      [m,n]=size(g_AnaRes2);   itotal = n;	timesink = UD.tsink;   i = UD.inum;   dt = 5;   Bx = g_AnaRes2(1,:);   By = g_AnaRes2(2,:);   Cx = g_AnaRes2(3,:);   Cy = g_AnaRes2(4,:);   Dx = g_AnaRes2(5,:);   Dy = g_AnaRes2(6,:);   pistx = g_AnaRes2(7,1:5);   pisty = g_AnaRes2(8,1:5);      u = 8;   for m = 1:pp      for n = 1:qq         u = u+1; mx(m,n,:) = g_AnaRes2(u,:);         u = u+1; my(m,n,:) = g_AnaRes2(u,:);      end      end   u = 8+2*pp*qq;   theta1r = g_AnaRes2(u+1,9);   hpist = g_AnaRes2(u+1,10);      b = findobj('tag','hr_sc_ani_axes');   link = get(b,'UserData');   % set timer   tic;     while nAnimationFlag            cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i == 1         drawnow;      end               SetMechanismPosition( link,i,hpist,theta1r,Bx,By,Cx,Cy,Dx,Dy,pistx,pisty,mx,my,pp,qq);	drawnow;   %flush the draw buffer      i= i+1;            if i == itotal         i = 1;      end          if nChangeSpeed ~= 0      timesink = timesink * nChangeSpeed;      nChangeSpeed = 0;    end      while toc < timesink      end         tic;   end   nAnimationFlag = 0;   UD.inum = i;   UD.tsink = timesink;   set(a,'Userdata',UD);%case 'Close'%hr_sc_animation('Stop');%a = findobj('Tag','SC Coupler Curve Animation Window');   %close(a);case 'Set Calls' % get the handle of the objects used to control% the mouse input a = findobj('Tag','SC Coupler Curve Animation Window');set(a,'windowbuttonupfcn', 'a = findobj(''Tag'',''SC Coupler Curve Animation Window'');set(a,''windowbuttonmotion'','''');refresh ');set(a,'windowbuttonmotionfcn','hr_sc_animation(''Rotate'')');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Callbacks When The User Moves the Mouse Button.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'Rotate'   a = findobj('Tag','SC Coupler Curve Animation Window');   UD=a.UserData;   i = UD.inum;   h_anal = UD.hand(4);   h_betatxt = UD.hand(5);   h_r6txt = UD.hand(6);   pp = UD.Dx;   qq = UD.Dy;      b = findobj('Tag','hr_sc_ani_axes');   pt = get(b,'currentpoint');   pt = pt(1,1:2);   ptx = pt(1);   pty = pt(2);   Bx(1) = g_AnaRes2(1,1);   By(1) = g_AnaRes2(2,1);   u = 8+2*pp*qq;   r = g_AnaRes2(u+1,5:8);      u = 8;   for m = 1:pp      for n = 1:qq         u = u+1; mx(m,n,:) = g_AnaRes2(u,:);         u = u+1; my(m,n,:) = g_AnaRes2(u,:);      end      end   min1 = (mx(1,1,i)-ptx)^2 + (my(1,1,i)-pty)^2;   for m = 1:pp      for n = 1:qq         min2 = (mx(m,n,i)-ptx)^2 + (my(m,n,i)-pty)^2;         if min2 <= min1            min1 = min2;            nxg = m;            nyg = n;         end      end   end   if isempty(nxg)      return   end   pt= [ mx(nxg,nyg,i) my(nxg,nyg,i) ]; 	r6=sqrt((Bx(1)-mx(nxg,nyg,1))^2+(By(1)-my(nxg,nyg,1))^2);	beta=(180/pi)*atan2((my(nxg,nyg,1)-By(1)),(mx(nxg,nyg,1)-Bx(1)));   % color the slected points    b = findobj('tag','hr_sc_ani_axes');   handles = get(b,'userdata');   gridpt = handles(9:8+pp*qq);   for k = 1:pp*qq   	if k == qq*(nxg-1)+nyg         set(gridpt(k),'color','g', 'linewidth' ,2);      else          set(gridpt(k),'color','k', 'linewidth' ,1);      end   end      set(h_betatxt,'string',num2str(beta),'userdata',beta);   set(h_r6txt,'string',num2str(r6),'userdata',r6);   set(h_anal,'Enable','on');   case 'Analysis'   a = findobj('Tag','SC Coupler Curve Animation Window');   UD=a.UserData;   h_betatxt = UD.hand(5);   h_r6txt = UD.hand(6);   beta = get(h_betatxt,'userdata');   r6 = get(h_r6txt,'userdata');   pp = UD.Dx;   qq = UD.Dy;   u = 8+2*pp*qq;   r = g_AnaRes2(u+1,5:8);   w2 = g_AnaRes2(u+1,11);   rr =r(2:4);   hr_slidercrank_ana('initialize',rr,w2,r6,beta);case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','SC Coupler Curve Animation Window');   UD=a.UserData;   h_status = UD.hand(7);   set(UD.hand(3),'Enable','off');   set(UD.hand(4),'Enable','off');      nAnimationFlag = 1;	nChangeSpeed = 0;   UD.nAni = nAnimationFlag;   set(a,'userdata',UD);   set(h_status,'string','');   hr_sc_animation('Animation');   case 'Stop'   if  isempty(findobj('Tag','SC Coupler Curve Animation Window'))   	return;      end   a = findobj('Tag','SC Coupler Curve Animation Window');   UD=a.UserData;   handles = get(a,'userdata');   h_status = UD.hand(7);   nAnimationFlag = 0;   UD.nAni = nAnimationFlag;   set(a,'userdata',UD);   set(UD.hand(3),'Enable','on');   set(UD.hand(4),'Enable','off');   set(h_status,'string','Click on the desired coupler point, then start the analysis by clicking on the analysis button');    pp = UD.Dx;   qq = UD.Dy;      % retrieve the handles od gridpoint so that the buttondownfcn can be specified.   % That function is that whenever those gridpoints are pressed, call 'rotate' function to    % calculate the point position   b = findobj('tag','hr_sc_ani_axes');   handles = get(b,'userdata');   gridpoint = handles(9:8+pp*qq);   gridline = handles(9+pp*qq:8+2*pp*qq);   set([gridpoint gridline],...     'buttondownfcn','hr_sc_animation(''Set Calls'');hr_sc_animation(''Rotate'')');case 'Return'   hr_sc_animation('Stop');   if ~isempty(findobj('Tag','hr_slidercrank_dsgn'))         b = findobj('Tag','hr_slidercrank_dsgn');      figure(b);      if ~isempty(findobj('Tag','SC Coupler Curve Analysis Window'))            b = findobj('Tag','SC Coupler Curve Analysis Window');         close(b);      end      b = findobj('Tag','SC Coupler Curve Animation Window');     	   close(b);   else  	return;         endend   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig()StdColor = get(0,'DefaultUIcontrolBackgroundColor');bgframe = StdColor;bgedit = [1 1 1];bgtext = bgframe;ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-40 sx sy ] ;a = figure('Units','Pixels', ...   'Color',[0.8 0.8 0.8], ...   'Name','SC Coupler Curve Animation Window', ...   'NumberTitle','off', ...   'Position',FigPos, ...   'Tag','SC Coupler Curve Animation Window');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...	'Position',[0.0096 0.1114 0.2981 0.0841], ...   'Style','frame', ...   'Tag','Frame_angle');b = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...	'Position',[0.3115 0.1114 0.1596 0.0841], ...   'Style','frame', ...   'Tag','Frame_speed');b = uicontrol('Parent',a, ...   'Units','normalized', ...   'ListboxTop',0, ...	'Position',[0.4769 0.1114 0.5058 0.0841], ...   'Style','frame', ...   'Tag','Frame_pushbutton');b = uicontrol('Parent',a, ...   'Units','normalized', ...   'ListboxTop',0, ...	'Position',[0.0096 0.0136 0.9769 0.0886], ...   'Style','frame', ...   'Tag','Frame_status');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axes%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-------Reference axisb = axes('Parent',a, ...   'Box','on', ...   'Color',[1 1 1], ...   'Position',[0.00625 0.2023 0.97917 0.7886], ...   'XColor',[0 0 0], ...   'XGrid','off', ...   'XTick',[],...   'YColor',[0 0 0], ...   'YGrid','off', ...   'YTick',[], ...   'ZColor',[0 0 0], ...   'ZGrid','off', ...   'ZTick',[]);   b = axes('Parent',a, ...   'Box','off', ...   'DataAspectRatio',[1 1 1],...   'CameraUpVector',[0 1 0], ...   'CameraUpVectorMode','manual', ...   'Position',[0.00625 0.2023 0.97917 0.7886], ...   'Tag','hr_sc_ani_axes');axis off;   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...   'CallBack','hr_sc_animation(''Start'')', ...   'Position',[0.610 0.1295 0.12 0.05], ...   'String','Start', ...   'Tag','start_button');h_anal = uicontrol('Parent',a, ...   'Units','normalized', ...   'CallBack','hr_sc_animation(''Analysis'')', ...   'Enable','off', ...	'Position',[0.486 0.1295 0.12 0.05], ...   'String','Analysis', ...   'Tag','analysis_button');h_stop = uicontrol('Parent',a, ...   'Units','normalized', ...   'CallBack','hr_sc_animation(''Stop'')', ...   'Position',[0.734 0.1295 0.12 0.05], ...   'String','Stop', ...   'Userdata',1,...   'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...   'CallBack','hr_sc_animation(''Return'')', ...   'Position',[0.857 0.1295 0.12 0.05], ...   'String','Return', ...   'Tag','return_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.3212 0.1523 0.0808 0.0386], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_sc_animation(''SetSpeed'',0.707);', ...   'Position',[0.3145 0.1182 0.0735 0.034], ... 	'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_sc_animation(''SetSpeed'',1.414);', ...   'Position',[0.389 0.1182 0.072 0.034], ...   'String','-', ... 	'Tag','Minus_button');    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% text controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_status = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...   'Position',[0.0155 0.0301 0.95 0.067], ...   'String','', ...   'Horiz','left', ...   'Style','text');  b = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...   'Position',[0.0212 0.1525 0.125 0.03636], ...   'String','beta angle', ...   'Horiz','left', ...   'Style','text');  h_betatxt = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...	'Position',[0.1865 0.1513 0.1192 0.036], ...   'String','', ...   'Horiz','left', ...   'Style','text');  b = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...	'Position',[0.0212 0.1182 0.1692 0.0341], ...   'String','coupler radius', ...   'Horiz','left', ...   'Style','text' );  h_r6txt = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...	'Position',[0.1865 0.1159 0.1192 0.036], ...   'String','', ...   'Horiz','left', ...   'Style','text');  drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;i = 1;timesink = 0.1;handles = [h_start h_stop h_return h_anal h_betatxt h_r6txt h_status ];set( a,'UserData',struct('hand',handles,'nAni',nAnimationFlag,'inum',i,'tsink',timesink));   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] =  CalcResult( r,tl0,tv0,nhgp0,nvgp0,w2,xp,yp )r2 = r(1);r3 = r(2);r4 = r(3);r1=sqrt(((r2+r3).^2)-(r4.^2));theta1r=(2*pi)-atan2(r4,r1);theta1=(180/pi)*theta1r;sigma=1;flag=3;%driver == 'c';Q2=0;speed=0;nvgp=nvgp0;nhgp=nhgp0;nvgpoc=nvgp+1;tl=tl0;tv=tv0;cxrc=(1/2)*r3;spacx=(1/(nhgp-1))*tl;spacy=(1/(nvgp-1))*tv;cxmin=cxrc-(tl/2);cxmax=cxrc+(tl/2);cymin=-(nvgpoc/2)*spacy;cymax=(nvgpoc/2)*spacy;% Locate the first position of the linkagea1=[0 0];b1=[r2 0];c1=[(r2+r3) 0];d1=[(r1*cos(theta1r)) (r1*sin(theta1r))];% Define the piston datar=[r2 r3 r4];rtot=sum(r);lpist=rtot/8;hpist=rtot/16;coor=rect((lpist),(hpist),0,0,theta1,0);pistx=coor(:,1);pisty=coor(:,2);coor=bushing((rtot/70),0,0,20,0);bushx=coor(:,1);bushy=coor(:,2);coor=circle2((rtot/60),0,0,20);circx=coor(:,1);circy=coor(:,2);coor=frameline(((r2+r3)*1.05),(r2*cos((2*pi)-theta1r)),...     ((-r2*sin((2*pi)-theta1r))-(rtot/30)),20,theta1,1);framex=coor(:,1);framey=coor(:,2);	% Compute the grid coordinatesgxstart=cxmin-spacx;for i=1:nhgp	xg(i)=b1(1)+gxstart+(i*spacx);endfor i=1:nvgp	ygy(i)=b1(2)+cymin+(i*spacy);endpp = xp(2)-xp(1)+1;qq = yp(2)-yp(1)+1;xgg = xg(xp(1):xp(2));ygg = ygy(yp(1):yp(2));xgg=xgg-r2;% Locate each coupler point by rr and pphetafor m = 1:pp   for n = 1:qq      rr(m,n)=sqrt((xgg(m)^2)+(ygg(n)^2));      ppheta(m,n)=atan2(ygg(n),xgg(m));   endend% Loop to vary the linkage positiongp=1; 	   dx=5;fc=360;dc=fc/dx;i=0;for count=0:dx:fc;	i=i+1;	Q2=count;	para=sldcrkc(r2,r3,r4,Q2,w2,0,sigma,theta1,flag);	% Store position variables in matrices	Q22(i)=para(6);	Bx(i)=para(25);	By(i)=para(26);	Cx(i)=para(27);	Cy(i)=para(28);	Dx(i)=para(27)-(r4*sin((2*pi)-theta1r));	Dy(i)=para(28)-(r4*cos((2*pi)-theta1r));   for m=1:pp      for n= 1:qq 	     mx(m,n,i)=Bx(i)+rr(m,n)*cos((para(7)*pi/180)+ppheta(m,n));	     my(m,n,i)=By(i)+rr(m,n)*sin((para(7)*pi/180)+ppheta(m,n));      end      end   r11(i)=para(1);   w22(i)=para(14);   w33(i)=para(15);   r1dd(i)=para(9);   vbx(i)=para(29);   vby(i)=para(30);   vcx(i)=para(31);   vcy(i)=para(32);	  end itotal=i;width=0.95;height=0.95;xmina=min([min(min(mx(1:pp,1,:))) min(min(mx(1,1:qq,:))) min(Bx) ...      	min(Cx) min(Dx) min(bushx) min(framex)]);xmaxa=max([max(max(mx(1:pp,1,:))) max(max(mx(1,1:qq,:))) max(Bx) ...			max(Cx) max(Dx) max(bushx) max(framex)]);ymina=min([min(min(my(1:pp,1,:)))  min(min(my(1,1:qq,:))) min(By) ...			min(Cy) min(Dy) min(bushy) min(framey)]);ymaxa=max([max(max(my(1:pp,1,:))) max(max(my(1,1:qq,:))) max(By) ...      	max(Cy) max(Dy) max(bushy) max(framey)]);rangex=xmaxa-xmina;rangey=ymaxa-ymina;xmin=xmina-0.01*rangex;xmax=xmaxa+0.01*rangex;ymin=ymina-0.01*rangey;ymax=ymaxa+0.01*rangey;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin=values(1);xmax=values(2);ymin=values(3);ymax=values(4);res = zeros( 15, itotal);i = 0;i = i+1; res( i,: ) = Bx;i = i+1; res( i,: ) = By; i = i+1; res( i,: ) = Cx;i = i+1; res( i,: ) = Cy;i = i+1; res( i,: ) = Dx;i = i+1; res( i,: ) = Dy;% pistx and pisty are matrics with size (5,1)i = i+1; res( i,1:5 ) = pistx';i = i+1; res( i,1:5 ) = pisty';for m = 1:pp    for n = 1:qq      i = i+1; res( i,: ) = mx(m,n,:);      i = i+1; res( i,: ) = my(m,n,:);   end   endi = 8+2*pp*qq;res( i+1,1 ) = xmin;res( i+1,2 ) = xmax;res( i+1,3 ) = ymin;res( i+1,4 ) = ymax;res( i+1,5:8 ) = [r1 r2 r3 r4];res( i+1,9 ) = theta1r;res( i+1,10 ) = hpist;res( i+1,11 ) = w2;   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function CreateMechanismHandles( handle,r,theta1r,mx,my,xmin,xmax,ymin,ymax,pp,...         qq,itotal)axes(handle);hdls = get(handle,'userdata');if ~isempty(hdls)   if hdls ~= 0      delete(hdls);   end   endaxis([xmin, xmax, ymin, ymax]);r2 = r(2);r3 = r(3);rtot=sum(r(2:4));theta1=(180/pi)*theta1r;coor=bushing((rtot/70),0,0,20,0);bushx=coor(:,1);bushy=coor(:,2);coor=circle2((rtot/60),0,0,20);circx=coor(:,1);circy=coor(:,2);coor=frameline(((r2+r3)*1.05),(r2*cos((2*pi)-theta1r)),...     ((-r2*sin((2*pi)-theta1r))-(rtot/30)),20,theta1,1);framex=coor(:,1);framey=coor(:,2);			joint1=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',6, 'color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',6, 'color', 'k');crank=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');   pisto=line('xdata',[],'ydata',[],'linestyle','-','linewidth',1,'color','k');busho=line('xdata',[],'ydata',[],'linewidth',1,'linestyle','-','color','r');circo=line('xdata',[],'ydata',[],'linewidth',1,'linestyle','-','color','r');coupline1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');coupline2=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');frame=line('xdata',[],'ydata',[],'linewidth',1,'linestyle','-','color','r');slline=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');k = 1;for m = 1:pp   for n = 1:qq      gridline(k) =line('xdata',[],'ydata',[],'linewidth',1,'linestyle','-','color','r');		for ipoints=1:itotal			gridline2(k,ipoints)=line('xdata',[],'ydata',[],'linewidth',1,'linestyle','-','color','r');				end		 		 	gridpoint(k)=line('xdata',[],'ydata',[],'marker','o','linewidth',1,'color','k');      k = k+1;   end   endk = 1;for m = 1:pp   for n = 1:qq	   for ipoints =1:itotal		   	if ipoints <itotal		   		msdx=mx(m,n,ipoints);				midx=mx(m,n,ipoints)+(mx(m,n,ipoints+1)-mx(m,n,ipoints))/2;				msdy=my(m,n,ipoints);				midy=my(m,n,ipoints)+(my(m,n,ipoints+1)-my(m,n,ipoints))/2;			end			if ipoints ==itotal		   		msdx=mx(m,n,ipoints);				midx=mx(m,n,ipoints)+(mx(m,n,1)-mx(m,n,ipoints))/2;				msdy=my(m,n,ipoints);				midy=my(m,n,ipoints)+(my(m,n,1)-my(m,n,ipoints))/2;			end							 set(gridline2(k,ipoints),'xdata',[msdx midx],'ydata',[msdy midy]);		end       k = k+1;      end   endset(busho,'xdata',bushx,'ydata',bushy);set(circo,'xdata',circx,'ydata',circy);set(frame,'xdata',framex,'ydata',framey);		hdls=[joint1 joint2 crank coupler pisto coupline1 coupline2 slline gridpoint gridline busho circo frame]; set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition( link,i,hpist,theta1r,Bx,By,Cx,Cy,Dx,Dy,pistx,pisty,mx,my,pp,qq)joint1 = link(1);joint2 = link(2);crank = link(3);coupler = link(4);pisto = link(5);slline = link(8);gridpoint = link(9:8+pp*qq);set(pisto,'xdata',(pistx+Dx(i)),'ydata',(pisty+Dy(i)));set(joint1,'xdata', Bx(i), 'ydata',By(i));set(joint2,'xdata', Cx(i), 'ydata',Cy(i));set(crank,'xdata',[0 Bx(i)],'ydata', [0 By(i)]);set(coupler,'xdata', [Bx(i) Cx(i)],'ydata', [By(i) Cy(i)]);set(slline,'xdata',[Cx(i) Dx(i)-(hpist/2)*sin(theta1r)], ...					'ydata',[Cy(i) Dy(i)+(hpist/2)*cos(theta1r)]);k = 1;for m = 1:pp   for n = 1:qq      set(gridpoint(k),'xdata',mx(m,n,i),...         'ydata',my(m,n,i));      k = k+1;   end   end
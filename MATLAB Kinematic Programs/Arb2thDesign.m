function []=Arb2thDesign(Action,Argument2)% Matlab program to draw a gear conjugate to a straight gear.%Some of the important variables used are:%r2      = Pitch radius of gear 2%N2      = Number of teeth on gear 2%N3      = Number of teeth on gear 3%a3      = Addendum constant for gear 3%Program  if nargin==0 && isempty(findobj('Tag','arb2th_dsgn'))	Action='initialize';elseif nargin==0 && ~isempty(findobj('Tag','arb2th_dsgn'))	Action='None';endif ~strcmp(Action,'initialize') && ~strcmp(Action,'Help')	a=findobj('Tag','arb2th_dsgn');    UD=a.UserData;  	hdls = UD.hand;	h_N2 = hdls(1);	h_npoints = hdls(2);	h_a3 = hdls(3);	h_gamma = hdls(4);  	h_N3 = hdls(5);  	h_a1 = hdls(6);  	h_b1 = hdls(7);  	h_Dp = hdls(8);	h_Eradio = hdls(9:10);  	h_Cdtxt = hdls(11);  	h_t0txt = hdls(12);  	h_A3txt = hdls(13);  	h_status = hdls(14);	N2 = get(h_N2,'userdata');    npoints = get(h_npoints,'userdata');    a3 = get(h_a3,'userdata');   	gamma = get(h_gamma,'userdata'); 	N3 = get(h_N3,'userdata');    a1 = get(h_a1,'userdata');     b1 = get(h_b1,'userdata');     Dp = get(h_Dp,'userdata');       if get(h_Eradio(1),'value') == 1     	sign = 1;   else     	sign = -1;   end           b=findobj('Tag','arb2th_axes');   hdls = get(b,'userdata');   gear3line = hdls(1);          gear3_pitch_line = hdls(2);       endswitch Actioncase 'initialize'   if nargin >= 2 || ~isempty(findobj('tag','menu_page'))	   LocalOpenFig;      Arb2thDesign('Draw Axes');   else   	show_me_logo('initialize','Arb2thDesign');   endcase 'Draw Axes'		A1=a1/Dp;	B1=b1/Dp;	p=pi/Dp;	r2=p*N2/(pi*2);	fact=180/(4*atan(1.0));	gammar=gamma/fact;	lt=pi/(2*Dp)-2*A1*tan(gammar);	lb=pi/(2*Dp)+2*B1*tan(gammar);	r3=r2*N3/N2;	Cd=r2+sign*r3;	A3=sign*a3/Dp;	B3=sign*B1;	t0=pi*(1-1/N3);	r2d=r2-B1;	r2a=r2+A1;	g2angle=pi/N2;	g2baseangle=atan((lb/2)/(r2d));	g3angle=pi/N3;% Check for negative values for lt.  If it is negative,% set the value to zero and compute the corresponding addendum.	if lt < 0		lt=0;		A1=(pi/(2*Dp)/2*tan(gammar));	end			% Determine points on dedendum circle	nbpoints=2;	dang=(g2angle-g2baseangle)/(nbpoints-1);	ang=g2angle+dang;	for i=1:1:nbpoints		ang=ang-dang;		gear2x(i)=r2d*cos(ang);		gear2y(i)=r2d*sin(ang);		g2x(i)=gear2x(i);		g2y(i)=gear2y(i);	end	% Determine a set of points for flank region	dx=(r2a-r2d)/npoints;	x=-dx+r2d;	i=nbpoints;	for j=1:1:npoints		i=i+1;		x=x+dx;		gear2x(i)=x;		gear2y(i)=lb/2-(x-r2d)*tan(gammar);		n(i)=1/tan(gammar); 	end% Identify the minimum set of points which must be plotted.  For% a straight toothed gear, this is only 3.  Store these points % in g2x and g2y.	nptotal=1+nbpoints;	g2x(nptotal)=gear2x(i);	g2y(nptotal)=gear2y(i);% Reflect the line about the x axis to determine the other side of the gear.	for i=1:1:nptotal		g2x(nptotal+i)=g2x(nptotal+1-i);		g2y(nptotal+i)=-g2y(nptotal+1-i);	end	ntotal=2*nptotal; 			% Determine points on the pitch circle radius for gear 1.	theta0=-g2angle;	theta1=-theta0;	dtheta=(theta1-theta0)/20;	th=-dtheta+theta0;	for j=1:1:20		th=th+dtheta;		pc2x(j)=r2*cos(th);		pc2y(j)=r2*sin(th);	end		% Update the Cd, t0 and A3 value on the screen	set(h_Cdtxt,'string',num2str(Cd));      	set(h_t0txt,'string',num2str(t0));         set(h_A3txt,'string',num2str(A3));    % Define the driven gear profile	j=0; 	r3d=r3-B3;	r3a=r3+A3;	for i=nbpoints+1:1:npoints+nbpoints		A=gear2y(i)-gear2x(i)*n(i);		B=r2;		C=r2*n(i);		arg=B*B-A*A+C*C;		if arg >=0			t=(-B+sqrt(arg))/(A-C);			phi=2*atan(t);			the=-sign*phi*r2/r3+t0;			thed=the*fact;			tempx=-Cd*cos(the)+cos(the-phi)*gear2x(i)+sin(the-phi)*gear2y(i);			tempy=Cd*sin(the)-sin(the-phi)*gear2x(i)+cos(the-phi)*gear2y(i);			rad=sqrt(tempx^2+tempy^2);			if rad<=(r3a) && rad>= (r3d)				j=j+1;				gear3x(j)=tempx;				gear3y(j)=tempy;							ang(j)=atan2(gear3y(j), gear3x(j));				end		end	end	jtotal=j;% A bug in the original program, While internal gear is desired, jtotal == 0% Therefore, set up a check to return instead of error occur.% Q: when the internal gear choice is available	a = findobj('tag','arb2thAnalButton');	if jtotal == 0      set(h_status,'string','this setting is not assemblable');      set(a,'Enable','off');      return   else      set(h_status,'string','');      set(a,'Enable','on');   end% Reorder the points to include the base as the first points.	for j=1:1:jtotal		xtemp(j)=gear3x(jtotal-j+1);		ytemp(j)=gear3y(jtotal-j+1);	end% Determine points on dedendum circle	nbpoints=2;	nptotal=jtotal+nbpoints;	r3dtemp=sqrt(ytemp(1)^2+xtemp(1)^2);	ang2=atan2(ytemp(1),xtemp(1));% If the gear tooth does not extend to the dedendum circle, extrapolate% from the first point to the dedendum circle.	if r3dtemp>r3d		ang3=atan2(ytemp(2)-ytemp(1),xtemp(2)-xtemp(1));		ang2m2=ang2-ang3;		rdif=r3dtemp-r3d;		dc=rdif/cos(ang2-ang3);		xc=xtemp(1)-dc*cos(ang3);		yc=ytemp(1)-dc*sin(ang3);		ang2=atan2(yc, xc);	end	dang=(g3angle-ang2)/(nbpoints-1);	ang=g3angle+dang;	for i=1:1:nbpoints		ang=ang-dang;		g3x(i)=r3d*cos(ang);		g3y(i)=r3d*sin(ang);		gear3x(i)=g3x(i);		gear3y(i)=g3y(i);	end% re-store the original points	i=nbpoints;	for j=1:1:jtotal		i=i+1;		gear3x(i)=xtemp(j);		gear3y(i)=ytemp(j);		end% Reduce the number of points to make drawing the whole gear easier.% Store the results in g3x and g3y.	i=nbpoints;	k=nbpoints;	for j=1:1:jtotal		m=20*j;		i=i+1;		gear3x(i)=xtemp(j);		gear3y(i)=ytemp(j);			if (m<=jtotal || j==nbpoints+1 || j==jtotal) && m<jtotal			if j==jtotal; m=jtotal; end			k=k+1;			g3x(k)=xtemp(m);			g3y(k)=ytemp(m);		end		end	ktotal=k;	% Reflect the points to draw the rest of the gear tooth	itotal=nbpoints+jtotal;	j=itotal;	for i=1:1:itotal		j=j+1;		gear3x(j)=gear3x(itotal-i+1);		gear3y(j)=-gear3y(itotal-i+1);	end		itotal=j;	j=ktotal;	for i=1:1:ktotal		j=j+1;		g3x(j)=g3x(ktotal-i+1);		g3y(j)=-g3y(ktotal-i+1);	end		ktotal=j;	% Define the pitch circle arc of the generated gear	maxang=max(ang);	minang=-maxang;	dk=(maxang-minang)/20;	i=0;	for k=minang:dk:maxang		i=i+1;		pc3y(i)=r3*sin(k);		pc3x(i)=r3*cos(k);	end	xmax=max([gear3x, pc3x]);	xmin=min([gear3x, pc3x]);	ymax=max([gear3y, pc3y]);	ymin=min([gear3y, pc3y]);	xrange=xmax-xmin;	yrange=ymax-ymin;   xmin = xmin-0.1*xrange;   xmax = xmax+0.1*xrange;    ymin = ymin-0.1*yrange;   ymax = ymax+0.1*yrange;	axis([xmin xmax ymin ymax]);% Plot the positions	set(gear3line, 'xdata', gear3x, 'ydata', gear3y);   set(gear3_pitch_line, 'xdata',pc3x, 'ydata', pc3y);   refresh;%	title('Conjugate Gear Tooth');   a = findobj('tag','arb2th_dsgn');   UD=a.UserData;   hdls = UD.hand;   lim = [xmin xmax ymin ymax];   set(a,'userdata',struct('hand',hdls,'wlim',lim));   case 'Change Gear 1'   n = Argument2;   if n == 1		newval=get(h_N2,'string');	   N2=check_val(N2,newval);	elseif n == 2		newval=get(h_npoints,'string');	   npoints=check_val(npoints,newval);	elseif n == 3		newval=get(h_a3,'string');	   a3=check_val(a3,newval);	else		newval=get(h_gamma,'string');	   gamma=check_val(gamma,newval);	end   set(h_N2,'UserData',N2,'string',num2str(N2));   set(h_npoints,'UserData',npoints,'string',num2str(npoints));   set(h_a3,'UserData',a3,'string',num2str(a3));   set(h_gamma,'UserData',gamma,'string',num2str(gamma));   Arb2thDesign('Draw Axes'); case 'Change Gear 2'   n = Argument2;   if n == 1		newval=get(h_N3,'string');	   N3=check_val(N3,newval);	elseif n == 2		newval=get(h_a1,'string');	   a1=check_val(a1,newval);	else		newval=get(h_b1,'string');	   b1=check_val(b1,newval);	end   set(h_N3,'UserData',N3,'string',num2str(N3));   set(h_a1,'UserData',a1,'string',num2str(a1));   set(h_b1,'UserData',b1,'string',num2str(b1));   Arb2thDesign('Draw Axes'); case 'Change Dp'	newval=get(h_Dp,'string');   Dp=check_val(Dp,newval);   set(h_Dp,'UserData',Dp,'string',num2str(Dp));   Arb2thDesign('Draw Axes');       case 'E_radio'   	num_buttons = 2;	button = Argument2;	if get(h_Eradio(button),'value') == 0		set(h_Eradio(button),'value',1);	end	set(h_Eradio([1:(button-1), (button+1):num_buttons]),'value',0);	Arb2thDesign('Draw Axes');      case 'Resize'	n = Argument2;%To retrieve current axis limits	a=findobj('Tag','arb2th_dsgn');    UD=a.UserData;	xmin=UD.wlim(1);	xmax=UD.wlim(2);	ymin=UD.wlim(3);	ymax=UD.wlim(4);% If 'Zoom out' button is pressed, downsize the figure by increasing x any y axis limits% If 'Zoom In' button is pressed, enlarge the figure by decreasing x any y axis limits    if n==1		factor=0.05;	else		factor=-0.05;    end    rangex = xmax - xmin;    rangey = ymax - ymin;	xmin=xmin-rangex*factor;    xmax=xmax+rangex*factor;    ymin = ymin-rangey*factor;	ymax = ymax+rangey*factor;	UD.wlim = [xmin xmax ymin ymax];    a.UserData=UD;    axis(UD.wlim);case 'None'     % the following command will bring the existing figure % to foreground	a = findobj('Tag','arb2th_dsgn');	figure(a);   case 'Close'     % if the target window exist then close it	if ~isempty(findobj('Tag','Slider Crank Analysis Window'))	   arb2th_ana('Stop');	   a = findobj('Tag','Slider Crank Analysis Window');   	 	close(a);	end   	a = findobj('Tag','arb2th_dsgn');	close(a);	   case 'Analysis'	arb2th_ana('initialize',Dp,N2,N3,a3,npoints,a1,b1,gamma,sign);   case 'Show Definitions'   Show_definition('initialize','Arb2thDesign.jpg');   case 'Help'%-------On-line help     HelpStr={'Arb2thDesign';    '';    '    "Arb2thAnalysis" is a program designed to identify the  tooth';    'profile that is conjugate with a simple tooth with straight sided';	'teeth.   The procedure used in the program  is  outlined  in  the';	'manual included with this program. ';    ' '};   helpwin(HelpStr,'Arb2thDesign');case 'Get File'% Get the file name using the UIGETFILE	[sFileName sFilePath] = uigetfile('*.dat','Load File');	if sFileName==0 && sFilePath==0		return;	end%Combine the path and file name together	sTemp=strcat(sFilePath,sFileName);%get the size to erase the '.dat' extension	sz=size(sFileName);%load the data file	load(sTemp);%assign the parameter to a variable	Parameter=eval(sFileName(1:(sz(2)-4)));	if length(Parameter)==13		Dp = Parameter(1);		N2 = Parameter(2);		N3 = Parameter(3);		a3 = Parameter(4);		npoints = Parameter(5);		a1 = Parameter(6);		b1 = Parameter(7);		gamma = Parameter(8);		sign = Parameter(9);		set(h_Dp,'UserData',Dp,'string',num2str(Dp));		set(h_N2,'Userdata',N2,'string',num2str(N2));		set(h_N2,'Userdata',N3,'string',num2str(N3));	   set(h_a3,'Userdata',a3,'string',num2str(a3));	   set(h_npoints,'Userdata',npoints,'string',num2str(npoints));	   set(h_a1,'Userdata',a1,'string',num2str(a1));	   set(h_b1,'Userdata',b1,'string',num2str(b1));	   set(h_gamma,'Userdata',gamma,'string',num2str(gamma));	   if sign == 1			Arb2thDesign('E_radio',1);		else			Arb2thDesign('E_radio',2);		end		Arb2thDesign('Draw Axes');	  	refresh;	else	  	set(h_status,'string','invalid file format');		return;	end	case 'Put File'	[sFileName sFilePath]=uiputfile('*.dat','SaveAs');	ParameterData=[Dp;N2;N3;a3;npoints;a1;b1;gamma;sign];	[sTemp,errMsg]=sprintf('%s%s',sFilePath,sFileName);	[strCmd,errMsg]=sprintf('%s %s %s','save',sTemp,'-ascii ParameterData');	eval(strCmd);endfunction val=check_val(oldval,newval)%Check if the user input is number input%if not, retrieve the previous value in userdataval=zeros(1);if ~isequal(length(oldval),length(str2num(newval))),  	val=oldval;%['Warning:An invalid property value has been entered.']);else  	val=str2num(newval);end   function LocalOpenFig()hdls = zeros(1,20);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Control the color of the UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%StdColor = get(0,'DefaultUIcontrolBackgroundColor');%PointsPerPixel = 72/get(0,'ScreenPixelsPerInch');bgframe = StdColor;bgedit = [1 1 1];bgtext = bgframe;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Main Figure of Crank Rocker Design%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 480;sy = 400;FigPos = [ 10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','pixels', ...	'Color',[0.8 0.8 0.8], ...	'Name','Conjugate Gear Tooth Generation Window', ...	'NumberTitle','off', ...	'Position',FigPos, ...  	'Tag','arb2th_dsgn');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Draw Frame First% This will prevent the frames from been drawn on top of% other UICONTROLS. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0083 0.01 0.98 0.113], ...	'Style','frame', ...  	'Tag','Frame1');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.7275 0.3896 0.25], ...	'Style','frame', ...	'Tag','Frame_link');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0083 0.13 0.585 0.08], ...	'Style','frame', ...	'Tag','Frame_angle');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.13 0.3896 0.08], ...	'Style','frame', ...	'Tag','Frame_pushbutton');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.5175 0.3896 0.2025], ...	'Style','frame');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.4425 0.3896 0.0675], ...	'Style','frame');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.2175 0.3896 0.0725], ...	'Style','frame', ...	'Tag','Frame_radio');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.2975 0.3896 0.1375], ...	'Style','frame');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');  c = uimenu('Parent',b, ...	'Callback','Arb2thDesign(''Get File'')', ...	'Label','Load', ...	'Tag','submenu_load');   c = uimenu('Parent',b, ...	'Callback','Arb2thDesign(''Put File'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create graphics window for design input%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-------Reference axisb = axes('Parent',a, ...  	'Box','on', ...  	'Color',[1 1 1], ...	'Position',[0.0083 0.217 0.585 0.762], ...  	'XColor',[0 0 0], ...  	'XGrid','off', ...  	'XTick',[],...  	'YColor',[0 0 0], ...  	'YGrid','off', ...  	'YTick',[], ...  	'ZColor',[0 0 0], ...  	'ZGrid','off', ...  	'ZTick',[]);		b = axes('Parent',a, ...   'Box','off', ...  	'DataAspectRatio',[1 1 1],...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Position',[0.0083 0.217 0.585 0.762], ...	'Tag','arb2th_axes');axis off;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% edit related uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_N2 = uicontrol('Parent',a, ...  	'Units','normalized', ...  	'BackgroundColor',bgedit, ...	'Callback','Arb2thDesign(''Change Gear 1'',1)', ...	'Position',[0.825 0.8875 0.1375 0.05], ...	'String','100', ...	'Style','edit', ...	'Tag','N2_edit', ...  	'UserData',100);  h_npoints  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','Arb2thDesign(''Change Gear 1'',2)', ...	'Position',[0.825 0.8375 0.1375 0.0525], ...	'String','200', ...	'Style','edit', ...	'Tag','npoint_edit', ...  	'UserData',200);  h_a3 = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','Arb2thDesign(''Change Gear 1'',3)', ...	'Position',[0.825 0.7875 0.1375 0.05], ...	'String','1', ...	'Style','edit', ...	'Tag','a3_edit', ...	'UserData',1);   h_gamma = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','Arb2thDesign(''Change Gear 1'',4)', ...	'Position',[0.825 0.735 0.1375 0.05], ...	'String','25', ...	'Style','edit', ...	'Tag','gamma_edit', ...	'UserData',25);   h_N3 = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','Arb2thDesign(''Change Gear 2'',1)', ...	'Position',[0.825 0.6275 0.1375 0.05], ...	'String','30', ...	'Style','edit', ...	'Tag','N3_edit', ...	'UserData',30);   h_a1 = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','Arb2thDesign(''Change Gear 2'',2)', ...	'Position',[0.825 0.5775 0.1375 0.05], ...	'String','1', ...	'Style','edit', ...	'Tag','a1_edit', ...	'UserData',1);   h_b1 = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','Arb2thDesign(''Change Gear 2'',3)', ...	'Position',[0.825 0.5275 0.1375 0.05], ...	'String','1.2', ...	'Style','edit', ...	'Tag','b1_edit', ...	'UserData',1.2);   h_Dp = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','Arb2thDesign(''Change Dp'')', ...	'Position',[0.825 0.4525 0.1375 0.05], ...	'String','5', ...	'Style','edit', ...	'Tag','Dp_edit', ...	'UserData',5);   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% radio button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_Eradio(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','Arb2thDesign(''E_radio'',1)', ...	'Position',[0.6167 0.235 0.1521 0.0375], ...	'String','external', ...	'Style','radiobutton', ...	'Value',1);  h_Eradio(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','Arb2thDesign(''E_radio'',2)', ...	'Position',[0.8063 0.235 0.1521 0.0375], ...	'String','internal', ...	'Style','radiobutton', ...	'Value',0);   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% push button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','Arb2thDesign(''Analysis'')', ...	'Position',[0.6062 0.14 0.1333 0.06], ...	'String','Analysis', ...	'Tag','arb2thAnalButton');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','Arb2thDesign(''Close'')', ...	'Position',[0.8583 0.14 0.125 0.06], ...	'String','Close', ...	'Tag','CloseButon');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','Arb2thDesign(''Help'')', ...	'Position',[0.7396 0.14 0.1187 0.06], ...	'String','Info', ...	'Tag','InfoButton');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','Arb2thDesign(''Resize'',1)', ...   'Position',[0.209 0.14 0.178 0.06], ...   'userdata',1, ...	'String','Zoom Out');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','Arb2thDesign(''Resize'',2)', ...	'Position',[0.3875 0.14 0.178 0.06], ...   'String','Zoom In');   b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','Arb2thDesign(''Show Definitions'')', ...	'Position',[0.02917 0.14 0.178 0.06], ...   'String','Definitions');    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% text controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_status = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'HorizontalAlignment','left', ...	'Position',[0.05625 0.0275 0.9083 0.0475], ...	'String',' ', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6208 0.925 0.2042 0.0425], ...	'String','generating gear', ...	'Style','text');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.8775 0.18625 0.0425], ...	'String','no. of teeth', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.835 0.18625 0.0425], ...	'String','no. of points', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.7875 0.18625 0.0425], ...	'String','a3', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.7375 0.18625 0.0425], ...	'String','flank angle', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6208 0.67 0.2042 0.0425], ...	'String','conjugate gear', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.6225 0.18625 0.0425], ...	'String','no. of teeth', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.625 0.5725 0.175 0.0425], ...	'String','a1', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.625 0.5225 0.175 0.0425], ...	'String','b1', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.625 0.4525 0.18625 0.0425], ...	'String','diametral pitch', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.625 0.38 0.18625 0.0425], ...	'String','Cd', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.625 0.3425 0.18625 0.0425], ...	'String','t0', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.625 0.305 0.18625 0.0425], ...	'String','A3', ...	'Style','text');h_Cdtxt = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForeGroundColor',[0 0 1], ...	'BackgroundColor',bgtext, ...   'Position',[0.825 0.38 0.1375 0.0375], ...	'String','', ...	'Style','text');h_t0txt = uicontrol('Parent',a, ...   'Units','normalized', ...   'ForeGroundColor',[0 0 1], ...	'BackgroundColor',bgtext, ...   'Position',[0.825 0.3425 0.1375 0.0375], ...	'String','', ...	'Style','text');h_A3txt = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForeGroundColor',[0 0 1], ...	'BackgroundColor',bgtext, ...   'Position',[0.825 0.305 0.1375 0.0375], ...	'String','', ...	'Style','text');drawnow;   hdls=[ h_N2 h_npoints h_a3 h_gamma h_N3 h_a1 h_b1 ...		 h_Dp h_Eradio h_Cdtxt h_t0txt h_A3txt h_status ];a = findobj('Tag','arb2th_dsgn');set(a,'userdata',struct('hand',hdls));	% Set up graphics handles	gear3line=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', [1,0,0]);	gear3_pitch_line=line('xdata',[],'ydata' ,[],'linewidth',0.4,'color', 'k','linestyle','-.');		 hdls=[ gear3line gear3_pitch_line ];a = findobj('Tag','arb2th_axes');set(a,'userdata',hdls );			
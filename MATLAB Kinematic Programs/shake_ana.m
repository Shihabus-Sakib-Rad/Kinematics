function shake_ana(Action,r,w2,W,g,mode)% the contents of the userdata of Analysis Window % handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(4) = handle of fig3 popupmenu% handles(5) = handle of fig4 popupmenu% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(8) = handle of axe3% handles(9) = handle of axe4% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(13) = handle of bead(3)% handles(14) = handle of bead(4)% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1% handles(18) = handle of reference axe for axe2% handles(19) = handle of reference axe for axe3% handles(20) = handle of reference axe for axe4% handles(21) = handle of submenu 'Load'% handles(22) = handle of submenu 'Save'% handles(23) = handle of 'Return' button% handles(24) = handle of speed button h_plus% handles(25) = handle of L1% handles(26) = handle of L2% handles(27) = handle of L3% handles(28) = handle of L4% each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler block];      global strFigType global nAnimationFlagglobal g_AnaResglobal nChangeSpeed% Define the axes for the first graph (input/output angle graph)if nargin==0 && isempty(findobj('Tag','Shake Analysis Window')),  % cogana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','Shake Analysis Window'))      % cogana is already open   Action='None';elseif nargin== 1 && ~isempty(findobj('Tag','Shake Analysis Window')) && strcmp( Action, 'initialize'), % cogana is already open	% Recalculate the value, and then redraw	Action='None';endswitch Actioncase 'initialize'   if  isempty(findobj('Tag','Shake Analysis Window'))         LocalOpenFig;      nAnimationFlag = 0;   else  		shake_ana('None');   end       if nargin < 6            r = [ 4 14 2 4 ];      w2 = 4;      W = [ 1.875 34 20 47.85 ];      g = 386;      mode = 1;   end      if exist('nAnimationFlag')       if nAnimationFlag == 1      	shake_ana('Stop');         return;      end   end        g_AnaRes = CalcResult( r, w2, W, g, mode );   DrawAnalysisWindow;   shake_ana('ShowFigure');   shake_ana('Start');    	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	%	Change Figure Call Back Function	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'ChangeFigure'   DrawAnalysisWindow;   shake_ana('ShowFigure');   shake_ana('Start');   case 'SetSpeed'   nChangeSpeed = r(1);   case 'ChangeFigureNo'   DrawAnalysisWindow;   shake_ana('ShowFigure');   shake_ana('Start');   case 'Animation'   a = findobj('Tag','Shake Analysis Window');      handles = get(a,'userdata');      [ m, n ] = size( g_AnaRes);   itotal = n;   timesink = handles(16);   i = handles(15);   dt = 5;      nFigNum  = get( handles(1),'value');   nType(1) = get( handles(2),'value');   nType(2) = get( handles(3),'value');   nType(3) = get( handles(4),'value');   nType(4) = get( handles(5),'value');      bead  = zeros(1,4);   links = zeros(4,5);   L = zeros(1,4);   bead(1) = handles(11);   bead(2) = handles(12);   bead(3) = handles(13);   bead(4) = handles(14);   L(1) = handles(25);   L(2) = handles(26);   L(3) = handles(27);   L(4) = handles(28);      i = 6;   i = i+1; Bx = g_AnaRes(i,:);   i = i+1; By = g_AnaRes(i,:);   i = i+1; Cx = g_AnaRes(i,:);   i = i+1; Cy = g_AnaRes(i,:);   i = 12;   i = i+1; xblock= g_AnaRes(i:i+4,:);   i = i+5; yblock= g_AnaRes(i:i+4,:);   xblocka = xblock';   yblocka = yblock';      for j = 1:nFigNum      if nType(j) == 4      	links(j,:) = get(handles(j+5),'userdata');   	end   end         % set timer   tic;   	while nAnimationFlag                      cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i ==1         drawnow;      end            if nFigNum > 0         if nType(1) == 4				SetMechanismPosition( links(1,:),i,Bx,By,Cx,Cy,xblocka,yblocka);         else               j = nType(1) * 2 - 1;				set(bead(1), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));        				set(L(1), 'xdata',[0 g_AnaRes(j,i)], 'ydata',[0 g_AnaRes(j+1,i)]);        			end      end         		if nFigNum > 1         if nType(2) == 4				SetMechanismPosition( links(2,:),i,Bx,By,Cx,Cy,xblocka,yblocka);         else               j = nType(2) * 2 - 1;         	set(bead(2), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i)); 				set(L(2), 'xdata',[0 g_AnaRes(j,i)], 'ydata',[0 g_AnaRes(j+1,i)]);                end        end      		if nFigNum > 2        if nType(3) == 4				SetMechanismPosition( links(3,:),i,Bx,By,Cx,Cy,xblocka,yblocka);         else               j = nType(3) * 2 - 1;   	   	set(bead(3), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i)); 				set(L(3), 'xdata',[0 g_AnaRes(j,i)], 'ydata',[0 g_AnaRes(j+1,i)]);                end      end               if nFigNum > 3        if nType(4) == 4				SetMechanismPosition( links(4,:),i,Bx,By,Cx,Cy,xblocka,yblocka);        else              	j = nType(4) * 2 - 1;	     		set(bead(4), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));				set(L(4), 'xdata',[0 g_AnaRes(j,i)], 'ydata',[0 g_AnaRes(j+1,i)]);                 end        end        		drawnow;   %flush the draw buffer      i= i+1;      if i == itotal         i = 1;      end      if nChangeSpeed ~= 0         timesink = timesink * nChangeSpeed;         nChangeSpeed = 0;      end      while toc < timesink      end         tic;   end   nAnimationFlag = 0;   handles(15) = i;   handles(16) = timesink;   set(a,'Userdata',handles);   case 'ShowFigure'   a = findobj('Tag','Shake Analysis Window');   handles = get( a,'userdata');   nFigNum = get(handles(1),'value');   [ m, n ] = size( g_AnaRes);      npoints1 = g_AnaRes(m,2);   i = 10;   i = i+1; xsl1= g_AnaRes(i,1:npoints1);   i = i+1; ysl1= g_AnaRes(i,1:npoints1);   i = 23;   r2 = g_AnaRes(i,1);   xmin = g_AnaRes(i,4);    xmax = g_AnaRes(i,5);    ymin = g_AnaRes(i,6);    ymax = g_AnaRes(i,7);    if nFigNum > 0      nType = get(handles(2),'value');      axes(handles(6));      if nType == 4         CreateMechanismHandles( handles(6),r2,xsl1,ysl1,xmin,xmax,ymin,ymax);      else            i = nType * 2 - 1;      	line1 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line1','color', 'r');			origin1=line('xdata', 0, 'ydata', 0,'color', 'r', 'marker', '+','markersize', 6);				b1 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6,'tag','b1');         handles(11) = b1;			L1=line('xdata', [], 'ydata', [],'linestyle','-','color', 'k','linewidth' ,1);         handles(25) = L1;             		labels = GetFigLabel( nType );      	xlabel(labels(1));         ylabel(labels(2));         axis([ 1.2*min(g_AnaRes(i,:)) 1.2*max(g_AnaRes(i,:)) 1.2*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);      end   end         if nFigNum > 1      nType = get(handles(3),'value');      axes(handles(7));      if nType == 4         CreateMechanismHandles( handles(7),r2,xsl1,ysl1,xmin,xmax,ymin,ymax);      else            i = nType * 2 - 1;      	line2 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line2','color', 'r');			origin2=line('xdata', 0, 'ydata', 0,'color', 'r', 'marker', '+','markersize', 6);				b2 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6,'tag','b2');      	handles(12) = b2;			L2=line('xdata', [], 'ydata', [],'linestyle','-','color', 'k','linewidth' ,1);         handles(26) = L2;             		labels = GetFigLabel( nType );      	xlabel(labels(1));         ylabel(labels(2));         axis([ 1.2*min(g_AnaRes(i,:)) 1.2*max(g_AnaRes(i,:)) 1.2*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);      end	end            if nFigNum > 2      nType = get(handles(4),'value');      axes(handles(8));      if nType == 4         CreateMechanismHandles( handles(8),r2,xsl1,ysl1,xmin,xmax,ymin,ymax);      else            i = nType * 2 - 1;      	line3 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line3','color', 'r');			origin3=line('xdata', 0, 'ydata', 0,'color', 'r', 'marker', '+','markersize', 6);				b3 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6,'tag','b3');      	handles(13) = b3; 			L3=line('xdata', [], 'ydata', [],'linestyle','-','color', 'k','linewidth' ,1);         handles(27) = L3;            		labels = GetFigLabel( nType );      	xlabel(labels(1));         ylabel(labels(2));         axis([ 1.2*min(g_AnaRes(i,:)) 1.2*max(g_AnaRes(i,:)) 1.2*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);      end	end            if nFigNum > 3      nType = get(handles(5),'value');      axes(handles(9));      if nType == 4         CreateMechanismHandles( handles(9),r2,xsl1,ysl1,xmin,xmax,ymin,ymax);   	else           i = nType * 2 - 1;      	line4 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line4','color', 'r');			origin4=line('xdata', 0, 'ydata', 0,'color', 'r', 'marker', '+','markersize', 6);				b4 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6,'tag','b4');      	handles(14) = b4;            		L4=line('xdata', [], 'ydata', [],'linestyle','-','color', 'k','linewidth' ,1);         handles(28) = L4;	  		labels = GetFigLabel( nType );      	xlabel(labels(1));         ylabel(labels(2));         axis([ 1.2*min(g_AnaRes(i,:)) 1.2*max(g_AnaRes(i,:)) 1.2*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);      end   end   drawnow;   a = findobj('Tag','Shake Analysis Window');      set(a,'Userdata',handles);   case 'None'	figure( findobj('Tag','Shake Analysis Window'));	% Bring the figure to front, if it already existscase 'Close'   shake_ana('Stop');   a = findobj('Tag','Shake Analysis Window');      close(a);case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','Shake Analysis Window');      handles = get(a,'userdata');   set(handles(1),'Enable','off');   set(handles(2),'Enable','off');   set(handles(3),'Enable','off');   set(handles(4),'Enable','off');   set(handles(5),'Enable','off');   set(handles(21),'Enable','off');   set(handles(22),'Enable','off');   set(handles(23),'Enable','off');      nAnimationFlag = 1;   nChangeSpeed = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   shake_ana('Animation');   case 'Stop'   if  isempty(findobj('Tag','Shake Analysis Window'))   	return;      end   a = findobj('Tag','Shake Analysis Window');      handles = get(a,'userdata');   nAnimationFlag = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   set(handles(1),'Enable','on');   set(handles(21),'Enable','on');   set(handles(22),'Enable','on');   set(handles(23),'Enable','on');   nFigNum = get(handles(1),'value');   for i = 1:nFigNum,   	set(handles(i+1),'Enable','on');   end   case 'Return'   shake_ana('Stop');   if ~isempty(findobj('Tag','shake_dsgn'))     		b = findobj('Tag','shake_dsgn');      figure(b);   	b = findobj('Tag','Shake Analysis Window');   	  	close(b);   else   	return;         endcase 'GetFile'   % Get the file name using the UIGETFILE   [sFileName sFilePath] = uigetfile('*.dat','Load File');      if sFileName == 0 && sFilePath == 0      return;   end         % Combine the path and file name together   sTemp = strcat( sFilePath, sFileName );	% get the size to erase the '.dat' extension      sz  = size(sFileName);	% load the data file      load(sTemp);	% assign the parameter to a variable   Parameter = eval(sFileName(1:(sz(2)-4)));      a = findobj('Tag','Shake Analysis Window');      handles = get(a,'userdata');      if length(Parameter) == 5	   nFigNum  = Parameter(1);   	nType1 = Parameter(2);	   nType2 = Parameter(3);   	nType3 = Parameter(4);      nType4 = Parameter(5);         	set(handles(1),'Value',nFigNum);   	set(handles(2),'Value',nType1);   	set(handles(3),'Value',nType2);   	set(handles(4),'Value',nType3);      set(handles(5),'Value',nType4);            set(a,'userdata',handles);   	DrawAnalysisWindow;      shake_ana('ShowFigure');      shake_ana('Start');   else      return;   end             case 'PutFile'   [sFileName sFilePath] = uiputfile('*.dat','Save As');      a = findobj('Tag','Shake Analysis Window');      handles = get(a,'userdata');      nFigNum  = get(handles(1),'Value');   nType1 = get(handles(2),'Value');	nType2 = get(handles(3),'Value');   nType3 = get(handles(4),'Value');   nType4 = get(handles(5),'Value');   ParameterData = [nFigNum; nType1; nType2; nType3; nType4];   %   sTemp = strcat( sFilePath, sFileName)   [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);   [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');   eval(strCmd);      end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow();a = findobj('Tag','Shake Analysis Window');handles = get(a,'userdata');h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);h_fig3 = handles(4);h_fig4 = handles(5);nFigNum=get(h_fignum,'Value');position = zeros( 4, 4, 4);position(1,1,:) = [0.2 0.25 0.6 0.6];position(2,1,:) = [0.25 0.65 0.5 0.31];position(2,2,:) = [0.25 0.22 0.5 0.31];position(3,1,:) = [0.1 0.42 0.38 0.31];position(3,2,:) = [0.58 0.65 0.38 0.31];position(3,3,:) = [0.58 0.22 0.38 0.31];position(4,1,:) = [0.1 0.65 0.38 0.31];position(4,2,:) = [0.58 0.65 0.38 0.31];position(4,3,:) = [0.1 0.22 0.38 0.31];position(4,4,:) = [0.58 0.22 0.38 0.31]; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:9,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 17:20,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 1:nFigNum,	set(handles(i+1),'Enable','on');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 1	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...   'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 3%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 3	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 4%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 4	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...   'Color',[1 1 1], ...	'Position',position(4,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,4,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(20) = b;h_4 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,4,:), ...	'Tag','Axes4', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;handles(9) = h_4;end	set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig();strFigType = [ ...      'SF for given Wcb';...      'SF for Wcb = 0  ';...      'SF for opt. Wcb ';...   	'mechanism       '];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-40 sx sy ] ;a = figure('Units','Pixels', ...		'Color',[0.8 0.8 0.8], ...      'Name','Shake Analysis Window', ...       'NumberTitle','off', ...		'Position',FigPos, ...	 	'Tag','Shake Analysis Window');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...   'Position',[0.01731 0.020 0.77 0.1117], ...   'Style','frame', ...	'Tag','Frame2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.7808 0.020 0.2038 0.1117], ...   'Style','frame', ...   'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');h_load = uimenu('Parent',b, ...	'Callback','shake_ana(''GetFile'')', ...	'Label','Load', ...	'Tag','submenu_load');h_save = uimenu('Parent',b, ...	'Callback','shake_ana(''PutFile'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...	'Position',[0.03 0.07 0.095 0.03911], ... 	'String','No. of figs ', ...	'Style','text', ...	'Tag','StaticText2');h_fignum = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','shake_ana(''ChangeFigureNo'');', ...   'Position',[0.135 0.0837 0.10 0.03538], ...   'String',['1';'2';'3';'4'], ...   'Style','popupmenu', ...	'Tag','FigNumber', ... 	'Value',4);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.03 0.02793 0.08 0.03910], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','shake_ana(''SetSpeed'',0.707);', ...   'Position',[0.1327 0.02955 0.04038 0.03182], ...    'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','shake_ana(''SetSpeed'',1.414);', ...   'Position',[0.2 0.02955 0.04038 0.03182], ...   'String','-', ... 	'Tag','Minus_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.07821 0.06262 0.03724], ...   'String','Fig 1', ...	'Style','text', ... 	'Tag','StaticText1'); b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.08007 0.06262 0.03724], ...   'String','Fig 2', ...	'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.03352 0.06262 0.03724], ...   'String','Fig 3', ...   'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.03724 0.06262 0.03724], ...   'String','Fig 4', ...	'Style','text', ...	'Tag','StaticText1');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup the Popup menu contents for Figure Type Selection 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_fig1 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','shake_ana(''ChangeFigure'',1);', ...   'Position',[0.3077 0.0837 0.19256 0.03538], ...   'String',strFigType, ... 	'Style','popupmenu', ...	'Tag','Fig1', ...	'Value',4);h_fig2 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','shake_ana(''ChangeFigure'',2);', ...   'Position',[0.5692 0.0837 0.19256 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig2', ...	'Value',1);h_fig3 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','shake_ana(''ChangeFigure'',3);', ...   'Position',[0.3077 0.04024 0.1926 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig3', ...	'Value',2);h_fig4 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','shake_ana(''ChangeFigure'',4);', ...   'Position',[0.5692 0.04024 0.1926 0.03538], ...   'String',strFigType, ...   'Style','popupmenu', ...	'Tag','Fig4', ...	 'Value',3);	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','shake_ana(''Start'')', ...   'Position',[0.7942 0.07727 0.08577 0.04318], ...   'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','shake_ana(''Stop'')', ...	'Position',[0.8854 0.07727 0.08577 0.04318], ...    'String','Stop', ...   'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','shake_ana(''Return'')', ...	'Position',[0.7942 0.02891 0.1773 0.04318], ...    'String','Return', ...   'Tag','return_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(4) = h_fig3;handles(5) = h_fig4;handles(10) = nAnimationFlag;% initial animation starting indexhandles(15) = 1;% initial timesink valuehandles(16) = 0.1;handles(21) = h_load;handles(22) = h_save;handles(23) = h_return;handles(24) = h_plus;set( a, 'Userdata', handles);drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	String Table%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [ labels ] = GetFigLabel( nFigType )	strTable = cell( 3, 3 );   strTable( 1,:) = {'shaking force x (given CB)';'shaking force y (given CB)';'SF graph for given Wcb';};   strTable( 2,:) = {'shaking force x (zero CB)';'shaking force y (zero CB)';'SF graph for Wcb=0';};   strTable( 3,:) = {'shaking force x (opt CB)';'shaking force y (opt CB)';'SF graph for Optimum Wcb';};   labels = strTable( nFigType, : );%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] = CalcResult( r, w2, W, g, mode );driver=1;r4=0;times=1;Q1=0;r2 = r(1);%crank lengthr3 = r(2);%coupler lengthR2 = r(3);%distance from O2 to crank CGR3 = r(4);%distance from coupler CG to point AW2 = W(1);%the weight of the crankW3 = W(2);%the weight of the couplerW4 = W(3);%the weight of the pistonWcb = W(4);%the counter balance weight% Define constantsi=0;d2r=pi/180;r2d=180/pi;Q11=Q1*d2r;[qstart, qstop]=sc_angle_limits_cr(r2,r3,r4,Q1); npos=100;dq=(qstop-qstart)/(npos-1);Astar=[0;0];rpivot=0.15*r2;delta=0.3*r2;QM1=qstart-dq;	% Compute the masses at points A and BmA=(W2/g)*(R2/r2);mAprime=(W3/g)*(r3-R3)/r3;mBprime=(W3/g)*(R3/r3);MA0=mA+mAprime;MA=MA0-Wcb/g;MB=mBprime+W4/g;% Loop to analyze the linkage for tt full cyclesfor motion=1:1:npos	QM1=QM1+dq;	i=i+1;	QM = QM1*d2r;% Call function to compute the position	para = sldcrkc(r2,r3,r4,QM1,w2,0,mode,Q1,3);		Q2=para(6);	if Q2<0; Q2=Q2+360; end	Q22(i)=Q2;	w22(i)=para(14);	Q3=para(7);	Q33(i)=Q3;	w33(i)=para(15);	r1(i)=para(1);	rd1(i)=para(9);	Addx(i)=para(33);	Addy(i)=para(34);	Bddx(i)=para(35);	Bddy(i)=para(36);		assem=para(37);	% Compute the shaking force components	fBx(i)=-MB*Bddx(i);	fBy(i)=-MB*Bddy(i);	fsx(i)=-MA*Addx(i)+fBx(i);	fsy(i)=-MA*Addy(i)+fBy(i);	fsx0(i)=-MA0*Addx(i)+fBx(i);	fsy0(i)=-MA0*Addy(i)+fBy(i);	fstotal(i)=sqrt(fsx(i)^2+fsy(i)^2);	fstotal0(i)=sqrt(fsx0(i)^2+fsy0(i)^2);% Store position information in matrices.	Bx(i)= para(25);	By(i)= para(26);	Cx(i)= para(27);	Cy(i)= para(28);% Locate the slider block coordinates	xpin=Cx(i);	ypin=Cy(i);	height=delta;	length=2*height;	coords = rect(length,height,xpin,ypin,Q1,0);	for j=1:1:5		xblocka(i,j)=coords(j,1);		yblocka(i,j)=coords(j,2);	endend% Print the maximum value of the shaking force for Wcg=0 to the screen.%[fsmax0,j]=max(fstotal0);% Print the maximum value of the shaking force for the given value for Wcg % to the screen.%[fsmax,j]=max(fstotal);itotal=i;% ************************************************************************% Optimization of shaking force.% Find the optimum counter balance force using the golden section% method.x(1)=0;x(4)=(W2+W3+W4)/g;tau=(sqrt(5)-1)/2;x(2)=x(4)-tau*x(4);x(3)=x(1)+tau*x(4);% Compute the shaking force at the three initial pointsfor k=1:1:4	if k==1; MA=MA0-x(1);end	if k==2; MA=MA0-x(2);end	if k==3; MA=MA0-x(3);end	if k==4; MA=MA0-x(4);end	for j=1:1:npos		fsxo(j)=-MA*Addx(j)+fBx(j);		fsyo(j)=-MA*Addy(j)+fBy(j);		fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);	end	if k==1; f(1)=max(fstotalo);end	if k==2; f(2)=max(fstotalo);end	if k==3; f(3)=max(fstotalo);end	if k==4; f(4)=max(fstotalo);endend% Make n function evaluations to find the optimumfor k=1:1:20	[fmin,i]=min(f);	if i==1;		dx=x(3)-x(2);		x(4)=x(3);f(4)=f(3);		x(3)=x(2);f(3)=f(2);		x(2)=x(1)+dx;		MA=MA0-x(2);		for j=1:1:npos			fsxo(j)=-MA*Addx(j)+fBx(j);			fsyo(j)=-MA*Addy(j)+fBy(j);			fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);		end		f(2)=max(fstotalo);	end	if i==2		dx=x(3)-x(2);		x(4)=x(3);f(4)=f(3);		x(3)=x(2);f(3)=f(2);		x(2)=x(1)+dx;		MA=MA0-x(2);		for j=1:1:npos			fsxo(j)=-MA*Addx(j)+fBx(j);			fsyo(j)=-MA*Addy(j)+fBy(j);			fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);		end		f(2)=max(fstotalo);	end	if i==3		dx=x(3)-x(2);		x(1)=x(2);f(1)=f(2);		x(2)=x(3);f(2)=f(3);		x(3)=x(4)-dx;		MA=MA0-x(3);		for j=1:1:npos			fsxo(j)=-MA*Addx(j)+fBx(j);			fsyo(j)=-MA*Addy(j)+fBy(j);			fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);		end		f(3)=max(fstotalo);	end	if i==4;		dx=x(3)-x(2);		x(1)=x(2);f(1)=f(2);		x(2)=x(3);f(2)=f(3);		x(3)=x(4)-dx;		MA=MA0-x(3);		for j=1:1:npos			fsxo(j)=-MA*Addx(j)+fBx(j);			fsyo(j)=-MA*Addy(j)+fBy(j);			fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);		end		f(3)=max(fstotalo);	endend[y,i]=min(f);Wcbm=x(i)*g;MA=MA0-x(i);% Compute the shaking forcefor j=1:1:npos	fsxo(j)=-MA*Addx(j)+fBx(j);	fsyo(j)=-MA*Addy(j)+fBy(j);	fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);end[optsf,j]=max(fstotalo);optcb=Wcbm;% ********************************************************************% Compute shaking force with optimum counterbalanceMA=mA+mAprime-optcb/g;for j=1:1:npos	fAxo=-MA*Addx(j);	fAyo=-MA*Addy(j);	fsxo(j)=fAxo+fBx(j);	fsyo(j)=fAyo+fBy(j);end% Determine the coordinates of the slider line				smax=max(r1);smin=min(r1);	cmin=min(Cx);cymin=min(Cy);length1=smax-smin+length;ndash=20;csang=cos(Q11);ssang=sin(Q11);	xe = cmin-(0.5*length)*csang;ye = cymin-(0.5*length)*ssang;slflag=1;coord=frameline(length1,xe,ye,ndash,Q1,slflag);					npoints1=3*ndash;					% Offset slider line by half the height of the slider block.					for i=1:1:npoints1	xsl1(i)=coord(i,1)+(0.6*height)*ssang;	ysl1(i)=coord(i,2)-(0.6*height)*csang;end					% Define the pin and bushing coordinates	bush=bushing(r2/20,0,0,20,0);cir1=circle2(r2/20,0,0,20);% Find the limits for the plotsxmina=min([min(Bx) min(Cx) min(bush(:,1)) ...      min(xsl1) min(xblocka)]);xmaxa=max([max(Bx) max(Cx) max(bush(:,1)) ...      max(xsl1) max(xblocka)]);ymina=min([min(By) min(Cy) min(bush(:,2)) ...      min(ysl1) min(yblocka)]);ymaxa=max([max(By) max(Cy) max(bush(:,2)) ...      max(ysl1) max(yblocka)]);xmin=xmina-0.05*abs(xmaxa-xmina);xmax=xmaxa+0.05*abs(xmaxa-xmina);ymin=ymina-0.05*abs(ymaxa-ymina);ymax=ymaxa+0.05*abs(ymaxa-ymina);res = zeros( 23, itotal);i = 0;i = i+1; res( i,: ) = fsx;i = i+1; res( i,: ) = fsy;i = i+1; res( i,: ) = fsx0;i = i+1; res( i,: ) = fsy0;i = i+1; res( i,: ) = fsxo;i = i+1; res( i,: ) = fsyo;i = i+1; res( i,: ) = Bx;i = i+1; res( i,: ) = By;i = i+1; res( i,: ) = Cx;i = i+1; res( i,: ) = Cy;% xsl1, ysl1 and xblocka, yblocka have their matrix sizes different from% most of the other data. Therefore, they are taken care of separately.% We just store xsl1 and ysl1 in part of the 'res' matrix. To retrieve% only that part of matrix from the g_Anares variables later when xsl1 and% ysl2 are needed, the variable npoints1 is stored in this global variable% at res(23,2)i = i+1; res( i,1:npoints1 ) = xsl1;i = i+1; res( i,1:npoints1 ) = ysl1;% xblocka and yblocka are matries with size (itotal,5)% Because we need to store them into the 'res' variable, xblock and yblock are% created to transpose these two matries. Then they use five columns of 'res' % to store them xblock = xblocka';yblock = yblocka';i = i+1; res( i:i+4,: ) = xblock;i = i+5; res( i:i+4,: ) = yblock;i = i+5;res( i,1 ) = r(1);res( i,2 ) = npoints1;res( i,3 ) = mode;res( i,4 ) = xmin;res( i,5 ) = xmax;res( i,6 ) = ymin;res( i,7 ) = ymax;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateMechanismHandles( handle,r2,xsl1,ysl1,xmin,xmax,ymin,ymax) axes(handle);%setup the aspect ratio of the mechanism to 1 set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;axis([xmin xmax ymin ymax]);% Set up coordinates of bushings and pins.bush=bushing(r2/20,0,0,20,0);cir1=circle2(r2/20,0,0,20);	    % Set up the vectors needed to draw the linkagejoint1=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',7, 'color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',7,'color', 'k');block=line('xdata', [], 'ydata', [], 'linewidth' ,1,'color', 'k');crank=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');bush1=line('xdata', [], 'ydata',[], 'linestyle', '-', 'markersize', 10,'color', 'r');circ1=line('xdata', [], 'ydata',[], 'linestyle', '-', 'markersize', 10,'color', 'r');sliderline1=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');       set(bush1,'xdata', bush(:,1), 'ydata',bush(:,2));set(circ1,'xdata', cir1(:,1), 'ydata',cir1(:,2));       % Draw the frame line.set(sliderline1, 'xdata', xsl1, 'ydata', ysl1);hdls=[ joint1 joint2 crank coupler block ];set( handle,'userdata', hdls);    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = SetMechanismPosition( links,i,Bx,By,Cx,Cy,xblocka,yblocka)joint1 = links(1);joint2 = links(2);crank = links(3);coupler = links(4);block = links(5);   set(joint1,'xdata', Bx(i), 'ydata',By(i));set(joint2,'xdata', Cx(i), 'ydata',Cy(i));set(crank,'xdata',[0 Bx(i)],'ydata', [0 By(i)]);set(coupler,'xdata', [Bx(i) Cx(i)],'ydata', [By(i) Cy(i)]);set(block,'xdata', [xblocka(i,:)],'ydata', [yblocka(i,:)]);
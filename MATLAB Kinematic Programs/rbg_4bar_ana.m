function rbg_4bar_ana(Action,Astar,Bstar,ax,ay,bx,by,theta)% the contents of the userdata of Analysis Window % handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(4) = handle of fig3 popupmenu% handles(5) = handle of fig4 popupmenu% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(8) = handle of axe3% handles(9) = handle of axe4% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(13) = handle of bead(3)% handles(14) = handle of bead(4)% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1% handles(18) = handle of reference axe for axe2% handles(19) = handle of reference axe for axe3% handles(20) = handle of reference axe for axe4% handles(21) = handle of submenu 'Load'% handles(22) = handle of submenu 'Save'% handles(23) = handle of return button;% handles(24) = handle of speed plus button;% each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler rocker];      global strFigType global nAnimationFlagglobal g_AnaResglobal nChangeSpeed% Define the axes for the first graph (input/output angle graph)if nargin==0 && isempty(findobj('Tag','RBG Fourbar Analysis Window')),  % rbg_4bar_ana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','RBG Fourbar Analysis Window'))      % rbg_4bar_ana is already open   Action='None';elseif nargin== 1 && ~isempty(findobj('Tag','RBG Fourbar Analysis Window')) && strcmp( Action, 'initialize'), % rbg_4bar_ana is already open	% Recalculate the value, and then redraw	Action='None';endswitch Actioncase 'initialize'   if  isempty(findobj('Tag','RBG Fourbar Analysis Window'))         LocalOpenFig;      nAnimationFlag = 0;   else  		rbg_4bar_ana('None');   end     if nargin < 6       Astar = [ 1.59 3.66 ];      Bstar = [ 6.98 2.41 ];      ax = [ 0 3 4 ];      ay = [ 0 0 2 ];      theta = [ 45 135 0 ];   end      if exist('nAnimationFlag')       if nAnimationFlag == 1      	rbg_4bar_ana('Stop');         return;      end   end      a = findobj('Tag','RBG Fourbar Analysis Window');      handles = get(a,'userdata');   set(a,'userdata',handles);   g_AnaRes = CalcResult( Astar,Bstar,ax,ay,bx,by,theta );   DrawAnalysisWindow;   rbg_4bar_ana('ShowFigure');   rbg_4bar_ana('Start');    	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	%	Change Figure Call Back Function	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'ChangeFigure'   DrawAnalysisWindow;   rbg_4bar_ana('ShowFigure');   rbg_4bar_ana('Start');   case 'SetSpeed'   nChangeSpeed = Astar(1);   case 'ChangeFigureNo'   DrawAnalysisWindow;   rbg_4bar_ana('ShowFigure');   rbg_4bar_ana('Start');   case 'Animation'   a = findobj('Tag','RBG Fourbar Analysis Window');      handles = get(a,'userdata');      [ m, n ] = size( g_AnaRes);   itotal = n;   timesink = handles(16);   i = handles(15);      nFigNum  = get( handles(1),'value');   nType(1) = get( handles(2),'value');   nType(2) = get( handles(3),'value');      links = zeros(2,5);      h_plus = handles(24);   % Two sets of data of point B,C D E for two assembly mode         u = 0;   u = u+1; Bx = g_AnaRes(u,:);   u = u+1; By = g_AnaRes(u,:);   u = u+1; Cx = g_AnaRes(u,:);   u = u+1; Cy = g_AnaRes(u,:);   u = u+1; Dx = g_AnaRes(u,:);   u = u+1; Dy = g_AnaRes(u,:);   u = u+1; Ex = g_AnaRes(u,:);   u = u+1; Ey = g_AnaRes(u,:);   u = u+1; B2x = g_AnaRes(u,:);   u = u+1; B2y = g_AnaRes(u,:);   u = u+1; C2x = g_AnaRes(u,:);   u = u+1; C2y = g_AnaRes(u,:);   u = u+1; D2x = g_AnaRes(u,:);   u = u+1; D2y = g_AnaRes(u,:);   u = u+1; E2x = g_AnaRes(u,:);   u = u+1; E2y = g_AnaRes(u,:);   u = u+9;    Astar = g_AnaRes(u,1:2);   Bstar = g_AnaRes(u,3:4);      for j = 1:nFigNum     	links(j,:) = get(handles(j+5),'userdata');   end      % set timer   dt = 5;   tic;      while nAnimationFlag                      cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i ==1         drawnow;      end            if nFigNum > 0         if nType(1) == 1   			SetMechanismPosition( links(1,:),i,Bx,By,Cx,Cy,Dx,Dy,Ex,Ey,Astar,Bstar);         elseif nType(1) == 2      			SetMechanismPosition( links(1,:),i,B2x,B2y,C2x,C2y,D2x,D2y,E2x,E2y,Astar,Bstar);   		end      end            	if nFigNum > 1         if nType(2) == 1   			SetMechanismPosition( links(2,:),i,Bx,By,Cx,Cy,Dx,Dy,Ex,Ey,Astar,Bstar);         elseif nType(2) == 2      			SetMechanismPosition( links(2,:),i,B2x,B2y,C2x,C2y,D2x,D2y,E2x,E2y,Astar,Bstar);   		end      end                    drawnow;   %flush the draw buffer      i= i+1;      if i == itotal         i = 1;      end      if nChangeSpeed ~= 0         timesink = timesink * nChangeSpeed;         nChangeSpeed = 0;      end      while toc < timesink      end         tic;   end   nAnimationFlag = 0;   handles(15) = i;   handles(16) = timesink;   set(a,'Userdata',handles);   case 'ShowFigure'   a = findobj('Tag','RBG Fourbar Analysis Window');   handles = get( a,'userdata');   nFigNum = get(handles(1),'value');%[ m, n ] = size( g_AnaRes);   u = 16;   u = u+1; xcoord(1,:) = g_AnaRes(u,1:21);   u = u+1; xcoord(2,:) = g_AnaRes(u,1:21);   u = u+1; ycoord(1,:) = g_AnaRes(u,1:21);   u = u+1; ycoord(2,:) = g_AnaRes(u,1:21);   u = u+1; xbush(1,:) = g_AnaRes(u,1:26);   u = u+1; xbush(2,:) = g_AnaRes(u,1:26);   u = u+1; ybush(1,:) = g_AnaRes(u,1:26);   u = u+1; ybush(2,:) = g_AnaRes(u,1:26);   u = u+1;   xmin = g_AnaRes(u,5);   xmax = g_AnaRes(u,6);   ymin = g_AnaRes(u,7);   ymax = g_AnaRes(u,8);   xmin2 = g_AnaRes(u,9);   xmax2 = g_AnaRes(u,10);   ymin2 = g_AnaRes(u,11);   ymax2 = g_AnaRes(u,12);   ax = g_AnaRes(u,13:15);   ay = g_AnaRes(u,16:18);   bx = g_AnaRes(u,19:21);   by = g_AnaRes(u,22:24);   if nFigNum > 0      nType = get(handles(2),'value');      axes(handles(6));      if nType == 1         CreateMechanismHandles( handles(6),ax,ay,bx,by,xcoord,ycoord,xbush,ybush,xmin,xmax,ymin,ymax);      elseif nType == 2            CreateMechanismHandles( handles(6),ax,ay,bx,by,xcoord,ycoord,xbush,ybush,xmin2,xmax2,ymin2,ymax2);      end   end         if nFigNum > 1      nType = get(handles(3),'value');      axes(handles(7));      if nType == 1         CreateMechanismHandles( handles(7),ax,ay,bx,by,xcoord,ycoord,xbush,ybush,xmin,xmax,ymin,ymax);      elseif nType == 2            CreateMechanismHandles( handles(7),ax,ay,bx,by,xcoord,ycoord,xbush,ybush,xmin2,xmax2,ymin2,ymax2);      end   end            refresh;%   a = findobj('Tag','RBG Fourbar Analysis Window');   %   set(a,'Userdata',handles);   case 'None'   figure( findobj('Tag','RBG Fourbar Analysis Window'));% Bring the figure to front, if it already existscase 'Close'   rbg_4bar_ana('Stop');   a = findobj('Tag','RBG Fourbar Analysis Window');      close(a);case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','RBG Fourbar Analysis Window');      handles = get(a,'userdata');   set(handles(1),'Enable','off');   set(handles(2),'Enable','off');   set(handles(3),'Enable','off');   set(handles(21),'Enable','off');   set(handles(22),'Enable','off');   set(handles(23),'Enable','off');      nAnimationFlag = 1;   nChangeSpeed = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   rbg_4bar_ana('Animation');   case 'Stop'   if  isempty(findobj('Tag','RBG Fourbar Analysis Window'))     	return;      end   a = findobj('Tag','RBG Fourbar Analysis Window');      handles = get(a,'userdata');   nAnimationFlag = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   set(handles(1),'Enable','on');   set(handles(21),'Enable','on');   set(handles(22),'Enable','on');   set(handles(23),'Enable','on');   nFigNum = get(handles(1),'value');   for i = 1:nFigNum,     	set(handles(i+1),'Enable','on');   end      case 'Return'   rbg_4bar_ana('Stop');   a = findobj('Tag','RBG Fourbar Analysis Window');      handles = get(a,'userdata');   if ~isempty(findobj('Tag','rbg_4bar_dsgn'))        	b = findobj('Tag','rbg_4bar_dsgn');      figure(b);     	b = findobj('Tag','RBG Fourbar Analysis Window');        	close(b);   else      return;         end        case 'Get File'% Get the file name using the UIGETFILE   [sFileName sFilePath] = uigetfile('*.dat','Load File');    if sFileName == 0 && sFilePath == 0   	return;   end% Combine the path and file name together   sTemp = strcat( sFilePath, sFileName );% get the size to erase the '.dat' extension    sz = size(sFileName);% load the data file   load(sTemp);% assign the parameter to a variable   Parameter = eval(sFileName(1:(sz(2)-4)));    a = findobj('Tag','Analysis Window');   handles = get(a,'userdata');   if length(Parameter) == 3   	nFigNum = Parameter(1);   	nType1 = Parameter(2);   	nType2 = Parameter(3);   	set(handles(1),'Value',nFigNum);      set(handles(2),'Value',nType1);   	set(handles(3),'Value',nType2);   	set(a,'userdata',handles);   	DrawAnalysisWindow;   	rbg_4bar_ana('ShowFigure');   	rbg_4bar_ana('Start');   else   	return;   endcase 'Put File'   [sFileName sFilePath] = uiputfile('*.dat','Save As');    a = findobj('Tag','Analysis Window');   handles = get(a,'userdata');   nFigNum = get(handles(1),'Value');   nType1 = get(handles(2),'Value');   nType2 = get(handles(3),'Value');   ParameterData = [nFigNum; nType1; nType2]; % sTemp = strcat( sFilePath, sFileName)   [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);   [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');   eval(strCmd);end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow();a = findobj('Tag','RBG Fourbar Analysis Window');handles = get(a,'userdata');h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);nFigNum=get(h_fignum,'Value');position = zeros( 4, 4, 4);position(1,1,:) = [0.058 0.145 0.9 0.84];       % size of screen 2position(2,1,:) = [0.22 0.57 0.58 0.42];        % size of screen 1-1position(2,2,:) = [0.22 0.14 0.58 0.42];        % size of screen 1-2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:7,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 17:18,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 1:nFigNum,	set(handles(i+1),'Enable','on');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 1	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...   'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;end		set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig();strFigType = [ ...      'mode -1';...      'mode  1'];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','Pixels', ...	'Color',[0.8 0.8 0.8], ...   'Name','RBG Four Bar Analysis Window', ...    'NumberTitle','off', ...	'Position',FigPos, ... 	'Tag','RBG Fourbar Analysis Window');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...   'Position',[0.01731 0.020 0.77 0.1117], ...   'Style','frame', ...   'Tag','Frame2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.7808 0.020 0.2038 0.1117], ...   'Style','frame', ...	'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');h_load = uimenu('Parent',b, ...	'Callback','rbg_4bar_ana(''Get File'')', ...	'Label','Load', ...	'Tag','submenu_load');h_save = uimenu('Parent',b, ...	'Callback','rbg_4bar_ana(''Put File'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'Position',[0.03 0.07 0.095 0.03911], ... 	'String','No. of figs ', ...	'Style','text', ... 	'Tag','StaticText2');h_fignum = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','rbg_4bar_ana(''ChangeFigureNo'');', ...   'Position',[0.135 0.0837 0.10 0.03538], ...   'String',['1';'2'], ...	'Style','popupmenu', ...	'Tag','FigNumber', ... 	'Value',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.03 0.02793 0.08 0.03910], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','rbg_4bar_ana(''SetSpeed'',0.707);', ...   'Position',[0.1327 0.02955 0.04038 0.03182], ... 	'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','rbg_4bar_ana(''SetSpeed'',1.414);', ...   'Position',[0.2 0.02955 0.04038 0.03182], ...   'String','-', ...	'Tag','Minus_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.07821 0.06262 0.03724], ...   'String','Fig 1', ...	'Style','text', ... 	'Tag','StaticText1'); b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.08007 0.06262 0.03724], ...   'String','Fig 2', ...   'Style','text', ...	'Tag','StaticText1');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup the Popup menu contents for Figure Type Selection 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_fig1 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','rbg_4bar_ana(''ChangeFigure'',1);', ...   'Position',[0.3077 0.0837 0.19256 0.03538], ...   'String',strFigType, ... 	'Style','popupmenu', ...	'Tag','Fig1', ...	'Value',1);h_fig2 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','rbg_4bar_ana(''ChangeFigure'',2);', ...   'Position',[0.5692 0.0837 0.19256 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig2', ...	'Value',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','rbg_4bar_ana(''Start'')', ...   'Position',[0.7942 0.07727 0.08577 0.04318], ...  	'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','rbg_4bar_ana(''Stop'')', ...	'Position',[0.8854 0.07727 0.08577 0.04318], ... 	'String','Stop', ...	'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','rbg_4bar_ana(''Return'')', ...	'Position',[0.7942 0.02891 0.1773 0.04318], ... 	'String','Return', ...	'Tag','return_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(10) = nAnimationFlag;handles(15) = 1;% initial animation starting indexhandles(16) = 0.1;% initial timesink valuehandles(21) = h_load;handles(22) = h_save;handles(23) = h_return;handles(24) = h_plus;set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] = CalcResult(Astar,Bstar,ax,ay,bx,by,theta );width = 0.8;height=0.8;fact=pi/180;theta1 = theta(1);theta2 = theta(2);theta3 = theta(3);theta1r=theta(1)*fact;theta2r=theta(2)*fact;theta3r=theta(3)*fact;ax1 = ax(1);ax2 = ax(2);ax3 = ax(3);ay1 = ay(1);ay2 = ay(2);ay3 = ay(3);scale=sqrt((max(ax)-min(ax))^2+(max(ay)-min(ay))^2);rpivot=0.02*scale;delta=2*rpivot;	% Find coordinates of first bushing and pin joint.				ninc=20;  npoints=ninc+1;centerptx=Astar(1);centerpty=Astar(2);coord=circle2(rpivot,centerptx,centerpty,ninc);% find coordinates of first pinfor i=1:1:npoints	xcoord(1,i)=coord(i,1);	ycoord(1,i)=coord(i,2);end% find coordinates of first bushingbinc=ninc/2;coord1=bushing(rpivot,centerptx,centerpty,binc,0);bpoints=ninc/2+16;for i=1:1:bpoints	xbush(1,i)=coord1(i,1);	ybush(1,i)=coord1(i,2);end% Draw circle point and center point for second point.% Find coordinates of second bushing and pin joint.centerptx=Bstar(1);centerpty=Bstar(2);coord=circle2(rpivot,centerptx,centerpty,ninc);% find coordinates of second pinfor i=1:1:npoints	xcoord(2,i)=coord(i,1);	ycoord(2,i)=coord(i,2);end% find coordinates of second bushingcoord2=bushing(rpivot,centerptx,centerpty,binc,0);bpoints=ninc/2+16;for i=1:1:bpoints	xbush(2,i)=coord2(i,1);	ybush(2,i)=coord2(i,2);end% The point selected is in the frame coordinate system.  Transform% the point to the coupler coordinate system. st1=sin(theta1r);ct1=cos(theta1r);Values = circlepoint (ax1,ay1,theta1,ax2,ay2,theta2,ax3,ay3,...                      theta3, Astar(1),Astar(2));acx(1)=Values(1);acy(1)=Values(2);	Values = circlepoint (ax1,ay1,theta1,ax2,ay2,theta2,ax3,ay3,...                      theta3, Bstar(1),Bstar(2));bcx(1)=Values(1);bcy(1)=Values(2);                  % ***************************************************************% The linkage is defined. Now proceed with the analysis% ***************************************************************temp=atan2((ay(1)-acy(1)), (ax(1)-acx(1)));phi=atan2((bcy(1)-acy(1)), (bcx(1)-acx(1)));beta1=temp-phi;length1=sqrt((ay(1)-acy(1))^2 + (ax(1)-acx(1))^2);temp=atan2((by(1)-acy(1)), (bx(1)-acx(1)));beta2=temp-phi;length2=sqrt((by(1)-acy(1))^2 + (bx(1)-acx(1))^2);rc2=sqrt((ay(1)-bcy(1))^2+ (ax(1)-bcx(1))^2);rc1=sqrt((ay(1)-acy(1))^2+ (ax(1)-acx(1))^2);r2=sqrt((acx(1)-Astar(1))^2+ (acy(1)-Astar(2))^2);r4=sqrt((bcx(1)-Bstar(1))^2+ (bcy(1)-Bstar(2))^2);r1=sqrt((Bstar(1)-Astar(1))^2+ (Bstar(2)-Astar(2))^2);r3=sqrt((bcx(1)-acx(1))^2+ (bcy(1)-acy(1))^2);% Determine the linkage mode by checking the first position.%Q1=atan2((Bstar(2)-Astar(2)), (Bstar(1)-Astar(1)));Q2=atan2((acy(1)-Astar(2)), (acx(1)-Astar(1)));phi=atan2((bcy(1)-Bstar(2)), (bcx(1)-Bstar(1)));mode=assemblymode(r1,r2,r3,r4,Q1,Q2,phi);thetas=0;thetaf=1080;A0=Astar;theta1=Q1*180/pi;flag=1;i=0;Qd2=0;Qdd2=0;theta3=0;Bx(1)=0;By(1)=0;Cx(1)=0;Cy(1)=0;theta32=0;B2x(1)=0;By2(1)=0;C2x(1)=0;C2y(1)=0;dt=(thetaf-thetas)/300;% calculate two data set, one for mode 1 and the other for mode -1% The data of mode -1 will be stored in Bx,By,Cx,Cy,Dx,Dy and Ex,Ey% The data of mode 1 will be stored in B2x,B2y,C2x,C2y,D2x,D2y % and E2x,E2yif mode == -1   i = 0;   for Q21 = thetas:dt:thetaf      points=fourbar(r1,r2,r3,r4,Q21,Qd2,Qdd2,mode,theta1,flag);       if points(29)==1         i=i+1;   		Bx(i)=points(17)+Astar(1);   		By(i)=points(18)+Astar(2);      	Cx(i)=points(19)+Astar(1);   		Cy(i)=points(20)+Astar(2);   		theta3=points(7)*pi/180;% Locate original a and b on coupler   		Dx(i) = Bx(i)+length1*cos(theta3+beta1);   		Dy(i) = By(i)+length1*sin(theta3+beta1);   		Ex(i) = Bx(i)+length2*cos(theta3+beta2);   		Ey(i) = By(i)+length2*sin(theta3+beta2);   	end   end   i = 0;   mode = -mode;   for Q21 = thetas:dt:thetaf   	points=fourbar(r1,r2,r3,r4,Q21,Qd2,Qdd2,mode,theta1,flag);       if points(29)==1         i=i+1;   		B2x(i)=points(17)+Astar(1);   		B2y(i)=points(18)+Astar(2);      	C2x(i)=points(19)+Astar(1);   		C2y(i)=points(20)+Astar(2);   		theta32=points(7)*pi/180;% Locate original a and b on coupler   		D2x(i) = B2x(i)+length1*cos(theta32+beta1);   		D2y(i) = B2y(i)+length1*sin(theta32+beta1);   		E2x(i) = B2x(i)+length2*cos(theta32+beta2);   		E2y(i) = B2y(i)+length2*sin(theta32+beta2);   	end   end% Calculate the axis range in different mode.  % tempx and tempy are used for mode -1 while temp2x and temp2y are% userd for mode 1.   tempx=[Bx,Cx,Dx,Ey,Astar(1),Bstar(1),ax1,ax2,ax3,xbush(1,:),xbush(2,:)];   tempy=[By,Cy,Dy,Ey,Astar(2),Bstar(2),ay1,ay2,ay3,ybush(1,:),ybush(2,:)];   temp2x=[B2x,C2x,D2x,E2y,Astar(1),Bstar(1),ax1,ax2,ax3,xbush(1,:),xbush(2,:)];   temp2y=[B2y,C2y,D2y,E2y,Astar(2),Bstar(2),ay1,ay2,ay3,ybush(1,:),ybush(2,:)];elseif mode == 1   i = 0;   for Q21 = thetas:dt:thetaf   	points=fourbar(r1,r2,r3,r4,Q21,Qd2,Qdd2,mode,theta1,flag);       if points(29)==1         i=i+1;   		B2x(i)=points(17)+Astar(1);   		B2y(i)=points(18)+Astar(2);      	C2x(i)=points(19)+Astar(1);   		C2y(i)=points(20)+Astar(2);   		theta32=points(7)*pi/180;% Locate original a and b on coupler   		D2x(i) = B2x(i)+length1*cos(theta32+beta1);   		D2y(i) = B2y(i)+length1*sin(theta32+beta1);   		E2x(i) = B2x(i)+length2*cos(theta32+beta2);   		E2y(i) = B2y(i)+length2*sin(theta32+beta2);   	end   end   i = 0;   mode = -mode;   for Q21 = thetas:dt:thetaf      points=fourbar(r1,r2,r3,r4,Q21,Qd2,Qdd2,mode,theta1,flag);       if points(29)==1         i=i+1;   		Bx(i)=points(17)+Astar(1);   		By(i)=points(18)+Astar(2);      	Cx(i)=points(19)+Astar(1);   		Cy(i)=points(20)+Astar(2);   		theta3=points(7)*pi/180;% Locate original a and b on coupler   		Dx(i) = Bx(i)+length1*cos(theta3+beta1);   		Dy(i) = By(i)+length1*sin(theta3+beta1);   		Ex(i) = Bx(i)+length2*cos(theta3+beta2);   		Ey(i) = By(i)+length2*sin(theta3+beta2);   	end   end   tempx=[Bx,Cx,Dx,Ey,Astar(1),Bstar(1),ax1,ax2,ax3,xbush(1,:),xbush(2,:)];   tempy=[By,Cy,Dy,Ey,Astar(2),Bstar(2),ay1,ay2,ay3,ybush(1,:),ybush(2,:)];   temp2x=[B2x,C2x,D2x,E2y,Astar(1),Bstar(1),ax1,ax2,ax3,xbush(1,:),xbush(2,:)];   temp2y=[B2y,C2y,D2y,E2y,Astar(2),Bstar(2),ay1,ay2,ay3,ybush(1,:),ybush(2,:)];enditotal = i;% Define axes% There are animation options for two assembly mode. Since each plot has its own % axis limits, two sets of axis limits are prepared in the global data.% Define the plot limitsxmin=min(tempx)-0.05*(max(tempx)-min(tempx));ymin=min(tempy)-0.05*(max(tempy)-min(tempy));xmax=max(tempx)+0.05*(max(tempx)-min(tempx));ymax=max(tempy)+0.05*(max(tempy)-min(tempy));values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin=values(1);xmax=values(2);ymin=values(3);ymax=values(4);xmin2=min(temp2x)-0.05*(max(temp2x)-min(temp2x));ymin2=min(temp2y)-0.05*(max(temp2y)-min(temp2y));xmax2=max(temp2x)+0.05*(max(temp2x)-min(temp2x));ymax2=max(temp2y)+0.05*(max(temp2y)-min(temp2y));values=axisadjust(xmin2, xmax2, ymin2, ymax2, width, height);xmin2=values(1);xmax2=values(2);ymin2=values(3);ymax2=values(4);% Store position velocity and acceleration information in matrices.res = zeros( 17, itotal);i = 0;% Bx,By,Cx,Cy,Dx,Dy and Ex,Ey are the data used to draw% linkage in mode = -1i = i+1; res( i,: ) = Bx;i = i+1; res( i,: ) = By;i = i+1; res( i,: ) = Cx;i = i+1; res( i,: ) = Cy;i = i+1; res( i,: ) = Dx;i = i+1; res( i,: ) = Dy;i = i+1; res( i,: ) = Ex;i = i+1; res( i,: ) = Ey;% B2x,B2y,C2x,C2y,D2x,D2y and E2x,E2y are the data used to draw% linkage in mode = 1i = i+1; res( i,: ) = B2x;i = i+1; res( i,: ) = B2y;i = i+1; res( i,: ) = C2x;i = i+1; res( i,: ) = C2y;i = i+1; res( i,: ) = D2x;i = i+1; res( i,: ) = D2y;i = i+1; res( i,: ) = E2x;i = i+1; res( i,: ) = E2y;i = i+1; res( i,1:21 ) = xcoord(1,:);i = i+1; res( i,1:21 ) = xcoord(2,:);i = i+1; res( i,1:21 ) = ycoord(1,:);i = i+1; res( i,1:21 ) = ycoord(2,:);i = i+1; res( i,1:26 ) = xbush(1,:);i = i+1; res( i,1:26 ) = xbush(2,:);i = i+1; res( i,1:26 ) = ybush(1,:);i = i+1; res( i,1:26 ) = ybush(2,:);i = i+1;res( i,1:4 ) = [Astar Bstar];res( i,5:8 ) = [xmin xmax ymin ymax];res( i,9:12 ) = [xmin2 xmax2 ymin2 ymax2];res( i,13:15 ) = ax;res( i,16:18 ) = ay;res( i,19:21 ) = bx;res( i,22:24 ) = by;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateMechanismHandles( handle,ax,ay,bx,by,xcoord,ycoord,xbush,ybush,xmin,xmax,ymin,ymax) axes(handle);%setup the aspect ratio of the mechanism to 1 set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;axis([xmin xmax ymin ymax]);position1=line('xdata', [], 'ydata' ,[], 'linewidth',2,'color', 'r');position2=line('xdata', [], 'ydata' ,[], 'linewidth',2,'color', 'b');position3=line('xdata', [], 'ydata' ,[], 'linewidth',2,'color', 'g');a1=line('xdata', [], 'ydata', [], 'marker', '+','markersize',10, 'color', 'r');a2=line('xdata', [], 'ydata', [], 'marker', '+','markersize',10, 'color', 'b');a3=line('xdata', [], 'ydata', [], 'marker', '+','markersize',10, 'color', 'g');joint1=line('xdata', [], 'ydata', [],'color', 'k');joint2=line('xdata', [], 'ydata', [], 'color', 'k');hinge1=line('xdata', [], 'ydata',[], 'color', 'r');hinge2=line('xdata', [], 'ydata',[], 'color', 'r');crank1=line('xdata', [], 'ydata', [], 'linewidth',2,'color', 'g');crank2=line('xdata', [], 'ydata', [],'linewidth',2,'color', 'k');coupler1=line('xdata', [], 'ydata' ,[], 'linewidth' ,2,'color', 'k');coupler2=line('xdata', [], 'ydata' ,[], 'linewidth' ,2,'color', 'k');coupler3=line('xdata', [], 'ydata' ,[], 'linewidth' ,2,'color', 'b');% Draw the fixed curves first.set(a1, 'xdata',ax(1), 'ydata', ay(1));set(a2, 'xdata',ax(2), 'ydata', ay(2));set(a3, 'xdata',ax(3), 'ydata', ay(3));text(ax(1)+0.1,ay(1),'A1');text(ax(2)+0.1,ay(2),'A2');text(ax(3)+0.1,ay(3),'A3');set(position1, 'xdata', [ax(1) bx(1)], 'ydata', [ay(1) by(1)]);set(position2, 'xdata', [ax(2) bx(2)], 'ydata', [ay(2) by(2)]);set(position3, 'xdata', [ax(3) bx(3)], 'ydata', [ay(3) by(3)]);set(joint1,'xdata', xcoord(1,:), 'ydata',ycoord(1,:));set(hinge1,'xdata', xbush(1,:),'ydata', ybush(1,:));set(joint2,'xdata', xcoord(2,:), 'ydata',ycoord(2,:));set(hinge2,'xdata', xbush(2,:),'ydata', ybush(2,:));drawnow;hdls=[ crank1 crank2 coupler1 coupler2 coupler3];set(handle,'userdata',hdls);zoom on     % mouse left click / zoom box using mouse drag%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = SetMechanismPosition( links,i,Bx,By,Cx,Cy,Dx,Dy,Ex,Ey,Astar,Bstar)crank1 = links(1);crank2 = links(2);coupler1 = links(3);coupler2 = links(4);coupler3 = links(5);set(crank1,'xdata',[Astar(1) Bx(i)],'ydata', [Astar(2) By(i)]);set(coupler1,'xdata', [Cx(i), Bx(i)],'ydata', [Cy(i), By(i)]);set(coupler2,'xdata', [Bx(i), Dx(i)],'ydata', [By(i), Dy(i)]);set(coupler3,'xdata', [Dx(i), Ex(i)],'ydata', [Dy(i), Ey(i)]);set(crank2,'xdata', [Bstar(1) Cx(i)],'ydata', [Bstar(2) Cy(i)]);
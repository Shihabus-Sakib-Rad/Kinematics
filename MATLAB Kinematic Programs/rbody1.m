function [values] = rbody1(r6,beta,rax,ray,rbx,rby,vax,vay,vbx,vby,aax,...                    aay,abx,aby,flag)% This function determines the kinematic properties of a point (C) on a rigid % body when the kinematic properties of two points (A and B) are already known.  % The input values are:%r6      = length of vector from point A to point C%beta    = angle from line through AB to the line AC (degrees)%rax     = x coordinate of point A%ray     = y coordinate of point A%rbx     = x coordinate of point B%rby     = y coordinate of point B%vax     = x component of velocity of A%vay     = y component of velocity of A%vbx     = x component of velocity of B%vby     = y component of velocity of B%aax     = x component of acceleration of A%aay     = y component of acceleration of A%abx     = x component of acceleration of B%aby     = y component of acceleration of B%flag    = analysis flag.  If flag = 1, only a position analysis is conducted. %          If flag = 2, both a position and velocity analysis is conducted. %		   If flag = 3, a position, velocity, and acceleration analysis%		               is conducted.% The results are returned in the vector "values".  The answers are % stored in values according to the following:%values (1:2)   = x,y components of point C%values (3:4)   = x,y components of velocity of point C%values (5:6)   = x,y components of acceleration of point C%values (7)     = angle between fixed x axis and line AC(degrees)%values (8)     = angular velocity of rigid body (rad/sec)%values (9)     = angular acceleration of rigid body (rad/sec^2)%compute position informationvalues=zeros(9,1);rbax=rbx-rax;rbay=rby-ray;rba=sqrt(rbax*rbax+rbay*rbay);theta1=atan2(rbay, rbax);fact=pi/180;theta6=theta1+beta*fact;c1=cos(theta1);s1=sin(theta1);c6=cos(theta6);s6=sin(theta6);values(7)=theta6/fact;rcx=rax+r6*c6;rcy=ray+r6*s6;values(1)=rcx;values(2)=rcy;% compute the velocity information if fact > 1if flag>1	omega=0;	vbax=vbx-vax;	vbay=vby-vay;	if rbay ~= 0		omega=-vbax/rbay;	elseif rbax ~= 0		omega=vbay/rbax;	end	vcx=vax-r6*omega*s6;	vcy=vay+r6*omega*c6;	values(3)=vcx;	values(4)=vcy;	values(8)=omega;end	% compute the acceleration information if fact > 2if flag>2	alpha=0;	abax=abx-aax;	abay=aby-aay;		%find the tangential component of aba.		abatx=abax+rba*omega*omega*c1;	abaty=abay+rba*omega*omega*s1;		% compute the angular acceleration.		if rbay ~= 0		alpha=-abatx/rbay;	elseif rbax ~= 0		alpha=abaty/rbax;	end	acx=aax-r6*alpha*s6-r6*omega*omega*c6;	acy=aay+r6*alpha*c6-r6*omega*omega*s6;	values(5)=acx;	values(6)=acy;	values(9)=alpha;end
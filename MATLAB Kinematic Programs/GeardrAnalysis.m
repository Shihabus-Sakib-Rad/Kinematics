function []=GeardrAnalysis(Action,Argument2)% Matlab program to draw a gear generated by a straight flanked hob.%%Some of the important variables used are:%Dp      = Diametral pitch%ar      = Addendum constant for rack%br      = Dedendum constant for rack%phi     = pressure angle in degrees%rt      = tip radius of rack%rf      = fillet radius of rack%r       = pitch radius of gear%ag      = Addendum constant for gear%bg      = Dedendum constant for gear%N       = Number of gear teeth if nargin==0 && isempty(findobj('Tag','geardr_dsgn'))	Action='initialize';elseif nargin==0 && ~isempty(findobj('Tag','geardr_dsgn'))	Action='None';endif ~strcmp(Action,'initialize') && ~strcmp(Action,'Help')	a=findobj('Tag','geardr_dsgn');    UD=a.UserData;  	hdls = UD.hand;	h_edit = hdls(1:13);	h_txt = hdls(14:15);  	h_status = hdls(16);    for i = 1:13      val(i) = get(h_edit(i),'userdata');    end    ar = val(1);    br = val(2);    rt = val(3);    rf = val(4);    phi = val(5);	Dp = val(6);    N = val(7);    ag = val(8);    ptregion1 = val(9);    ptregion2 = val(10);    ptregion3 = val(11);    ptregion4 = val(12);    ptregion5 = val(13);     b=findobj('Tag','geardr_axes');   hdls = get(b,'userdata');   rackline = hdls(1);          rackpitchline = hdls(2);       endswitch Actioncase 'initialize'   if nargin >= 2 || ~isempty(findobj('tag','menu_page'))	   LocalOpenFig;      GeardrAnalysis('Draw Axes');   else   	show_me_logo('initialize','GeardrAnalysis');   endcase 'Draw Axes'	% Compute basic parameter values.		A=ar/Dp;	B=br/Dp;	p=pi/Dp;	r=p*N/(pi*2);	ro=r+ag/Dp;	r2d=180/(4*atan(1.0));	d2r=1/r2d;	phir=phi*d2r;	gamma=pi/2-phir;	lt=pi/(2*Dp)-2*A*tan(phir)-2*rt*tan(gamma/2);	lb=pi/(2*Dp)-2*B*tan(phir)-2*rf*tan(gamma/2);% Check for negative values for lt and lb.  If either is negative,% set the value to zero and compute the corresponding radius.	if lt < 0		lt=0;		rt=(pi/(2*Dp)-2*A*tan(phir))/(2*tan(gamma/2));	end	if lb < 0		lb=0;		rf=(pi/(2*Dp)-2*B*tan(phir))/(2*tan(gamma/2));	end		% Determine a set of points in region I		beta=0.0;	i=0;	dbeta=1/ptregion1;	for j=1:1:ptregion1		i=i+1;			beta=beta+dbeta;		rack(1,i)=beta*lt/2;		rack(2,i)=A;		n(1,i)=0;		n(2,i)=1.0;	end	% Determine a set of points for region II	beta = 0.0;	dbeta=1/ptregion2;	for j=1:1:ptregion2		i=i+1;		beta=beta+dbeta;		rack(1,i)=lt/2+rt*sin(beta*gamma);		rack(2,i)=A-rt*(1-cos(beta*gamma));		n(1,i)=sin(beta*gamma);		n(2,i)=cos(beta*gamma);	end	% Determine a set of points for region III	beta = 0.0;	dbeta=1/ptregion3;	for j=1:1:ptregion3		i=i+1;		beta=beta+dbeta;		sgamma=sin(gamma);		cgamma=cos(gamma);		rack(1,i)=(1-beta)*(lt/2+rt*sgamma)+beta*(pi/(2*Dp)-lb/2-rf*sgamma);		rack(2,i)=(1-beta)*(A-rt*(1-cgamma))+beta*(-B+rf*(1-cgamma));		n(1,i)=cos(phir);		n(2,i)=sin(phir);	end% Determine a set of points for region IV	beta = 0.0;	dbeta=1/ptregion4;	for j=1:1:ptregion4		i=i+1;		beta=beta+dbeta;		somb=sin((1-beta)*gamma);		comb=cos((1-beta)*gamma);		rack(1,i)=pi/(2*Dp)-lb/2-rf*somb;		rack(2,i)=-B+rf*(1-comb);		n(1,i)=somb;		n(2,i)=comb;	end% Determine a set of points for region V	beta = 0.0;	dbeta=1/ptregion5;	for j=1:1:ptregion5		i=i+1;		beta=beta+dbeta;		somb=sin((1-beta)*gamma);		comb=cos((1-beta)*gamma);		rack(1,i)=pi/(2*Dp)-lb/2*(1-beta);		rack(2,i)=-B;		n(1,i)=0;		n(2,i)=1;	end	itotal = i;	% Draw the rack.  Start by defining the plots	width = 0.95;	height = 0.95;	xmax=max(rack(1,:));	xmin=min(rack(1,:));	ymax=max(rack(2,:));	ymin=min(rack(2,:));	xrange=xmax-xmin;	yrange=ymax-ymin;	xmin=xmin-0.05*xrange;	xmax=xmax+0.05*xrange; 	ymin=ymin-0.05*yrange; 	ymax=ymax+0.05*yrange;	values=axisadjust(xmin, xmax, ymin, ymax, width, height);	xmin=values(1);	xmax=values(2);	ymin=values(3);	ymax=values(4);   axis([xmin xmax ymin ymax]);% Update data on th screen	set(h_txt(1),'string',num2str(r));	set(h_txt(2),'string',num2str(ro));% Plot the positions	set(rackline, 'xdata', rack(1,:), 'ydata', rack(2,:));	set(rackpitchline, 'xdata',[-0.05, 0.2], 'ydata', [0,0]);   drawnow;%	title('Conjugate Gear Tooth');   a = findobj('tag','geardr_dsgn');   UD=a.UserData;   hdls = UD.hand;   lim = [xmin xmax ymin ymax];   set(a,'userdata',struct('hand',hdls,'wlim',lim));   case 'Change Value'   n = Argument2;   val = [ar br rt rf phi Dp N ag ptregion1 ...         ptregion2 ptregion3 ptregion4 ptregion5 ];	newval = get(h_edit(n),'string');   val = check_val(val(n),newval);  	set(h_edit(n),'UserData',val,'string',num2str(val));   GeardrAnalysis('Draw Axes'); case 'Resize'	n = Argument2;%To retrieve current axis limits	a=findobj('Tag','geardr_dsgn');    UD=a.UserData;	hdls=get(a,'userdata');	xmin=UD.wlim(1);	xmax=UD.wlim(2);	ymin=UD.wlim(3);	ymax=UD.wlim(4);% If 'Zoom out' button is pressed, downsize the figure by increasing x any y axis limits% If 'Zoom In' button is pressed, enlarge the figure by decreasing x any y axis limits    if n==1		factor=0.05;	else		factor=-0.05;    end    rangex = xmax - xmin;    rangey = ymax - ymin;	xmin=xmin-rangex*factor;    xmax=xmax+rangex*factor;    ymin = ymin-rangey*factor;	ymax = ymax+rangey*factor;	UD.wlim = [xmin xmax ymin ymax];    a.UserData=UD;    axis(UD.wlim);   case 'None'     % the following command will bring the existing figure % to foreground	a = findobj('Tag','geardr_dsgn');	figure(a);   case 'Close'     % if the target window exist then close it	if ~isempty(findobj('Tag','Slider Crank Analysis Window'))	   geardr_ana('Stop');	   a = findobj('Tag','Slider Crank Analysis Window');   	 	close(a);	end   	a = findobj('Tag','geardr_dsgn');	close(a);	   case 'Analysis'   ptregion = [ptregion1 ptregion2 ptregion3 ptregion4 ptregion5 ];   geardr_ana('initialize',Dp,ar,br,phi,rt,rf,N,ag,ptregion);   case 'Show Definitions'   Show_definition('initialize','GeardrAnalysis.jpg');   case 'Help'%-------On-line help     HelpStr={'GeardrAnalysis';    '';    '    "GeardrAnalysis" is a program for drawing involute gear profiles.';	'The procedure used in the program is outlined in the  textbook.   The';    'program assumes a standard hob,  and  half  of  the  hob  profile  is';    'displayed in the first window of the program.   After determining the';    'gear profile that is generated by the hob, the program  displays  the';    'tooth profile and the entire tooth that is generated';    ' '};   helpwin(HelpStr,'GeardrAnalysis');case 'Get File'% Get the file name using the UIGETFILE	[sFileName sFilePath] = uigetfile('*.dat','Load File');	if sFileName==0 && sFilePath==0		return;	end%Combine the path and file name together	sTemp=strcat(sFilePath,sFileName);%get the size to erase the '.dat' extension	sz=size(sFileName);%load the data file	load(sTemp);%assign the parameter to a variable	Parameter=eval(sFileName(1:(sz(2)-4)));	if length(Parameter)==13		Dp = Parameter(1);		N2 = Parameter(2);		N3 = Parameter(3);		a3 = Parameter(4);		npoints = Parameter(5);		a1 = Parameter(6);		b1 = Parameter(7);		gamma = Parameter(8);		sign = Parameter(9);		set(h_Dp,'UserData',Dp,'string',num2str(Dp));		set(h_N2,'Userdata',N2,'string',num2str(N2));		set(h_N2,'Userdata',N3,'string',num2str(N3));	   set(h_a3,'Userdata',a3,'string',num2str(a3));	   set(h_npoints,'Userdata',npoints,'string',num2str(npoints));	   set(h_a1,'Userdata',a1,'string',num2str(a1));	   set(h_b1,'Userdata',b1,'string',num2str(b1));	   set(h_gamma,'Userdata',gamma,'string',num2str(gamma));	   if sign == 1			GeardrAnalysis('E_radio',1);		else			GeardrAnalysis('E_radio',2);		end		GeardrAnalysis('Draw Axes');	  	refresh;	else	  	set(h_status,'string','invalid file format');		return;	end	case 'Put File'	[sFileName sFilePath]=uiputfile('*.dat','SaveAs');	ParameterData=[Dp;N2;N3;a3;npoints;a1;b1;gamma;sign];	[sTemp,errMsg]=sprintf('%s%s',sFilePath,sFileName);	[strCmd,errMsg]=sprintf('%s %s %s','save',sTemp,'-ascii ParameterData');	eval(strCmd);endfunction val=check_val(oldval,newval)%Check if the user input is number input%if not, retrieve the previous value in userdataval=zeros(1);if ~isequal(length(oldval),length(str2num(newval))),  	val=oldval;%['Warning:An invalid property value has been entered.']);else  	val=str2num(newval);end   function LocalOpenFig()hdls = zeros(1,20);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Control the color of the UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%StdColor = get(0,'DefaultUIcontrolBackgroundColor');%PointsPerPixel = 72/get(0,'ScreenPixelsPerInch');bgframe = StdColor;bgedit = [1 1 1];bgtext = bgframe;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Main Figure of Crank Rocker Design%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 480;sy = 400;FigPos = [ 10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','pixels', ...	'Color',[0.8 0.8 0.8], ...	'Name','Gear Tooth Generation', ...	'NumberTitle','off', ...	'Position',FigPos, ...  	'Tag','geardr_dsgn');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Draw Frame First% This will prevent the frames from been drawn on top of% other UICONTROLS. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0083 0.01 0.98 0.113], ...	'Style','frame', ...  	'Tag','Frame1');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.685 0.3896 0.3125], ...	'Style','frame');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0083 0.13 0.585 0.08], ...	'Style','frame', ...	'Tag','Frame_angle');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.13 0.3896 0.08], ...	'Style','frame', ...	'Tag','Frame_pushbutton');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.555 0.3896 0.125], ...	'Style','frame');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.4725 0.3896 0.0775], ...	'Style','frame');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.215 0.3896 0.2525], ...	'Style','frame');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');  c = uimenu('Parent',b, ...	'Callback','GeardrAnalysis(''Get File'')', ...	'Label','Load', ...	'Tag','submenu_load');   c = uimenu('Parent',b, ...	'Callback','GeardrAnalysis(''Put File'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create graphics window for design input%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-------Reference axisb = axes('Parent',a, ...  	'Box','on', ...  	'Color',[1 1 1], ...	'Position',[0.0083 0.2175 0.5854 0.7775], ...  	'XColor',[0 0 0], ...  	'XGrid','off', ...  	'XTick',[],...  	'YColor',[0 0 0], ...  	'YGrid','off', ...  	'YTick',[], ...  	'ZColor',[0 0 0], ...  	'ZGrid','off', ...  	'ZTick',[]);		b = axes('Parent',a, ...   'Box','off', ...  	'DataAspectRatio',[1 1 1],...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Position',[0.0083 0.2175 0.5854 0.7775], ...	'Tag','geardr_axes');axis off;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% edit related uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_edit(1) = uicontrol('Parent',a, ...  	'Units','normalized', ...  	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',1)', ...	'Position',[0.8396 0.915 0.1375 0.045], ...	'String','1.25', ...	'Style','edit', ...	'Tag','ar_edit', ...  	'UserData',1.25);  h_edit(2)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',2)', ...	'Position',[0.8396 0.87 0.1375 0.045], ...	'String','1', ...	'Style','edit', ...	'Tag','br_edit', ...  	'UserData',1);  h_edit(3)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',3)', ...	'Position',[0.8396 0.825 0.1375 0.045], ...	'String','0.02', ...	'Style','edit', ...	'Tag','rt_edit', ...	'UserData',0.02);   h_edit(4)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',4)', ...	'Position',[0.8396 0.78 0.1375 0.045], ...	'String','0.04', ...	'Style','edit', ...	'Tag','rf_edit', ...	'UserData',0.04);   h_edit(5)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',5)', ...	'Position',[0.8396 0.735 0.1375 0.045], ...	'String','20', ...	'Style','edit', ...	'Tag','phi_edit', ...	'UserData',20);   h_edit(6)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',6)', ...	'Position',[0.8396 0.69 0.1375 0.045], ...	'String','10', ...	'Style','edit', ...	'Tag','Dp_edit', ...	'UserData',10);   h_edit(7)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',7)', ...	'Position',[0.8396 0.6075 0.1375 0.045], ...	'String','10', ...	'Style','edit', ...	'Tag','N_edit', ...	'UserData',10);   h_edit(8) = uicontrol('Parent',a, ...  	'Units','normalized', ...  	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',8)', ...	'Position',[0.8396 0.5625 0.1375 0.045], ...	'String','1', ...	'Style','edit', ...	'Tag','ag_edit', ...  	'UserData',1);  h_edit(9)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',9)', ...	'Position',[0.8396 0.4 0.1375 0.045], ...	'String','30', ...	'Style','edit', ...	'Tag','region1_edit', ...  	'UserData',30);  h_edit(10)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',10)', ...   'Position',[0.8396 0.355 0.1375 0.045], ...	'String','30', ...	'Style','edit', ...	'Tag','region2_edit', ...	'UserData',30);   h_edit(11)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',11)', ...	'Position',[0.8396 0.31 0.1375 0.045], ...	'String','40', ...	'Style','edit', ...	'Tag','region3_edit', ...	'UserData',40);   h_edit(12)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',12)', ...	'Position',[0.8396 0.265 0.1375 0.045], ...	'String','30', ...	'Style','edit', ...	'Tag','region4_edit', ...	'UserData',30);   h_edit(13)  = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','GeardrAnalysis(''Change Value'',13)', ...	'Position',[0.8396 0.22 0.1375 0.045], ...	'String','30', ...	'Style','edit', ...	'Tag','region5_edit', ...	'UserData',30);   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% push button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','GeardrAnalysis(''Analysis'')', ...	'Position',[0.6062 0.14 0.1333 0.06], ...	'String','Analysis', ...	'Tag','geardrAnalButton');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','GeardrAnalysis(''Close'')', ...	'Position',[0.8583 0.14 0.125 0.06], ...	'String','Close', ...	'Tag','CloseButon');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','GeardrAnalysis(''Help'')', ...	'Position',[0.7396 0.14 0.1187 0.06], ...	'String','Info', ...	'Tag','InfoButton');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','GeardrAnalysis(''Resize'',1)', ...   'Position',[0.209 0.14 0.178 0.06], ...   'userdata',1, ...	'String','Zoom Out');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','GeardrAnalysis(''Resize'',2)', ...	'Position',[0.3875 0.14 0.178 0.06], ...   'String','Zoom In');   b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','GeardrAnalysis(''Show Definitions'')', ...	'Position',[0.02917 0.14 0.178 0.06], ...   'String','Definitions');    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% text controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_status = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'HorizontalAlignment','left', ...	'Position',[0.05625 0.0275 0.9083 0.0775], ...	'String',' ', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'ForegroundColor',[0 0 1], ...	'Position',[0.6771 0.945 0.1542 0.0425], ...	'String','rack', ...	'Style','text');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.91 0.225 0.0425], ...	'String','addendum const.', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.8625 0.225 0.0425], ...	'String','dedendum const.', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.825 0.225 0.0425], ...	'String','tip radius', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.78 0.225 0.0425], ...	'String','fillet radius', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.7375 0.225 0.0425], ...	'String','pressure angle', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.6925 0.225 0.0425], ...	'String','diametral pitch', ...	'Style','text');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'ForegroundColor',[0 0 1], ...	'Position',[0.6771 0.6375 0.1542 0.04], ...	'String','gear', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.6 0.225 0.0425], ...	'String','no. of teeth', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.5625 0.225 0.0425], ...	'String','addendum const.', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.6062 0.49 0.07 0.0425], ...	'String','r', ...	'Style','text');h_txt(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.6792 0.49 0.1104 0.0425], ...	'String','', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.8 0.49 0.07 0.0425], ...	'String','r0', ...	'Style','text');h_txt(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...   'Position',[0.8667 0.49 0.1104 0.0375], ...	'String','', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'ForegroundColor',[0 0 1], ...	'BackgroundColor',bgtext, ...	'Position',[0.6771 0.4225 0.1542 0.0425], ...	'String','no. of points', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.385 0.225 0.0425], ...	'String','rack tip land', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.345 0.225 0.0425], ...	'String','rack tip radius', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.3025 0.225 0.0425], ...	'String','rack flank', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.2625 0.225 0.0425], ...	'String','rack base radius', ...	'Style','text');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6083 0.225 0.225 0.0425], ...	'String','rack bottom land', ...	'Style','text');drawnow;   hdls=[ h_edit h_txt h_status ];a = findobj('Tag','geardr_dsgn');set(a,'userdata',struct('hand',hdls));	% Set up graphics handlesrackline=line('xdata', [], 'ydata' ,[], 'linewidth',2,'color', [1,0,0]);rackpitchline=line('xdata', [], 'ydata' ,[], 'linewidth',0.4,'color', 'k', 'linestyle', '-.');		 hdls=[ rackline rackpitchline ];a = findobj('Tag','geardr_axes');set(a,'userdata',hdls );			
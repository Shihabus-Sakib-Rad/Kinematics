function arb2th_ana(Action,Dp,N2,N3,a3,npoints,a1,b1,gamma,sign)% the contents of the userdata of Analysis Window % handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(4) = handle of fig3 popupmenu% handles(5) = handle of fig4 popupmenu% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(8) = handle of axe3% handles(9) = handle of axe4% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(13) = handle of bead(3)% handles(14) = handle of bead(4)% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1% handles(18) = handle of reference axe for axe2% handles(19) = handle of reference axe for axe3% handles(20) = handle of reference axe for axe4% handles(21) = handle of submenu 'Load'% handles(22) = handle of submenu 'Save'% handles(23) = handle of 'Return' button% handles(24) = handle of speed button h_plus% handles(25) = handle of L1% handles(26) = handle of L2% handles(27) = handle of L3% handles(28) = handle of L4% each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler block];      global strFigType global nAnimationFlagglobal g_AnaResglobal nChangeSpeed% Define the axes for the first graph (input/output angle graph)if nargin==0 && isempty(findobj('Tag','arb2th Analysis Window')),  % cogana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','arb2th Analysis Window'))      % cogana is already open   Action='None';elseif nargin== 1 && ~isempty(findobj('Tag','arb2th Analysis Window')) && strcmp( Action, 'initialize'), % cogana is already open	% Recalculate the value, and then redraw	Action='None';endswitch Actioncase 'initialize'   if  isempty(findobj('Tag','arb2th Analysis Window'))         LocalOpenFig;      nAnimationFlag = 0;   else  		arb2th_ana('None');   end      if nargin < 10   	Dp = 5;	   N2 = 100;	   N3 = 30;	   a3 = 1.0;	   npoints = 200;	   a1 = 1.0;	   b1 = 1.2;	   gamma = 25;	   sign = 1;   end      if exist('nAnimationFlag')       if nAnimationFlag == 1      	arb2th_ana('Stop');         return;      end   end        g_AnaRes = CalcResult( Dp,N2,N3,a3,npoints,a1,b1,gamma,sign );   DrawAnalysisWindow;   arb2th_ana('ShowFigure');   arb2th_ana('Start');    	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	%	Change Figure Call Back Function	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'ChangeFigure'   DrawAnalysisWindow;   arb2th_ana('ShowFigure');   arb2th_ana('Start');   case 'SetSpeed'   nChangeSpeed = Dp;   case 'ChangeFigureNo'   DrawAnalysisWindow;   arb2th_ana('ShowFigure');   arb2th_ana('Start');   case 'Animation'   a = findobj('Tag','arb2th Analysis Window');      handles = get(a,'userdata');   timesink = handles(16);   i = handles(15);   dt = 5;      [ m, n ] = size( g_AnaRes);   lengthmesh2 = g_AnaRes(m,23);   lengthmesh3 = g_AnaRes(m,24);   nposn = g_AnaRes(m,25);   itotal = nposn;      nFigNum  = get( handles(1),'value');   nType(1) = get( handles(2),'value');   nType(2) = get( handles(3),'value');   nType(3) = get( handles(4),'value');   nType(4) = get( handles(5),'value');      links = zeros(4,2);   j = 12;   j = j+1; g2xm = g_AnaRes(j:j+19,1:lengthmesh2);   j = j+20; g2ym = g_AnaRes(j:j+19,1:lengthmesh2);   j = j+20; g3xm = g_AnaRes(j:j+19,1:lengthmesh3);   j = j+20; g3ym = g_AnaRes(j:j+19,1:lengthmesh3);      for j = 1:nFigNum      if nType(j) == 4      	links(j,:) = get(handles(j+5),'userdata');   	end   end         % set timer   tic;   	while nAnimationFlag                      cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i ==1         drawnow;      end            if nFigNum > 0         if nType(1) == 4				SetMechanismPosition( links(1,:),i,g2xm(i,:),g2ym(i,:),g3xm(i,:),g3ym(i,:));			end      end         		if nFigNum > 1         if nType(2) == 4				SetMechanismPosition( links(2,:),i,g2xm(i,:),g2ym(i,:),g3xm(i,:),g3ym(i,:));        end        end      		if nFigNum > 2        if nType(3) == 4				SetMechanismPosition( links(3,:),i,g2xm(i,:),g2ym(i,:),g3xm(i,:),g3ym(i,:));        end      end               if nFigNum > 3        if nType(4) == 4				SetMechanismPosition( links(4,:),i,g2xm(i,:),g2ym(i,:),g3xm(i,:),g3ym(i,:));        end        end        		drawnow;   %flush the draw buffer      i= i+1;      if i == itotal         i = 1;      end      if nChangeSpeed ~= 0         timesink = timesink * nChangeSpeed;         nChangeSpeed = 0;      end      while toc < timesink      end         tic;   end   nAnimationFlag = 0;   handles(15) = i;   handles(16) = timesink;   set(a,'Userdata',handles);   case 'ShowFigure'   a = findobj('Tag','arb2th Analysis Window');   handles = get( a,'userdata');   nFigNum = get(handles(1),'value');   [ m, n ] = size( g_AnaRes);      i = m;   xmin1 = g_AnaRes(i,1);    xmax1 = g_AnaRes(i,2);    ymin1 = g_AnaRes(i,3);    ymax1 = g_AnaRes(i,4);    xmin2 = g_AnaRes(i,5);    xmax2 = g_AnaRes(i,6);    ymin2 = g_AnaRes(i,7);    ymax2 = g_AnaRes(i,8);    xmin22 = g_AnaRes(i,9);    xmax22 = g_AnaRes(i,10);    ymin22 = g_AnaRes(i,11);    ymax22 = g_AnaRes(i,12);    xmin32 = g_AnaRes(i,13);    xmax32 = g_AnaRes(i,14);    ymin32 = g_AnaRes(i,15);    ymax32 = g_AnaRes(i,16);    lengthtooth2 = g_AnaRes(i,17);   lengthgear2 = g_AnaRes(i,18);   lengthgear3 = g_AnaRes(i,19);   lengthtooth2b = g_AnaRes(i,20);   lengthgear2b = g_AnaRes(i,21);   lengthgear3b = g_AnaRes(i,22);   Cd = g_AnaRes(i,26);   i = 0;   i = i+1; g2xtooth= g_AnaRes(i,1:lengthtooth2);   i = i+1; g2ytooth= g_AnaRes(i,1:lengthtooth2);   i = i+1; g2x= g_AnaRes(i,1:lengthgear2);   i = i+1; g2y= g_AnaRes(i,1:lengthgear2);   i = i+1; g3x= g_AnaRes(i,1:lengthgear3);   i = i+1; g3y= g_AnaRes(i,1:lengthgear3);   i = i+1; pc2xtooth= g_AnaRes(i,1:lengthtooth2b);   i = i+1; pc2ytooth= g_AnaRes(i,1:lengthtooth2b);   i = i+1; pc2x= g_AnaRes(i,1:lengthgear2b);   i = i+1; pc2y= g_AnaRes(i,1:lengthgear2b);   i = i+1; pc3x= g_AnaRes(i,1:lengthgear3b);   i = i+1; pc3y= g_AnaRes(i,1:lengthgear3b);   if nFigNum > 0      nType = get(handles(2),'value');      axes(handles(6));      if nType == 4         CreateMechanismHandles( handles(6),pc2x,pc2y,pc3x,pc3y,Cd,xmin1,xmax1,ymin1,ymax1);      elseif nType == 1         CreateToothPlot(handles(6),pc2xtooth,pc2ytooth,g2xtooth,g2ytooth,xmin2,xmax2,ymin2,ymax2);      elseif nType == 2			CreateGearPlot( handles(6),pc2x,pc2y,g2x,g2y,xmin22,xmax22,ymin22,ymax22)      elseif nType == 3			CreateGearPlot( handles(6),pc3x,pc3y,g3x,g3y,xmin32,xmax32,ymin32,ymax32)      end   end         if nFigNum > 1      nType = get(handles(3),'value');      axes(handles(7));      if nType == 4         CreateMechanismHandles( handles(7),pc2x,pc2y,pc3x,pc3y,Cd,xmin1,xmax1,ymin1,ymax1);      elseif nType == 1         CreateToothPlot(handles(7),pc2xtooth,pc2ytooth,g2xtooth,g2ytooth,xmin2,xmax2,ymin2,ymax2);      elseif nType == 2			CreateGearPlot( handles(7),pc2x,pc2y,g2x,g2y,xmin22,xmax22,ymin22,ymax22)      elseif nType == 3			CreateGearPlot( handles(7),pc3x,pc3y,g3x,g3y,xmin32,xmax32,ymin32,ymax32)      end	end            if nFigNum > 2      nType = get(handles(4),'value');      axes(handles(8));      if nType == 4         CreateMechanismHandles( handles(8),pc2x,pc2y,pc3x,pc3y,Cd,xmin1,xmax1,ymin1,ymax1);      elseif nType == 1         CreateToothPlot(handles(8),pc2xtooth,pc2ytooth,g2xtooth,g2ytooth,xmin2,xmax2,ymin2,ymax2);      elseif nType == 2			CreateGearPlot( handles(8),pc2x,pc2y,g2x,g2y,xmin22,xmax22,ymin22,ymax22)      elseif nType == 3			CreateGearPlot( handles(8),pc3x,pc3y,g3x,g3y,xmin32,xmax32,ymin32,ymax32)      end	end            if nFigNum > 3      nType = get(handles(5),'value');      axes(handles(9));      if nType == 4         CreateMechanismHandles( handles(9),pc2x,pc2y,pc3x,pc3y,Cd,xmin1,xmax1,ymin1,ymax1);      elseif nType == 1         CreateToothPlot(handles(9),pc2xtooth,pc2ytooth,g2xtooth,g2ytooth,xmin2,xmax2,ymin2,ymax2);      elseif nType == 2			CreateGearPlot( handles(9),pc2x,pc2y,g2x,g2y,xmin22,xmax22,ymin22,ymax22)      elseif nType == 3			CreateGearPlot( handles(9),pc3x,pc3y,g3x,g3y,xmin32,xmax32,ymin32,ymax32)      end   end   refresh;   a = findobj('Tag','arb2th Analysis Window');      set(a,'Userdata',handles);   case 'None'	figure( findobj('Tag','arb2th Analysis Window'));	% Bring the figure to front, if it already existscase 'Close'   arb2th_ana('Stop');   a = findobj('Tag','arb2th Analysis Window');      close(a);case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','arb2th Analysis Window');      handles = get(a,'userdata');   set(handles(1),'Enable','off');   set(handles(2),'Enable','off');   set(handles(3),'Enable','off');   set(handles(4),'Enable','off');   set(handles(5),'Enable','off');   set(handles(21),'Enable','off');   set(handles(22),'Enable','off');   set(handles(23),'Enable','off');      nAnimationFlag = 1;   nChangeSpeed = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   arb2th_ana('Animation');   case 'Stop'   if  isempty(findobj('Tag','arb2th Analysis Window'))   	return;      end   a = findobj('Tag','arb2th Analysis Window');      handles = get(a,'userdata');   nAnimationFlag = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   set(handles(1),'Enable','on');   set(handles(21),'Enable','on');   set(handles(22),'Enable','on');   set(handles(23),'Enable','on');   nFigNum = get(handles(1),'value');   for i = 1:nFigNum,   	set(handles(i+1),'Enable','on');   end   case 'Return'   arb2th_ana('Stop');   if ~isempty(findobj('Tag','arb2th_dsgn'))     		b = findobj('Tag','arb2th_dsgn');      figure(b);   	b = findobj('Tag','arb2th Analysis Window');   	  	close(b);   else   	return;         endcase 'GetFile'   % Get the file name using the UIGETFILE   [sFileName sFilePath] = uigetfile('*.dat','Load File');      if sFileName == 0 && sFilePath == 0      return;   end         % Combine the path and file name together   sTemp = strcat( sFilePath, sFileName );	% get the size to erase the '.dat' extension      sz  = size(sFileName);	% load the data file      load(sTemp);	% assign the parameter to a variable   Parameter = eval(sFileName(1:(sz(2)-4)));      a = findobj('Tag','arb2th Analysis Window');      handles = get(a,'userdata');      if length(Parameter) == 5	   nFigNum  = Parameter(1);   	nType1 = Parameter(2);	   nType2 = Parameter(3);   	nType3 = Parameter(4);      nType4 = Parameter(5);         	set(handles(1),'Value',nFigNum);   	set(handles(2),'Value',nType1);   	set(handles(3),'Value',nType2);   	set(handles(4),'Value',nType3);      set(handles(5),'Value',nType4);            set(a,'userdata',handles);   	DrawAnalysisWindow;      arb2th_ana('ShowFigure');      arb2th_ana('Start');   else      return;   end             case 'PutFile'   [sFileName sFilePath] = uiputfile('*.dat','Save As');      a = findobj('Tag','arb2th Analysis Window');      handles = get(a,'userdata');      nFigNum  = get(handles(1),'Value');   nType1 = get(handles(2),'Value');	nType2 = get(handles(3),'Value');   nType3 = get(handles(4),'Value');   nType4 = get(handles(5),'Value');   ParameterData = [nFigNum; nType1; nType2; nType3; nType4];   %   sTemp = strcat( sFilePath, sFileName)   [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);   [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');   eval(strCmd);      end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow()a = findobj('Tag','arb2th Analysis Window');handles = get(a,'userdata');h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);h_fig3 = handles(4);h_fig4 = handles(5);nFigNum=get(h_fignum,'Value');position = zeros( 4, 4, 4);position(1,1,:)  = [0.05 0.15 0.9 0.83];position(2,1,:) = [0.25 0.58 0.5 0.41];position(2,2,:) = [0.25 0.148 0.5 0.41];position(3,1,:) = [0.03 0.47 0.45 0.41];position(3,2,:) = [0.51 0.58 0.45 0.41];position(3,3,:) = [0.51 0.148 0.45 0.41];position(4,1,:) = [0.03 0.58 0.45 0.41];position(4,2,:) = [0.51 0.58 0.45 0.41];position(4,3,:) = [0.03 0.148 0.45 0.41];position(4,4,:) = [0.51 0.148 0.45 0.41];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:9,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 17:20,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 1:nFigNum,	set(handles(i+1),'Enable','on');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 1	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...   'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 3%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 3	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 4%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 4	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...   'Color',[1 1 1], ...	'Position',position(4,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,4,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(20) = b;h_4 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,4,:), ...	'Tag','Axes4', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;handles(9) = h_4;end	set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig();strFigType = [ ...      'generating tooth';...      'generating gear ';...      'conjugated gear ';...   	'meshing gear    '];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','Pixels', ...		'Color',[0.8 0.8 0.8], ...      'Name','arb2th Analysis Window', ...       'NumberTitle','off', ...		'Position',FigPos, ...	 	'Tag','arb2th Analysis Window');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...   'Position',[0.01731 0.020 0.77 0.1117], ...   'Style','frame', ...	'Tag','Frame2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.7808 0.020 0.2038 0.1117], ...   'Style','frame', ...   'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');h_load = uimenu('Parent',b, ...	'Callback','arb2th_ana(''GetFile'')', ...	'Label','Load', ...	'Tag','submenu_load');h_save = uimenu('Parent',b, ...	'Callback','arb2th_ana(''PutFile'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...	'Position',[0.03 0.07 0.095 0.03911], ... 	'String','No. of figs ', ...	'Style','text', ...	'Tag','StaticText2');h_fignum = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','arb2th_ana(''ChangeFigureNo'');', ...   'Position',[0.135 0.0837 0.10 0.03538], ...   'String',['1';'2';'3';'4'], ...   'Style','popupmenu', ...	'Tag','FigNumber', ... 	'Value',4);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.03 0.02793 0.08 0.03910], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','arb2th_ana(''SetSpeed'',0.707);', ...   'Position',[0.1327 0.02955 0.04038 0.03182], ...    'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','arb2th_ana(''SetSpeed'',1.414);', ...   'Position',[0.2 0.02955 0.04038 0.03182], ...   'String','-', ... 	'Tag','Minus_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.07821 0.06262 0.03724], ...   'String','Fig 1', ...	'Style','text', ... 	'Tag','StaticText1'); b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.08007 0.06262 0.03724], ...   'String','Fig 2', ...	'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.03352 0.06262 0.03724], ...   'String','Fig 3', ...   'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.03724 0.06262 0.03724], ...   'String','Fig 4', ...	'Style','text', ...	'Tag','StaticText1');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup the Popup menu contents for Figure Type Selection 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_fig1 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','arb2th_ana(''ChangeFigure'',1);', ...   'Position',[0.3077 0.0837 0.19256 0.03538], ...   'String',strFigType, ... 	'Style','popupmenu', ...	'Tag','Fig1', ...	'Value',4);h_fig2 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','arb2th_ana(''ChangeFigure'',2);', ...   'Position',[0.5692 0.0837 0.19256 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig2', ...	'Value',1);h_fig3 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','arb2th_ana(''ChangeFigure'',3);', ...   'Position',[0.3077 0.04024 0.1926 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig3', ...	'Value',2);h_fig4 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','arb2th_ana(''ChangeFigure'',4);', ...   'Position',[0.5692 0.04024 0.1926 0.03538], ...   'String',strFigType, ...   'Style','popupmenu', ...	'Tag','Fig4', ...	 'Value',3);	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','arb2th_ana(''Start'')', ...   'Position',[0.7942 0.07727 0.08577 0.04318], ...   'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','arb2th_ana(''Stop'')', ...	'Position',[0.8854 0.07727 0.08577 0.04318], ...    'String','Stop', ...   'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','arb2th_ana(''Return'')', ...	'Position',[0.7942 0.02891 0.1773 0.04318], ...    'String','Return', ...   'Tag','return_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(4) = h_fig3;handles(5) = h_fig4;handles(10) = nAnimationFlag;% initial animation starting indexhandles(15) = 1;% initial timesink valuehandles(16) = 0.1;handles(21) = h_load;handles(22) = h_save;handles(23) = h_return;handles(24) = h_plus;set( a, 'Userdata', handles);drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] = CalcResult( Dp,N2,N3,a3,npoints,a1,b1,gamma,sign );A1=a1/Dp;B1=b1/Dp;p=pi/Dp;r2=p*N2/(pi*2);fact=180/(4*atan(1.0));gammar=gamma/fact;lt=pi/(2*Dp)-2*A1*tan(gammar);lb=pi/(2*Dp)+2*B1*tan(gammar);r3=r2*N3/N2;Cd=r2+sign*r3;A3=sign*a3/Dp;B3=sign*B1;t0=pi*(1-1/N3);r2d=r2-B1;r2a=r2+A1;g2angle=pi/N2;g2baseangle=atan((lb/2)/(r2d));g3angle=pi/N3;% Check for negative values for lt.  If it is negative,% set the value to zero and compute the corresponding addendum.if lt < 0	lt=0;	A1=(pi/(2*Dp)/2*tan(gammar))end		% Determine points on dedendum circlenbpoints=2;dang=(g2angle-g2baseangle)/(nbpoints-1);ang=g2angle+dang;for i=1:1:nbpoints	ang=ang-dang;	gear2x(i)=r2d*cos(ang);	gear2y(i)=r2d*sin(ang);	g2x(i)=gear2x(i);	g2y(i)=gear2y(i);end	% Determine a set of points for flank regiondx=(r2a-r2d)/npoints;x=-dx+r2d;i=nbpoints;for j=1:1:npoints	i=i+1;	x=x+dx;	gear2x(i)=x;	gear2y(i)=lb/2-(x-r2d)*tan(gammar);	n(i)=1/tan(gammar); end% Identify the minimum set of points which must be plotted.  For% a straight toothed gear, this is only 3.  Store these points % in g2x and g2y.nptotal=1+nbpoints;g2x(nptotal)=gear2x(i);g2y(nptotal)=gear2y(i);% Reflect the line about the x axis to determine the other side of the gear.for i=1:1:nptotal	g2x(nptotal+i)=g2x(nptotal+1-i);	g2y(nptotal+i)=-g2y(nptotal+1-i);endntotal=2*nptotal; 			% Determine points on the pitch circle radius for gear 1.theta0=-g2angle;theta1=-theta0;dtheta=(theta1-theta0)/20;th=-dtheta+theta0;for j=1:1:20	th=th+dtheta;	pc2x(j)=r2*cos(th);	pc2y(j)=r2*sin(th);end		% Draw the generating gear.  Start by defining the plotsheight=0.8;width=0.8;   % axis range for gear tooth 1(generating gear)xmax=max([g2x, pc2x]);xmin=min([g2x, pc2x]);ymax=max([g2y, pc2y]);ymin=min([g2y, pc2y]);xrange=xmax-xmin;yrange=ymax-ymin;g2xtooth = g2x;g2ytooth = g2y;pc2xtooth = pc2x;pc2ytooth = pc2y;% Define ranges for plotting whole gearxmax1=xmax+0.6*xrange;xmin1=xmin-0.6*xrange;ymax1=ymax+0.6*yrange;ymin1=ymin-0.6*yrange;% Define range for a single toothxmaxt=xmax+0.05*xrange;xmint=xmin-0.05*xrange;ymaxt=ymax+0.05*yrange;ymint=ymin-0.05*yrange;xrange=xmaxt-xmint;yrange=ymaxt-ymint;xmin=xmint-0.05*xrange;xmax=xmaxt+0.05*xrange; ymin=ymint-0.05*yrange; ymax=ymaxt+0.05*yrange;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin2=values(1);xmax2=values(2);ymin2=values(3);ymax2=values(4);% Define the driven gear profilej=0; r3d=r3-B3;r3a=r3+A3;for i=nbpoints+1:1:npoints+nbpoints	A=gear2y(i)-gear2x(i)*n(i);	B=r2;	C=r2*n(i);	arg=B*B-A*A+C*C;	if arg >=0		t=(-B+sqrt(arg))/(A-C);		phi=2*atan(t);		the=-sign*phi*r2/r3+t0;		thed=the*fact;		tempx=-Cd*cos(the)+cos(the-phi)*gear2x(i)+sin(the-phi)*gear2y(i);		tempy=Cd*sin(the)-sin(the-phi)*gear2x(i)+cos(the-phi)*gear2y(i);		rad=sqrt(tempx^2+tempy^2);		if rad<=(r3a) & rad>= (r3d)			j=j+1;			gear3x(j)=tempx;			gear3y(j)=tempy;						ang(j)=atan2(gear3y(j), gear3x(j));			end	endendjtotal=j;% Reorder the points to include the base as the first points.for j=1:1:jtotal	xtemp(j)=gear3x(jtotal-j+1);	ytemp(j)=gear3y(jtotal-j+1);end% Determine points on dedendum circlenbpoints=2;nptotal=jtotal+nbpoints;r3dtemp=sqrt(ytemp(1)^2+xtemp(1)^2);ang2=atan2(ytemp(1),xtemp(1));% If the gear tooth does not extend to the dedendum circle, extrapolate% from the first point to the dedendum circle.if r3dtemp>r3d	ang3=atan2(ytemp(2)-ytemp(1),xtemp(2)-xtemp(1));	ang2m2=ang2-ang3;	rdif=r3dtemp-r3d;	dc=rdif/cos(ang2-ang3);	xc=xtemp(1)-dc*cos(ang3);	yc=ytemp(1)-dc*sin(ang3);	ang2=atan2(yc, xc);enddang=(g3angle-ang2)/(nbpoints-1);ang=g3angle+dang;for i=1:1:nbpoints	ang=ang-dang;	g3x(i)=r3d*cos(ang);	g3y(i)=r3d*sin(ang);	gear3x(i)=g3x(i);	gear3y(i)=g3y(i);end% re-store the original pointsi=nbpoints;for j=1:1:jtotal	i=i+1;	gear3x(i)=xtemp(j);	gear3y(i)=ytemp(j);	end% Reduce the number of points to make drawing the whole gear easier.% Store the results in g3x and g3y.i=nbpoints;k=nbpoints;for j=1:1:jtotal	m=20*j;	i=i+1;	gear3x(i)=xtemp(j);	gear3y(i)=ytemp(j);		if (m<=jtotal || j==nbpoints+1 || j==jtotal) && m<jtotal		if j==jtotal; m=jtotal; end		k=k+1;		g3x(k)=xtemp(m);		g3y(k)=ytemp(m);	end	endktotal=k;	% Reflect the points to draw the rest of the gear toothitotal=nbpoints+jtotal;j=itotal;for i=1:1:itotal	j=j+1;	gear3x(j)=gear3x(itotal-i+1);	gear3y(j)=-gear3y(itotal-i+1);end	itotal=j;j=ktotal;for i=1:1:ktotal	j=j+1;	g3x(j)=g3x(ktotal-i+1);	g3y(j)=-g3y(ktotal-i+1);end	ktotal=j;	% Define the pitch circle arc of the generated gearmaxang=max(ang);minang=-maxang;dk=(maxang-minang)/20;i=0;for k=minang:dk:maxang	i=i+1;	pc3y(i)=r3*sin(k);	pc3x(i)=r3*cos(k);end% Find the coordinates of the teeth on the entire generating gear.dtheta=2*pi/N2;j=ntotal;for i=1:1:N2-1	theta = -i*dtheta;	sth = sin(theta);	cth = cos(theta);	for k=1:1:ntotal		j=j+1;		g2x(j)=g2x(k)*cth-g2y(k)*sth;		g2y(j)=g2x(k)*sth+g2y(k)*cth;	endendntotal=j;% Compute the pitch circle for the whole gearq=0;dq=-pi/90;for i=1:1:180	q=q+dq;	pc2x(i)=r2*sin(q);	pc2y(i)=r2*cos(q);end%height=0.8;%width=0.8;xmax=max(g2x);xmin=min(g2x);ymax=max(g2y);ymin=min(g2y);xrange=xmax-xmin;yrange=ymax-ymin;xmin22 = xmin-0.1*xrange;xmax22 = xmax+0.1*xrange;ymin22 = ymin-0.1*yrange;ymax22 = ymax+0.1*yrange;	% Find the coordinates of the teeth on the entire conjugate gear.dtheta=2*pi/N3;j=ktotal;for i=1:1:N3-1	theta = -i*dtheta;	sth = sin(theta);	cth = cos(theta);	for k=1:1:ktotal		j=j+1;		g3x(j)=g3x(k)*cth-g3y(k)*sth;		g3y(j)=g3x(k)*sth+g3y(k)*cth;	endenditotal=j;% Compute the pitch circle for the whole gearq=0;dq=-pi/90;for i=1:1:180	q=q+dq;	pc3x(i)=r3*sin(q);	pc3y(i)=r3*cos(q);endxmax=max(g3x);xmin=min(g3x);ymax=max(g3y);ymin=min(g3y);xrange=xmax-xmin;yrange=ymax-ymin;xmin=xmin-0.05*xrange;xmax=xmax+0.05*xrange; ymin=ymin-0.05*yrange; ymax=ymax+0.05*yrange;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin32=values(1);xmax32=values(2);ymin32=values(3);ymax32=values(4);% Show the gear in mesh.  For this, we must show both gears % relative to the frame coordinate system.phi0=0;theta0=t0;% Determine the position of the gears in a rotated positionnposn=20;dph=g2angle/(nposn/2);dth=g3angle/(nposn/2);th=t0-dth;ph=0+dph;% Increment the gear rotations for nposn positions.  Press% return for each succeeding position.for i=1:1:nposn	ph=ph+dph;	th=th-dth;	g2xm(i,:)=g2x*cos(ph)-g2y*sin(ph);	g2ym(i,:)=g2x*sin(ph)+g2y*cos(ph);	g3xm(i,:)=Cd+g3x*cos(th)-g3y*sin(th);	g3ym(i,:)=g3x*sin(th)+g3y*cos(th);	endlengthtooth2 = length(g2xtooth);lengthgear2 = length(g2x);lengthgear3 = length(g3x);lengthtooth2b = length(pc2xtooth);lengthgear2b = length(pc2x);lengthgear3b = length(pc3x);lengthmesh2 = length(g2xm);lengthmesh3 = length(g3xm);itotal = max([lengthtooth2 lengthgear2 lengthgear3 lengthtooth2b lengthgear2b lengthgear3b lengthmesh2 lengthmesh3]);res = zeros( 93, itotal);i = 0;i = i+1; res( i,1:lengthtooth2 ) = g2xtooth;i = i+1; res( i,1:lengthtooth2 ) = g2ytooth;i = i+1; res( i,1:lengthgear2 ) = g2x;i = i+1; res( i,1:lengthgear2 ) = g2y;i = i+1; res( i,1:lengthgear3 ) = g3x;i = i+1; res( i,1:lengthgear3 ) = g3y;i = i+1; res( i,1:lengthtooth2b ) = pc2xtooth;i = i+1; res( i,1:lengthtooth2b ) = pc2ytooth;i = i+1; res( i,1:lengthgear2b ) = pc2x;i = i+1; res( i,1:lengthgear2b ) = pc2y;i = i+1; res( i,1:lengthgear3b ) = pc3x;i = i+1; res( i,1:lengthgear3b ) = pc3y;i = i+1; res( i:i+19,1:lengthmesh2 ) = g2xm;i = i+20; res( i:i+19,1:lengthmesh2 ) = g2ym;i = i+20; res( i:i+19,1:lengthmesh3 ) = g3xm;i = i+20; res( i:i+19,1:lengthmesh3 ) = g3ym;i = i+20;res( i,1:4 ) = [xmin1 xmax1 ymin1 ymax1];res( i,5:8 ) = [xmin2 xmax2 ymin2 ymax2];res( i,9:12 ) = [xmin22 xmax22 ymin22 ymax22];res( i,13:16 ) = [xmin32 xmax32 ymin32 ymax32];res( i,17:24 ) = [lengthtooth2 lengthgear2 lengthgear3 lengthtooth2b lengthgear2b lengthgear3b lengthmesh2 lengthmesh3];res( i,25 ) = nposn;res( i,26 ) = Cd;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateMechanismHandles( handle,pc2x,pc2y,pc3x,pc3y,Cd,xmin,xmax,ymin,ymax) axes(handle);%setup the aspect ratio of the mechanism to 1 set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;axis([xmin xmax ymin ymax]);% Determine the coordinates of gear 1 relative to the frame% as gear 1 rotates by phi through 2*g2angle.gearline1=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', [1,0,0]);gearpitchline1=line('xdata', [], 'ydata' ,[], 'linewidth',0.4,'color', 'k', 'linestyle', '-.');gearline2=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', [1,0,0]);gearpitchline2=line('xdata', [], 'ydata' ,[], 'linewidth',0.4,'color', 'k', 'linestyle', '-.');		 set(gearpitchline1, 'xdata',pc2x, 'ydata', pc2y);set(gearpitchline2, 'xdata',pc3x+Cd, 'ydata', pc3y);hdls=[ gearline1 gearline2 ];set( handle,'userdata', hdls);    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = SetMechanismPosition( links,i,g2xm,g2ym,g3xm,g3ym)gearline1 = links(1);gearline2 = links(2);   % Plot the meshing gearsset(gearline1, 'xdata', g2xm, 'ydata', g2ym);set(gearline2, 'xdata', g3xm, 'ydata', g3ym);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create the gear 1 tooth%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateToothPlot( handle,pcxtooth,pcytooth,gxtooth,gytooth,xmin,xmax,ymin,ymax)axes(handle);set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;axis([xmin xmax ymin ymax]);gearline=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', [1,0,0]);gearpitchline=line('xdata', [], 'ydata' ,[], 'linewidth',0.4,'color', 'k', 'linestyle', '-.');   % Plot the toothset(gearline, 'xdata', gxtooth, 'ydata', gytooth);set(gearpitchline, 'xdata', pcxtooth, 'ydata', pcytooth);drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create the whole gear% index 1 for gear 1 and index2 for gear 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateGearPlot( handle,pcx,pcy,gx,gy,xmin,xmax,ymin,ymax)axes(handle);set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;axis([xmin xmax ymin ymax]);gearline=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', [1,0,0]);gearpitchline=line('xdata', [], 'ydata' ,[], 'linewidth',0.4,'color', 'k', 'linestyle', '-.');origin=line('xdata', 0, 'ydata', 0,'color', 'r', 'marker', '+','markersize', 6);	% Plot the meshing gearsset(gearline, 'xdata', gx, 'ydata', gy);set(gearpitchline, 'xdata', pcx, 'ydata', pcy);drawnow;
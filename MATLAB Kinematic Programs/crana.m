function crana(Action,r)% the contents of the userdata of Analysis Window% handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(4) = handle of fig3 popupmenu% handles(5) = handle of fig4 popupmenu% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(8) = handle of axe3% handles(9) = handle of axe4% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(13) = handle of bead(3)% handles(14) = handle of bead(4)% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1 % handles(18) = handle of reference axe for axe2 % handles(19) = handle of reference axe for axe3 % handles(20) = handle of reference axe for axe4 % handles(21) = handle of submenu 'Load' % handles(22) = handle of submenu 'Save' % handles(23) = handle of return button; % handles(24) = handle of speed plus button; % each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler rocker]; global strFigTypeglobal nAnimationFlagglobal g_AnaResglobal nChangeSpeedif nargin==0 && isempty(findobj('Tag','Analysis Window')),   % crana is being initialized Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','Analysis Window')),   % crana is already openAction='None';elseif nargin== 1 && ~isempty(findobj('Tag','Analysis Window')) && strcmp( Action, 'initialize'),   % crana is already open    % Recalculate the value, and then redraw   Action='None';endswitch Action%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %	Initialize the User Interface%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'initialize'if isempty(findobj('Tag','Analysis Window')) LocalOpenFig;nAnimationFlag = 0;else		crana('None');endif nargin == 1 || nargin == 0	r = [ 1.000 0.314 1.027 0.507 ];endif exist('nAnimationFlag')if nAnimationFlag == 1	crana('Stop');return;endendg_AnaRes = CalcResult( r );DrawAnalysisWindow;crana('ShowFigure');crana('Start');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Change Figure Call Back Function%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'ChangeFigure'DrawAnalysisWindow;crana('ShowFigure');crana('Start');case 'SetSpeed'nChangeSpeed = r;case 'ChangeFigureNo'DrawAnalysisWindow;crana('ShowFigure');crana('Start');case 'Animation'a = findobj('Tag','Analysis Window');handles = get(a,'userdata');[ m, n ] = size( g_AnaRes);itotal = n;timesink = handles(16);i = handles(15);dt = 5;nFigNum = get( handles(1),'value');nType(1) = get( handles(2),'value');nType(2) = get( handles(3),'value');nType(3) = get( handles(4),'value');nType(4) = get( handles(5),'value');bead = zeros(1,4);links = zeros(4,5);bead(1) = handles(11);bead(2) = handles(12);bead(3) = handles(13);bead(4) = handles(14);h_plus = handles(24);Bx = g_AnaRes(17,:);By = g_AnaRes(18,:);Cx = g_AnaRes(19,:);Cy = g_AnaRes(20,:);for j = 1:nFigNum	if nType(j) == 9      link(j,:) = get(handles(j+5),'userdata');   endend% set timertic;% Draw the variable part of the plots.while nAnimationFlagcycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer if nFigNum > 0	if nType(1) == 9   	SetMechanismPosition(link(1,:),i,Bx,By,Cx,Cy);	else	 	j = nType(1) * 2 -1;      set(bead(1), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));    endendif nFigNum > 1	if nType(2) == 9      SetMechanismPosition(link(2,:),i,Bx,By,Cx,Cy);   else		j = nType(2) * 2 -1;      set(bead(2), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));   endendif nFigNum > 2	if nType(3) == 9      SetMechanismPosition(link(3,:),i,Bx,By,Cx,Cy);   else		j = nType(3) * 2 -1;	   set(bead(3), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i)); 	endendif nFigNum > 3	if nType(4) == 9      SetMechanismPosition(link(4,:),i,Bx,By,Cx,Cy);   else		j = nType(4) * 2 -1;		set(bead(4), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));	endenddrawnow; %flush the draw bufferi= i+1;if i == itotal	i = 1;endif nChangeSpeed ~= 0	timesink = timesink * nChangeSpeed;	nChangeSpeed = 0;endwhile toc < timesinkendtic;endnAnimationFlag = 0;handles(15) = i;handles(16) = timesink;set(a,'Userdata',handles);case 'ShowFigure'a = findobj('Tag','Analysis Window');handles = get( a,'userdata');nFigNum = get(handles(1),'value');Bx = g_AnaRes(17,:);By = g_AnaRes(18,:);Cx = g_AnaRes(19,:);Cy = g_AnaRes(20,:);if nFigNum > 0	nType = get(handles(2),'value');	axes(handles(6));	if nType == 9      CreateMechanismHandles(handles(6),Bx,By,Cx,Cy);   else		i = nType * 2 -1;		line1 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line1','color', 'r');		b1 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b1'); 		handles(11) = b1;		labels = GetFigLabel( nType );		xlabel(labels(1));		ylabel(labels(2));	endendif nFigNum > 1	nType = get(handles(3),'value');	axes(handles(7));	if nType == 9      CreateMechanismHandles(handles(7),Bx,By,Cx,Cy);   else		i = nType * 2 -1;		line2 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line2','color', 'r');		b2 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b2'); 		handles(12) = b2;		labels = GetFigLabel( nType );		xlabel(labels(1));		ylabel(labels(2));	endendif nFigNum > 2	nType = get(handles(4),'value');	axes(handles(8));	if nType == 9      CreateMechanismHandles(handles(8),Bx,By,Cx,Cy);   else		i = nType * 2 -1;		line3 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line3','color', 'r');		b3 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b3'); 		handles(13) = b3;		labels = GetFigLabel( nType );		xlabel(labels(1));		ylabel(labels(2));	endendif nFigNum > 3	nType = get(handles(5),'value');		axes(handles(9));	if nType == 9      CreateMechanismHandles(handles(9),Bx,By,Cx,Cy);   else		i = nType * 2 -1;      line4 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line4','color', 'r');      b4 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6,'tag','b4'); 		handles(14) = b4;		labels = GetFigLabel( nType );		xlabel(labels(1));		ylabel(labels(2));	endenddrawnow;a = findobj('Tag','Analysis Window');set(a,'Userdata',handles);case 'None'   figure( findobj('Tag','Analysis Window'));      % Bring the figure to front, if it already exists case 'Close'crana('Stop');a = findobj('Tag','Analysis Window');close(a);case 'Start'if exist('nAnimationFlag')	if nAnimationFlag == 1		return;	endenda = findobj('Tag','Analysis Window');handles = get(a,'userdata');set(handles(1),'Enable','off');set(handles(2),'Enable','off');set(handles(3),'Enable','off');set(handles(4),'Enable','off');set(handles(5),'Enable','off');set(handles(21),'Enable','off');set(handles(22),'Enable','off');set(handles(23),'Enable','off');nAnimationFlag = 1;nChangeSpeed = 0;handles(10) = nAnimationFlag;set(a,'userdata',handles);crana('Animation');case 'Stop'if isempty(findobj('Tag','Analysis Window'))	return;enda = findobj('Tag','Analysis Window');handles = get(a,'userdata');nAnimationFlag = 0;handles(10) = nAnimationFlag;set(a,'userdata',handles);set(handles(1),'Enable','on');set(handles(21),'Enable','on');set(handles(22),'Enable','on');set(handles(23),'Enable','on');nFigNum = get(handles(1),'value');for i = 1:nFigNum,	set(handles(i+1),'Enable','on');endcase 'Return'crana('Stop');if ~isempty(findobj('Tag','fig_dsgn'))	b = findobj('Tag','fig_dsgn');	figure(b);	crana('Close');	%	b = findobj('Tag','Analysis Window');	% 	close(b);else	return;endcase 'GetFile'% Get the file name using the UIGETFILE[sFileName sFilePath] = uigetfile('*.dat','Load File'); if sFileName == 0 && sFilePath == 0	return;end% Combine the path and file name togethersTemp = strcat( sFilePath, sFileName );% get the size to erase the '.dat' extension sz = size(sFileName);	% load the data fileload(sTemp);	% assign the parameter to a variableParameter = eval(sFileName(1:(sz(2)-4))); a = findobj('Tag','Analysis Window');handles = get(a,'userdata');if length(Parameter) == 5	nFigNum = Parameter(1);	nType1 = Parameter(2);	nType2 = Parameter(3);	nType3 = Parameter(4);	nType4 = Parameter(5);	set(handles(1),'Value',nFigNum);	set(handles(2),'Value',nType1);	set(handles(3),'Value',nType2);	set(handles(4),'Value',nType3);	set(handles(5),'Value',nType4);	set(a,'userdata',handles);	DrawAnalysisWindow;	crana('ShowFigure');	crana('Start');else	return;endcase 'PutFile'[sFileName sFilePath] = uiputfile('*.dat','Save As'); a = findobj('Tag','Analysis Window');handles = get(a,'userdata');nFigNum = get(handles(1),'Value');nType1 = get(handles(2),'Value');nType2 = get(handles(3),'Value');nType3 = get(handles(4),'Value');nType4 = get(handles(5),'Value');ParameterData = [nFigNum; nType1; nType2; nType3; nType4]; % sTemp = strcat( sFilePath, sFileName)[sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);[strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');eval(strCmd);end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow()a = findobj('Tag','Analysis Window');handles = get(a,'userdata');h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);h_fig3 = handles(4);h_fig4 = handles(5);nFigNum=get(h_fignum,'Value');position = zeros( 4, 4, 4);position(1,1,:) = [0.2 0.25 0.6 0.6];position(2,1,:) = [0.25 0.65 0.5 0.31];position(2,2,:) = [0.25 0.22 0.5 0.31];position(3,1,:) = [0.1 0.42 0.38 0.31];position(3,2,:) = [0.58 0.65 0.38 0.31];position(3,3,:) = [0.58 0.22 0.38 0.31];position(4,1,:) = [0.1 0.65 0.38 0.31];position(4,2,:) = [0.58 0.65 0.38 0.31];position(4,3,:) = [0.1 0.22 0.38 0.31];position(4,4,:) = [0.58 0.22 0.38 0.31]; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:9,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 17:20,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 1:nFigNum,	set(handles(i+1),'Enable','on');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 1	b = axes('Parent',a, ...		'Box','on', ...		'Color',[1 1 1], ...		'Position',position(1,1,:), ...		'XColor',[0 0 0], ...		'XGrid','off', ...		'XTick',[],...		'YColor',[0 0 0], ...		'YGrid','off', ...		'YTick',[], ...		'ZColor',[0 0 0], ...		'ZGrid','off', ...		'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(1,1,:), ...		'Tag','Axes1', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...'ZColor',[0 0 0]);handles(6) = h_1;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(2,1,:), ...		'Tag','Axes1', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...	    'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(2,2,:), ...		'Tag','Axes2', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...		'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 3%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 3	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(3,1,:), ...		'Tag','Axes1', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...		 'ZColor',[0 0 0]);	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(3,2,:), ...		'Tag','Axes2', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...		'ZColor',[0 0 0]);	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(3,3,:), ...		'Tag','Axes3', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...		'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 4%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 4	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(4,1,:), ...		'Tag','Axes1', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...		'ZColor',[0 0 0]);	b = axes('Parent',a, ...	'Box','on', ...    'Color',[1 1 1], ...	'Position',position(4,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(4,2,:), ...		'Tag','Axes2', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...		'ZColor',[0 0 0]);	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(4,3,:), ...		'Tag','Axes3', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...		'ZColor',[0 0 0]);	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,4,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(20) = b;h_4 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(4,4,:), ...		'Tag','Axes4', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...		'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;handles(9) = h_4;end	set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig();strFigType = [ ...   	  ' Rocker ang       ';...      ' Rocker vel       ';...      ' Rocker acc       ';...      ' Coupler ang      ';...      ' Coupler vel      ';...      ' Coupler acc      ';...      ' In torq/out torq ';...      ' Transmition ang  ';...      ' mechanism        '];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','Pixels', ...		'Color',[0.8 0.8 0.8], ...      'Name','Crank-Rocker Analysis Window', ...       'NumberTitle','off', ...		'Position',FigPos, ...	 	'Tag','Analysis Window');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   b = uicontrol('Parent',a, ...		'Units','normalized', ...      'BackgroundColor',[0.752941 0.752941 0.752941], ...      'Position',[0.0173077 0.0204842 0.77 0.111732], ...      'Style','frame', ...		'Tag','Frame2');		b = uicontrol('Parent',a, ...		'Units','normalized', ...      'Position',[0.780769 0.0204545 0.203846 0.111732], ...      'Style','frame', ...		'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b = uimenu('Parent',a, ...		'Label','Parameter', ...		'Tag','menu_parameter');h_load = uimenu('Parent',b, ...		'Callback','crana(''GetFile'')', ...		'Label','Load', ...		'Tag','submenu_load');h_save = uimenu('Parent',b, ...		'Callback','crana(''PutFile'')', ...		'Label','Save', ...		'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	b = uicontrol('Parent',a, ...		'Units','normalized', ...		'Position',[0.03 0.07 0.095 0.0391061], ... 		'String','No. of figs ', ...		'Style','text', ...	 	'Tag','StaticText2');	h_fignum = uicontrol('Parent',a, ...		'Units','normalized', ...      'Callback','crana(''ChangeFigureNo'');', ...      'Position',[0.135 0.080 0.10 0.0353818], ...      'String',['1';'2';'3';'4'], ...		'Style','popupmenu', ...		'Tag','FigNumber', ...	 	'Value',4);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...		'Units','normalized', ...      'Position',[0.03 0.027933 0.08 0.0391061], ...      'String','Speed ', ...		'Style','text', ...	 	'Tag','StaticText2');		h_plus = uicontrol('Parent',a, ...		'Units','normalized', ...      'Callback','crana(''SetSpeed'',0.707);', ...      'Position',[0.132692 0.0295455 0.0403846 0.0318182], ... 		'String','+', ...		'Enable','on', ...		'Tag','Plus_button');	b = uicontrol('Parent',a, ...		'Units','normalized', ...      'Callback','crana(''SetSpeed'',1.414);', ...      'Position',[0.2 0.0295455 0.0403846 0.0318182], ...      'String','-', ...	 	'Tag','Minus_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	b = uicontrol('Parent',a, ...		'Units','normalized', ...      'Position',[0.244231 0.0782123 0.0626151 0.0372439], ...      'String','Fig 1', ...		'Style','text', ...	 	'Tag','StaticText1');	b = uicontrol('Parent',a, ...		'Units','normalized', ...      'Position',[0.501923 0.0800745 0.0626151 0.0372439], ...      'String','Fig 2', ...		'Style','text', ...		'Tag','StaticText1');	b = uicontrol('Parent',a, ...		'Units','normalized', ...      'Position',[0.244231 0.0335196 0.0626151 0.0372439], ...      'String','Fig 3', ...		'Style','text', ...		'Tag','StaticText1');	b = uicontrol('Parent',a, ...		'Units','normalized', ...      'Position',[0.501923 0.0372439 0.0626151 0.0372439], ...      'String','Fig 4', ...		'Style','text', ...		'Tag','StaticText1');	   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   % Setup the Popup menu contents for Figure Type Selection 	   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%      h_fig1 = uicontrol('Parent',a, ...		'Units','normalized', ...      'Callback','crana(''ChangeFigure'',1);', ...      'Position',[0.307692 0.0800745 0.192597 0.0353818], ...      'String',strFigType, ...	 	'Style','popupmenu', ...		'Tag','Fig1', ...		'Value',1);	h_fig2 = uicontrol('Parent',a, ...		'Units','normalized', ...      'Callback','crana(''ChangeFigure'',2);', ...      'Position',[0.569231 0.0819367 0.192597 0.0353818], ...      'String',strFigType, ...		'Style','popupmenu', ...		'Tag','Fig2', ...		'Value',2);	h_fig3 = uicontrol('Parent',a, ...		'Units','normalized', ...      'Callback','crana(''ChangeFigure'',3);', ...      'Position',[0.307692 0.0372439 0.192597 0.0353818], ...      'String',strFigType, ...		'Style','popupmenu', ...		'Tag','Fig3', ...		'Value',3);	h_fig4 = uicontrol('Parent',a, ...		'Units','normalized', ...      'Callback','crana(''ChangeFigure'',4);', ...      'Position',[0.569231 0.0391061 0.192597 0.0353818], ...      'String',strFigType, ...		'Style','popupmenu', ...		'Tag','Fig4', ...	 	'Value',4);	   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   % Start/Stop/Return   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%      h_start = uicontrol('Parent',a, ...	 'Units','normalized', ...	 'CallBack','crana(''Start'')', ...    'Position',[0.794231 0.0772727 0.0857692 0.0431818], ...    	'String','Start', ...		'Tag','start_button');	h_stop = uicontrol('Parent',a, ...		'Units','normalized', ...	 	'CallBack','crana(''Stop'')', ...		'Position',[0.885385 0.0772727 0.0857692 0.0431818], ... 		'String','Stop', ...		'Userdata',1,...		'Tag','stop_button');	h_return = uicontrol('Parent',a, ...		'Units','normalized', ...		'CallBack','crana(''Return'')', ...		'Position',[0.794231 0.0289091 0.177308 0.0431818], ... 		'String','Return', ...		'Tag','return_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(4) = h_fig3;handles(5) = h_fig4;handles(10) = nAnimationFlag;handles(15) = 1;% initial animation starting indexhandles(16) = 0.1;% initial timesink valuehandles(21) = h_load;handles(22) = h_save;handles(23) = h_return;handles(24) = h_plus;set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	String Table%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [ labels ] = GetFigLabel( nFigType )strTable = cell( 9, 3 );strTable( 1,:) = {'crank angle (degree)';'rocker angle (deg)';'rocker position graph';};strTable( 2,:) = {'crank angle (degree)';'rocker velocity (rad/s)';'rocker velocity graph';};strTable( 3,:) = {'crank angle (degree)';'rocker acceleration (rad/s2)';'rocker acceleration graph';};strTable( 4,:) = {'crank angle (degree)';'coupler position (deg)';'coupler position graph';};strTable( 5,:) = {'crank angle (degree)';'coupler velocity (rad/s)';'coupler angular velocity graph';};strTable( 6,:) = {'crank angle (degree)';'coupler acceleration (rad/s2)';'coupler angular acceleration graph';};strTable( 7,:) = {'crank angle (degree)';'input torque/output torque';'torque graph';};strTable( 8,:) = {'crank angle (degree)';'transmission angle (deg)';'transmission angle graph';};strTable( 9,:) = {'';'';'Crank-Rocker Mechanism';};labels = strTable( nFigType, : );%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] = CalcResult( r );w2=1;Tout=1;Q11=0;Q1=0;r1 = r(1);r2 = r(2);r3 = r(3);r4 = r(4);% Define constantsi=0;r2d=180/pi;mode=-1;dt=5;fact=pi/180;% Loop to analyze the linkage for one full cyclefor Q21 = 0:dt:360;	i=i+1;	Q2 = Q21*fact;% Call function to compute the position  	para = fourbar(r1,r2,r3,r4,Q21,w2,0,mode,Q1,3);  	Q3=para(7);	Q33(i)=Q3;	Q4=para(8);	Q44(i)=Q4;	w33(i)=para(11);	w44(i)=para(12);	tang(i)=Q44(i)-Q33(i);	Tin1(i)=(Tout*w44(i))/w2;	assem=para(29);	% Store position velocity and acceleration information in matrices.	Bx(i)= para(17);	By(i)= para(18);	Cx(i)= para(19);	Cy(i)= para(20);	Bv(i)= para(10);	Cv(i)= para(11);	Ba(i)= para(14);	Ca(i)= para(15);	Q22(i) = Q21;	w22(i) = w2;	a44(i) = para(16);	a33(i) = para(15);	w33(i) = para(11);	Q33(i) = para (7);end	tt = 0:dt:360;[ m n ] = size( tt );res = zeros( 20, n);i = 0;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = Q44;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = w44;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = a44;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = Q33;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = w33;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = a33;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) =Tin1;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = tang;i = i+1; res( i,: ) = Bx;i = i+1; res( i,: ) = By;i = i+1; res( i,: ) = Cx;i = i+1; res( i,: ) = Cy;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateMechanismHandles( handle,Bx,By,Cx,Cy) axes(handle);%setup the aspect ratio of the mechanism to 1 set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;% Set up coordinates of bushings and pins.rpivot=0.03;ninc=20;npoints=ninc+1;centerx=0;centery=0;coord=circle2(rpivot,centerx,centery,ninc); % find coordinates of first pinfor i=1:1:npoints	xcoord1(i)=coord(i,1);	xcoord2(i)=xcoord1(i)+1;	ycoord1(i)=coord(i,2);endycoord2=ycoord1;% Find coordinates of first bushingbinc=ninc/2;coord1=bushing(rpivot,centerx,centery,binc,0);bpoints=ninc/2+16;for i=1:1:bpoints	xbush1(i)=coord1(i,1);	xbush2(i)=xbush1(i)+1;			ybush1(i)=coord1(i,2);endybush2=ybush1;% Set up the vectors needed to draw the linkage joint1=animatedline('marker', 'o','markersize',6, 'color', 'k');joint2=animatedline('marker', 'o','markersize',6, 'color', 'k');crank=animatedline('linewidth' ,2, 'color', 'k');coupler=animatedline('linewidth' ,2, 'color', 'k');rocker=animatedline('linewidth',2,'color', 'k');bush1=line('xdata',[],'ydata',[], 'color', 'r');bush2=line('xdata',[],'ydata',[],'color', 'r');pin1=line('xdata',[],'ydata',[], 'color', 'r');pin2=line('xdata',[],'ydata',[], 'color', 'r'); % Set the axis limits for the figures.width = 0.38;height = 0.31;tempx= [xcoord1,xbush1,xcoord2,xbush2,Bx, Cx];xmina=min(tempx);xmaxa=max(tempx);tempy=[ycoord1,ybush1,ycoord2,ybush2,By, Cy];ymina=min(tempy);ymaxa=max(tempy);rangex=xmaxa-xmina;rangey=ymaxa-ymina;xmin=xmina-0.05*rangex;xmax=xmaxa+0.05*rangex;ymin=ymina-0.05*rangey;ymax=ymaxa+0.05*rangey;values=axisadjust(xmin, xmax, ymin, ymax, width , height);xmin=values(1);xmax=values(2);ymin=values(3);ymax=values(4);axis([xmin xmax ymin ymax]);% Draw the fixed curves first.set(pin1,'xdata', xcoord1, 'ydata',ycoord1);set(bush1,'xdata', xbush1,'ydata', ybush1);set(pin2,'xdata', xcoord2, 'ydata',ycoord2); set(bush2,'xdata', xbush2,'ydata', ybush2); hdls = [joint1 joint2 crank coupler rocker];set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition( link,i,Bx,By,Cx,Cy)joint1 = link(1);joint2 = link(2);crank = link(3);coupler = link(4);rocker = link(5);clearpoints(joint1);addpoints(joint1,Bx(i),By(i));clearpoints(joint2);addpoints(joint2,Cx(i),Cy(i));clearpoints(crank);addpoints(crank,[0 Bx(i)],[0 By(i)]);clearpoints(coupler);addpoints(coupler,[Bx(i) Cx(i)],[By(i) Cy(i)]); clearpoints(rocker);addpoints(rocker,[1 Cx(i)],[0 Cy(i)]);function [coords] = circle2(r,x0,y0,ninc) % This function determines the coordinates of a series of points defining a% circle of radius r. The number of points stored is ninc+1.% The input values are:%r	= radius of circle%x0	= x coordinate of center of circle%y0	= y coordinate of center of circle%ninc = number of increments into which circle is divided % The results are returned in the vector "coords". The answers are% stored in values according to the following: %coords (i,1) = x coordinate of points on circle %coords (i,2) = y coordinate of points on circle % find the coordinates of the points.inc=2*pi/ninc;npoints = ninc+1;i=0;for j=0:inc:2*pi	i=i+1;	coords(i,1)=x0+r*cos(j);	coords(i,2)=y0+r*sin(j);end
function DoubleRocker_ana(Action,r,beta1,Q1,wdr,cpflag,driver,times,mode,flag1,theta0,theta)% This routine sets up the contents of the userdata of the Analysis Window % handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(4) = handle of fig3 popupmenu : was not used in this program% handles(5) = handle of fig4 popupmenu : was not used in this program% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(8) = handle of axe3 : was not used in this program% handles(9) = handle of axe4 : was not used in this program% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(13) = handle of bead(3) : was not used in this program% handles(14) = handle of bead(4) : was not used in this program% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1% handles(18) = handle of reference axe for axe2% handles(19) = handle of reference axe for axe3% handles(20) = handle of reference axe for axe4% handles(21) = handle of submenu 'Load'% handles(22) = handle of submenu 'Save'% handles(23) = handle of return button;% handles(24) = handle of speed plus button;% handles(25) = flag1;% flag1 = 1 for FourbarDesign program. flag1 = 2 for hr_cr_animation program% each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler rocker];      global strFigType global nAnimationFlagglobal g_AnaResglobal nChangeSpeed%global rocker_output%================================================================% global theta0% global theta%================================================================% Define the axes for the first graph (input/output angle graph)if nargin==0 && isempty(findobj('Tag','Double Rocker Analysis Window')),  % cogana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','Double Rocker Analysis Window'))      % cogana is already open   Action='None';elseif nargin== 1 && ~isempty(findobj('Tag','Double Rocker Analysis Window')) && strcmp( Action, 'initialize'), % cogana is already open	% Recalculate the value, and then redraw	Action='None';endswitch Action    case 'initialize'   if  isempty(findobj('Tag','Double Rocker Analysis Window'))         LocalOpenFig;      nAnimationFlag = 0;   else  		DoubleRocker_ana('None');   end     if nargin < 10       r = [ 3.304 1 2.913 1.565 3.2834 ];      beta1 = -146.3099;      Q1 = 1.7505;      wdr = 2;      cpflag = 1;      driver = 1;      times = 1;      mode = -1;      flag1 = 1;   end      if exist('nAnimationFlag')       if nAnimationFlag == 1      	DoubleRocker_ana('Stop');         return;      end   end      a = findobj('Tag','Double Rocker Analysis Window');      handles = get(a,'userdata');   handles(25) = flag1;   set(a,'userdata',handles);   Q11=Q1*pi/180;   %   mode = assemblymode(r(1), r(2), r(3), r(4), 0, theta0, phi0)      g_AnaRes = CalcResult( r, beta1, Q1, wdr, cpflag, driver, times, mode, theta0, theta );   DrawAnalysisWindow;   DoubleRocker_ana('ShowFigure');   DoubleRocker_ana('Start');    	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	%	Change Figure Call Back Function	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	case 'ChangeFigure'   DrawAnalysisWindow;   DoubleRocker_ana('ShowFigure');   DoubleRocker_ana('Start');   case 'SetSpeed'   nChangeSpeed = r(1);   case 'ChangeFigureNo'   DrawAnalysisWindow;   DoubleRocker_ana('ShowFigure');   DoubleRocker_ana('Start');   case 'Animation'   a = findobj('Tag','Double Rocker Analysis Window');      handles = get(a,'userdata');   Q1 = 0;      [ m, n ] = size( g_AnaRes);   itotal = n;   timesink = handles(16);   i = handles(15);   dt = 5;         nFigNum  = get( handles(1),'value');   nType(1) = get( handles(2),'value');   nType(2) = get( handles(3),'value');   nType(3) = get( handles(4),'value');   nType(4) = get( handles(5),'value');      bead  = zeros(1,4);   links = zeros(4,10);   bead(1) = handles(11);   bead(2) = handles(12);   bead(3) = handles(13);   bead(4) = handles(14);      h_plus = handles(24);       Bx = g_AnaRes(13,:);   By = g_AnaRes(14,:);   Cx = g_AnaRes(15,:);   Cy = g_AnaRes(16,:);   Dx1 = g_AnaRes(17,:);   Dy1 = g_AnaRes(18,:);      Dx_out1= g_AnaRes(19,:);     Dy_out1= g_AnaRes(20,:);     qstart = g_AnaRes(25,1);   qstop = g_AnaRes(25,2);       cpflag = g_AnaRes(25,3);      driver = g_AnaRes(25,4);      times = g_AnaRes(25,5);      Q11 = g_AnaRes(25,7);     r(1) = g_AnaRes(25,8);      basex = r(1)*cos(Q11);      basey = r(1)*sin(Q11);      for j = 1:nFigNum      if nType(j) == 4       	links(j,:) = get(handles(j+5),'userdata');     	end   end      % set timer   tic;      while nAnimationFlag                      cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i ==1         drawnow;      end               if nFigNum > 0         if nType(1) == 4   			SetMechanismPosition( links(1,:),i,Bx,By,Cx,Cy,Dx1,Dy1,basex,basey,cpflag);         else         		if driver == 1              	j = nType(1) * 2 -1;           	else               	j = nType(1) * 2 +5;           	end      			set(bead(1), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));           		end      end               	if nFigNum > 1         if nType(2) == 4   			SetMechanismPosition( links(2,:),i,Bx,By,Cx,Cy,Dx1,Dy1,basex,basey,cpflag);         else           		if driver == 1              	j = nType(2) * 2 -1;           	else               	j = nType(2) * 2 +5;           	end              	set(bead(2), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end        end         	if nFigNum > 2         if nType(3) == 4   			SetMechanismPosition( links(3,:),i,Bx,By,Cx,Cy,Dx1,Dy1,basex,basey,cpflag);         else           		if driver == 1              	j = nType(3) * 2 -1;           	else               	j = nType(3) * 2 +5;           	end        	   	set(bead(3), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end      end              	if nFigNum > 3         if nType(4) == 4   			SetMechanismPosition( links(4,:),i,Bx,By,Cx,Cy,Dx1,Dy1,basex,basey,cpflag);         else           		if driver == 1              	j = nType(4) * 2 -1;           	else               	j = nType(4) * 2 +5;           	end           		set(bead(4), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end        end           	drawnow;   %flush the draw buffer      i= i+1;      if i == itotal         i = 1;      end      if nChangeSpeed ~= 0         timesink = timesink * nChangeSpeed;         nChangeSpeed = 0;      end      while toc < timesink      end         tic;   end      nAnimationFlag = 0;   handles(15) = i;   handles(16) = timesink;   set(a,'Userdata',handles);   case 'ShowFigure'   a = findobj('Tag','Double Rocker Analysis Window');   handles = get( a,'userdata');   nFigNum = get(handles(1),'value');   [ m, n ] = size( g_AnaRes);   Bx = g_AnaRes(13,:);   By = g_AnaRes(14,:);   Cx = g_AnaRes(15,:);   Cy = g_AnaRes(16,:);   Dx1= g_AnaRes(17,:);   Dy1= g_AnaRes(18,:);      Dx_out1= g_AnaRes(19,:);    Dy_out1= g_AnaRes(20,:);       times = g_AnaRes(25,5);      if times == 2      n1 = n/2;   else      n1 = n;   end   Dx2 = g_AnaRes(21,1:n1);   Dy2 = g_AnaRes(22,1:n1);   Dx3 = g_AnaRes(23,1:n1);   Dy3 = g_AnaRes(24,1:n1);   qstart = g_AnaRes(25,1);   qstop = g_AnaRes(25,2);   driver = g_AnaRes(25,4);   times = g_AnaRes(25,5);      Q11 = g_AnaRes(25,7);    r = g_AnaRes(25,8:13);              if nFigNum > 0      nType = get(handles(2),'value');      axes(handles(6));      if nType == 4         CreateMechanismHandles( handles(6),r,Bx,By,Cx,Cy,Dx1,Dy1,Dx2,Dy2,Dx3,Dy3,Dx_out1,Dy_out1,Q11,times);      else         	if driver == 1            i = nType * 2 -1;         else             i = nType * 2 +5;         end           	line1 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line1','color', 'r');   		b1 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b1');        	handles(11) = b1;        	labels = GetFigLabel( nType );        	xlabel(labels(1));         ylabel(labels(2));%          axis([qstart qstop min(g_AnaRes(i+1,:)) max(g_AnaRes(i+1,:)) ]);        axis auto      end   end         if nFigNum > 1      nType = get(handles(3),'value');      axes(handles(7));      if nType == 4         CreateMechanismHandles( handles(7),r,Bx,By,Cx,Cy,Dx1,Dy1,Dx2,Dy2,Dx3,Dy3,Dx_out1,Dy_out1,Q11,times);      else          	if driver == 1            i = nType * 2 -1;         else             i = nType * 2 +5;         end          	line2 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line2','color', 'r');   		b2 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b2');        	handles(12) = b2;   		labels = GetFigLabel( nType );        	xlabel(labels(1));        	ylabel(labels(2));%          axis([qstart qstop min(g_AnaRes(i+1,:)) max(g_AnaRes(i+1,:)) ]);        axis auto      end   end            if nFigNum > 2      nType = get(handles(4),'value');      axes(handles(8));      if nType == 4         CreateMechanismHandles( handles(8),r,Bx,By,Cx,Cy,Dx1,Dy1,Dx2,Dy2,Dx3,Dy3,Dx_out1,Dy_out1,Q11,times);      else           if driver == 1            i = nType * 2 -1;        else             i = nType * 2 +5;        end           line3 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line3','color', 'r');   		b3 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b3');        	handles(13) = b3;   		labels = GetFigLabel( nType );        	xlabel(labels(1));        	ylabel(labels(2));%          axis([qstart qstop min(g_AnaRes(i+1,:)) max(g_AnaRes(i+1,:)) ]);        axis auto      end   end            if nFigNum > 3      nType = get(handles(5),'value');      axes(handles(9));      if nType == 4         CreateMechanismHandles( handles(9),r,Bx,By,Cx,Cy,Dx1,Dy1,Dx2,Dy2,Dx3,Dy3,Dx_out1,Dy_out1,Q11,times);     	else         	if driver == 1            i = nType * 2 -1;         else             i = nType * 2 +5;         end          	line4 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line4','color', 'r');         b4 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6,'tag','b4');        	handles(14) = b4;   		labels = GetFigLabel( nType );        	xlabel(labels(1));         ylabel(labels(2));%          axis([ qstart qstop min(g_AnaRes(i+1,:)) max(g_AnaRes(i+1,:)) ]);        axis auto      end   end   zoom on;   drawnow;   a = findobj('Tag','Double Rocker Analysis Window');      set(a,'Userdata',handles);   case 'None'   figure( findobj('Tag','Double Rocker Analysis Window'));% Bring the figure to front, if it already existscase 'Close'   DoubleRocker_ana('Stop');   a = findobj('Tag','Double Rocker Analysis Window');      close(a);case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','Double Rocker Analysis Window');      handles = get(a,'userdata');   set(handles(1),'Enable','off');   set(handles(2),'Enable','off');   set(handles(3),'Enable','off');   set(handles(4),'Enable','off');   set(handles(5),'Enable','off');   set(handles(21),'Enable','off');   set(handles(22),'Enable','off');   set(handles(23),'Enable','off');      nAnimationFlag = 1;   nChangeSpeed = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   DoubleRocker_ana('Animation');   case 'Stop'   if  isempty(findobj('Tag','Double Rocker Analysis Window'))     	return;      end   a = findobj('Tag','Double Rocker Analysis Window');      handles = get(a,'userdata');   nAnimationFlag = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   set(handles(1),'Enable','on');   set(handles(21),'Enable','on');   set(handles(22),'Enable','on');   set(handles(23),'Enable','on');   nFigNum = get(handles(1),'value');   for i = 1:nFigNum,     	set(handles(i+1),'Enable','on');   end      case 'Return'   DoubleRocker_ana('Stop');      close;        case 'Get File'% Get the file name using the UIGETFILE   [sFileName sFilePath] = uigetfile('*.dat','Load File');    if sFileName == 0 && sFilePath == 0   	return;   end% Combine the path and file name together   sTemp = strcat( sFilePath, sFileName );% get the size to erase the '.dat' extension    sz = size(sFileName);% load the data file   load(sTemp);% assign the parameter to a variable   Parameter = eval(sFileName(1:(sz(2)-4)));    a = findobj('Tag','Analysis Window');   handles = get(a,'userdata');   if length(Parameter) == 5   	nFigNum = Parameter(1);   	nType1 = Parameter(2);   	nType2 = Parameter(3);   	nType3 = Parameter(4);   	nType4 = Parameter(5);   	set(handles(1),'Value',nFigNum);      set(handles(2),'Value',nType1);   	set(handles(3),'Value',nType2);   	set(handles(4),'Value',nType3);   	set(handles(5),'Value',nType4);   	set(a,'userdata',handles);   	DrawAnalysisWindow;   	DoubleRocker_ana('ShowFigure');   	DoubleRocker_ana('Start');   else   	return;   endcase 'Put File'   [sFileName sFilePath] = uiputfile('*.dat','Save As');    a = findobj('Tag','Analysis Window');   handles = get(a,'userdata');   nFigNum = get(handles(1),'Value');   nType1 = get(handles(2),'Value');   nType2 = get(handles(3),'Value');   nType3 = get(handles(4),'Value');   nType4 = get(handles(5),'Value');   ParameterData = [nFigNum; nType1; nType2; nType3; nType4]; % sTemp = strcat( sFilePath, sFileName)   [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);   [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');   eval(strCmd);end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow();a = findobj('Tag','Double Rocker Analysis Window');handles = get(a,'userdata');h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);h_fig3 = handles(4);h_fig4 = handles(5);nFigNum=get(h_fignum,'Value');position = zeros( 4, 4, 4);position(1,1,:) = [0.04 0.18 0.92 0.77];position(2,1,:) = [0.25 0.615 0.5 0.36];position(2,2,:) = [0.25 0.23 0.5 0.36];position(3,1,:) = [0.1 0.42 0.38 0.31];position(3,2,:) = [0.58 0.65 0.38 0.31];position(3,3,:) = [0.58 0.22 0.38 0.31];position(4,1,:) = [0.1 0.65 0.38 0.31];position(4,2,:) = [0.58 0.65 0.38 0.31];position(4,3,:) = [0.1 0.22 0.38 0.31];position(4,4,:) = [0.58 0.22 0.38 0.31]; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:9,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 17:20,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 1:nFigNum,	set(handles(i+1),'Enable','on');    if i == 1 || i ==2        set(h_fig3,'Visible','off');        set(h_fig4,'Visible','off');%        set(rownum(i),'visible','off');%         if i == 2%             set(h_fig4,'Visible','off');%         end    endend%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 1	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...   'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 3%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 3	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 4%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 4	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...   'Color',[1 1 1], ...	'Position',position(4,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,4,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(20) = b;h_4 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,4,:), ...	'Tag','Axes4', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;handles(9) = h_4;end	set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show User Interface for Analysis Window%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig();% strFigType = [ ...%       'rocker ang ';...%       'rocker vel ';...%       'rocker acc ';...%    	  'mechanism  '];strFigType = [ ...              % the vertical concatenation must be same dimension        'rocker ang ';...       % (the number of colums in each raw must be same dimension)        '           ';...        '           ';...   	    'mechanism  '];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-50 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','Pixels', ...	'Color',[0.8 0.8 0.8], ...   'Name','Four Bar Analysis Window', ...    'NumberTitle','off', ...	'Position',FigPos, ... 	'Tag','Double Rocker Analysis Window');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...   'Position',[0.01731 0.020 0.77 0.1117], ...   'Style','frame', ...	'Tag','Frame2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.7808 0.020 0.2038 0.1117], ...   'Style','frame', ...   'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');h_load = uimenu('Parent',b, ...	'Callback','DoubleRocker_ana(''GetFile'')', ...	'Label','Load', ...	'Tag','submenu_load');h_save = uimenu('Parent',b, ...	'Callback','DoubleRocker_ana(''PutFile'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...	'Position',[0.03 0.07 0.095 0.03911], ... 	'String','No. of figs ', ...	'Style','text', ...	'Tag','StaticText2');h_fignum = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','DoubleRocker_ana(''ChangeFigureNo'');', ...   'Position',[0.135 0.0837 0.10 0.03538], ...   'String',['1';'2'], ...   'Style','popupmenu', ...	'Tag','FigNumber', ... 	'Value',1);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.03 0.02793 0.08 0.03910], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','DoubleRocker_ana(''SetSpeed'',0.707);', ...   'Position',[0.1327 0.02955 0.04038 0.03182], ...    'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','DoubleRocker_ana(''SetSpeed'',1.414);', ...   'Position',[0.2 0.02955 0.04038 0.03182], ...   'String','-', ... 	'Tag','Minus_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.07821 0.06262 0.03724], ...   'String','Fig 1', ...	'Style','text', ... 	'Tag','StaticText1'); b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.08007 0.06262 0.03724], ...   'String','Fig 2', ...	'Style','text', ...	'Tag','StaticText1');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup the Popup menu contents for Figure Type Selection 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_fig1 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','DoubleRocker_ana(''ChangeFigure'',1);', ...   'Position',[0.3077 0.0837 0.19256 0.03538], ...   'String',strFigType, ... 	'Style','popupmenu', ...	'Tag','Fig1', ...	'Value',4);h_fig2 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','DoubleRocker_ana(''ChangeFigure'',2);', ...   'Position',[0.5692 0.0837 0.19256 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig2', ...	'Value',1);h_fig3 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','DoubleRocker_ana(''ChangeFigure'',3);', ...   'Position',[0.3077 0.04024 0.1926 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig3', ...	'Value',2);h_fig4 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','DoubleRocker_ana(''ChangeFigure'',4);', ...   'Position',[0.5692 0.04024 0.1926 0.03538], ...   'String',strFigType, ...   'Style','popupmenu', ...	'Tag','Fig4', ...	 'Value',3);	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','DoubleRocker_ana(''Start'')', ...   'Position',[0.7942 0.07727 0.08577 0.04318], ...   'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','DoubleRocker_ana(''Stop'')', ...	'Position',[0.8854 0.07727 0.08577 0.04318], ...    'String','Stop', ...   'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','DoubleRocker_ana(''Return'')', ...	'Position',[0.7942 0.02891 0.1773 0.04318], ...    'String','Return', ...   'Tag','return_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(4) = h_fig3;handles(5) = h_fig4;handles(10) = nAnimationFlag;handles(15) = 1;% initial animation starting indexhandles(16) = 0.1;% initial timesink valuehandles(21) = h_load;handles(22) = h_save;handles(23) = h_return;handles(24) = h_plus;set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	String Table%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [ labels ] = GetFigLabel( nFigType )strTable = cell( 3, 3 );strTable( 1,:) = {'input angle (degree)';'rocker angle (deg)';'rocker angle graph';};strTable( 2,:) = {'input angle (degree)';'rocker velocity (rad/s)';'rocker angular velocity graph';};strTable( 3,:) = {'input angle (degree)';'rocker acceleration (rad/s^2)';'rocker angular acceleration graph';};labels = strTable( nFigType, : );%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] = CalcResult( r, beta1, Q1, wdr, cpflag, driver, times, mode, theta0, theta );npos = 73;i=0;r1 = r(1);r2 = r(2);r3 = r(3);r4 = r(4);cr1 = r(5);cr2 = r(6);Q11=Q1*pi/180;% convert radian to degreetemp_qstart=theta0*(180/pi);temp_qstop=(theta+theta0)*(180/pi);[qstart,qstop]=fb_angle_limits_cr(r1, r2, r3, r4, Q1);qstart = temp_qstart;qstop = temp_qstop;     driver==1;      dq = (qstop-qstart)/(npos-1);QM1=qstart;i2=0;k = 0;for mmm=1:1:times	if mmm ~=1		mode = -mode;		dq=-dq;	end	for motion=1:1:npos		if motion>1; QM1=QM1+dq; end        para = fourbar_cr(r1,r2,r3,r4,QM1,wdr,0,mode,Q1,3); % <===================================% Store the linkage information in para into named vectors	 		assem=para(29);      j = 0;		if assem==1         i = i+1;         k = k+1;			Q22(i)=para(6);			Q33(i)=para(7);			Q44(i)=para(8);			w22(i)=para(10); 			w33(i)=para(11);			w44(i)=para(12);			a44(i)=para(16);			cang1=(Q33(i)+beta1)*pi/180;% Store position information in matrices.			Bx(i)= para(17);			By(i)= para(18);			Cx(i)= para(19);			Cy(i)= para(20);			Dx1(i)=Bx(i)+cr1*cos(cang1);			Dy1(i)=By(i)+cr1*sin(cang1);            Dx_out1(i)=Bx(i)+cr2*cos(cang1);   			Dy_out1(i)=By(i)+cr2*sin(cang1);    			% Determine coordinates for coupler curve for first mode						if mmm==1				Dx2(i)=Dx1(i);				Dy2(i)=Dy1(i);			end			% Determine coordinates for coupler curve for second mode						if mmm==2				i2=i2+1;				Dx3(i2)=Dx1(i);				Dy3(i2)=Dy1(i);			end      end      	endend	% Store position velocity and acceleration information in matrices.res = zeros( 25, k);    i = 0;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = Q44;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = w44;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = a44;i = i+1; res( i,: ) = Q33;i = i+1; res( i,: ) = Q33;i = i+1; res( i,: ) = Q33;i = i+1; res( i,: ) = Q44;i = i+1; res( i,: ) = Q33;i = i+1; res( i,: ) = w44;i = i+1; res( i,: ) = Bx;i = i+1; res( i,: ) = By;i = i+1; res( i,: ) = Cx;i = i+1; res( i,: ) = Cy;i = i+1; res( i,: ) = Dx1;i = i+1; res( i,: ) = Dy1;i = i+1; res( i,: ) = Dx_out1;    i = i+1; res( i,: ) = Dy_out1;    if mmm ==2   k1 = k/2;else   k1 = k;endi = i+1; res( i,1:k1 ) = Dx2;i = i+1; res( i,1:k1) = Dy2;if mmm ==2   i = i+1; res( i,1:k1 ) = Dx3;   i = i+1; res( i,1:k1 ) = Dy3;endres( 25,1 ) = qstart;res( 25,2 ) = qstop;res( 25,3 ) = cpflag;res( 25,4 ) = driver;res( 25,5 ) = times;res( 25,6 ) = mode;res( 25,7 ) = Q11;res( 25,8:13 ) = r;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateMechanismHandles( handle,r,Bx,By,Cx,Cy,Dx1,Dy1,Dx2,Dy2,Dx3,Dy3,Dx_out1,Dy_out1,Q11,times,X) global link2a;global link3a;global link4a;global link2b;global link3b;global link4b;axes(handle);%setup the aspect ratio of the mechanism to 1 set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;% Set up coordinates of bushings and pins.width=0.95;height=0.95;r1 = r(1);   r2 = r(2);   r3 = r(3);   r4 = r(4);   basex = r1*cos(Q11);basey = r1*sin(Q11);rmin=min([r1, r2, r3, r4]);bush1=bushing(rmin/10,0,0,40,0);cir1=circle2(rmin/10,0,0,40);bush2=bushing(rmin/10,basex,basey,40,0);cir2=circle2(rmin/10,basex,basey,40);[n m]=size(Dx2);itotal=m;% Find the limits for the plotsxmina=min([min(Dx1) min(Bx) min(Cx) min(bush1(:,1)) min(bush2(:,1)) basex]);xmaxa=max([max(Dx1) max(Bx) max(Cx) max(bush1(:,1)) max(bush2(:,1)) basex]);ymina=min([min(Dy1) min(By) min(Cy) min(bush1(:,2)) min(bush2(:,2)) basey]);ymaxa=max([max(Dy1) max(By) max(Cy) max(bush1(:,2)) max(bush2(:,2)) basey]);rangex=xmaxa-xmina;rangey=ymaxa-ymina;xmin=xmina-0.1*rangex;xmax=xmaxa+0.1*rangex;ymin=ymina-0.1*rangey;ymax=ymaxa+0.1*rangey;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin=values(1);xmax=values(2);ymin=values(3);ymax=values(4);axis([xmin xmax ymin ymax]);% Set up the vectors needed to draw the linkage joint1=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',8, 'color', 'g');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',8, 'color', 'k');  crank=line('xdata', [], 'ydata' ,[], 'linewidth' ,1.5, 'color', 'g');coupler=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');couplerptr1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');	   couplerptr2=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');	  gridpt=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'markersize',6,'color', 'g', 'marker', 'o');couplerpoint1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r', 'linestyle', '-');	couplerpoint2=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r', 'linestyle', '-');	for ipoints =1:itotal	   	gridline1(ipoints)=line('xdata',[],'ydata',[],'linewidth',1,'color','b','linestyle','-');	 % <==== color was red  ====================================	gridline2(ipoints)=line('xdata',[],'ydata',[],'linewidth',1,'color','r','linestyle','-');	end	   for ipoints =1:itotal	   	gridline_out(ipoints)=line('xdata',[],'ydata',[],'linewidth',1,'color','m','linestyle','-');	 % <==== output rocker line  ====================================end	   	   rocker=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');bushy1=line('xdata', [], 'ydata',[], 'linestyle', '-','markersize', 8,'color', 'r');bushy2=line('xdata', [], 'ydata',[], 'linestyle', '-','markersize', 8, 'color', 'r');circ1=line('xdata', [], 'ydata',[], 'linestyle', '-','markersize', 8,'color', 'r');circ2=line('xdata', [], 'ydata',[], 'linestyle', '-','markersize', 8, 'color', 'r');% Draw the fixed curves first.set(circ1,'xdata', cir1(:,1), 'ydata',cir1(:,2));set(bushy1,'xdata', bush1(:,1),'ydata', bush1(:,2));set(circ2,'xdata', cir2(:,1), 'ydata',cir2(:,2)); set(bushy2,'xdata', bush2(:,1),'ydata', bush2(:,2));  %draw the coupler curved dashedfor ipoints = 1:itotal	if ipoints <itotal		msdx=Dx2(ipoints);		midx=Dx2(ipoints)+(Dx2(ipoints+1)-Dx2(ipoints))/2;		msdy=Dy2(ipoints);		midy=Dy2(ipoints)+(Dy2(ipoints+1)-Dy2(ipoints))/2;                %<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<        msdx_out=Dx_out1(ipoints);      		midx_out=Dx_out1(ipoints)+(Dx_out1(ipoints+1)-Dx_out1(ipoints))/2;		msdy_out=Dy_out1(ipoints);		midy_out=Dy_out1(ipoints)+(Dy_out1(ipoints+1)-Dy_out1(ipoints))/2;        %<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<	end	if ipoints ==itotal && itotal==72		msdx=Dx2(ipoints);		midx=Dx2(ipoints)+(Dx2(1)-Dx2(ipoints))/2;		msdy=Dy2(ipoints);		midy=Dy2(ipoints)+(Dy2(1)-Dy2(ipoints))/2;                %<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<        msdx_out=Dx_out1(ipoints);		midx_out=Dx_out1(ipoints)+(Dx_out1(1)-Dx_out1(ipoints))/2;		msdy_out=Dy_out1(ipoints);		midy_out=Dy_out1(ipoints)+(Dy_out1(1)-Dy_out1(ipoints))/2;        %<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<	end					set(gridline1(ipoints),'xdata', [msdx midx],'ydata',[msdy midy]); % input rocker line    set(gridline_out(ipoints),'xdata', [msdx_out midx_out],'ydata',[msdy_out midy_out]);    % output rocker line	if times == 2		if ipoints <itotal			msdx=Dx3(ipoints);			midx=Dx3(ipoints)+(Dx3(ipoints+1)-Dx3(ipoints))/2;			msdy=Dy3(ipoints);			midy=Dy3(ipoints)+(Dy3(ipoints+1)-Dy3(ipoints))/2;		end		if ipoints ==itotal && itotal==72			msdx=Dx3(ipoints);			midx=Dx3(ipoints)+(Dx3(1)-Dx3(ipoints))/2;			msdy=Dy3(ipoints);			midy=Dy3(ipoints)+(Dy3(1)-Dy3(ipoints))/2;		end								set(gridline2(ipoints),'xdata',[msdx midx],'ydata',[msdy midy]);	endendhdls=[ joint1 joint2 crank coupler rocker couplerptr1 ...       couplerptr2 couplerpoint1 couplerpoint2 gridpt];set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = SetMechanismPosition( links,i,Bx,By,Cx,Cy,Dx1,Dy1,basex,basey,cpflag)%global rocker_output	joint1 = links(1);	joint2 = links(2);    	crank = links(3);	coupler = links(4);	rocker = links(5);	couplerptr1 = links(6);	couplerptr2 = links(7);	couplerpoint1 = links(8);	couplerpoint2 = links(9);	gridpt = links(10);	set(joint1,'xdata', Bx(i), 'ydata',By(i));	set(joint2,'xdata', Cx(i), 'ydata',Cy(i));	set(coupler,'xdata', [Bx(i) Cx(i)],'ydata', [By(i) Cy(i)]);	set(crank,'xdata',[0 Bx(i)],'ydata',[0 By(i)]);	set(rocker,'xdata', [basex Cx(i)],'ydata', ...		[basey Cy(i)]);	set(gridpt,'xdata',Dx1(i), 'ydata' ,Dy1(i));	set(couplerptr1,'xdata', [Bx(i) Dx1(i)],...      'ydata' ,[By(i) Dy1(i)]);	if cpflag ==2	set(couplerptr2,'xdata', [Cx(i) Dx1(i)],...		'ydata' ,[Cy(i) Dy1(i)]);	end
function hr_cr_animation(Action,r,tl0,tv0,nhgp0,nvgp0,w2,xp,yp) % the contents of the userdata of Analysis Window % handles(1) = flag for deciding to start or stop animation% handles(2) = i% handles(3) = handle of strat button% handles(4) = handle of stop button% handles(5) = handle of return button% handles(6) = handle of analysis button% handles(7) = handle of beta angle text% handles(8) = handle of coupler radius text% handles(9) = timesink% handles(10) = handle of status text% handles(11) = total number of rows in animation% handles(12) = total number of columns in animationglobal nAnimationFlagglobal g_AnaRes2global nChangeSpeedif nargin==0 && isempty(findobj('Tag','CR Coupler Curve Animation Window')),  % hr_cr_animation is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','CR Coupler Curve Animation Window'))      % hr_cr_animation is already open   Action='None';endswitch Action%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Initialize the User Interface%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'initialize'   if  isempty(findobj('Tag','CR Coupler Curve Animation Window'))         LocalOpenFig;      nAnimationFlag = 0;   else      hr_cr_animation('None');   end      if nargin < 9      r = [ 3.304 2.913 1.565 ];      tl0 = 11.652;      tv0 = 5.826;      nhgp0 = 20;      nvgp0 = 10;      w2 = 5;      xp = [9 10];      yp = [2 5];      end   if exist('nAnimationFlag')       if nAnimationFlag == 1   	  hr_cr_animation('Stop');         return;      end   end   a = findobj('Tag','CR Coupler Curve Animation Window');   UD=a.UserData;   UD.Dx = xp(2)-xp(1)+1;   UD.Dy = yp(2)-yp(1)+1;   set(a,'UserData',UD);   g_AnaRes2 = CalcResult( r,tl0,tv0,nhgp0,nvgp0,w2,xp,yp );   hr_cr_animation('ShowFigure');   hr_cr_animation('Start');   case 'None'   figure( findobj('Tag','CR Coupler Curve Animation Window'));   % Bring the figure to front, if it already existscase 'ShowFigure'   a = findobj('Tag','CR Coupler Curve Animation Window');   UD=a.UserData;   pp = UD.Dx;   qq = UD.Dy;   u = 4;   for m = 1:pp      for n = 1:qq         u = u+1; mx(m,n,:) = g_AnaRes2(u,:);         u = u+1; my(m,n,:) = g_AnaRes2(u,:);      end      end   u = 4+2*pp*qq;	[ m, n ] = size( g_AnaRes2);	itotal = n;   	xmin = g_AnaRes2(u+1,1);	xmax = g_AnaRes2(u+1,2);   ymin = g_AnaRes2(u+1,3);   ymax = g_AnaRes2(u+1,4);   r1 = g_AnaRes2(u+1,5);   CC = g_AnaRes2(u+1,9);   r2 = 1;      handle = findobj('tag','hr_cr_ani_axes');   CreateMechanismHandles(handle,r1,r2,CC,mx,my,xmin,xmax,ymin,ymax,pp,qq,itotal);	   %   a = findobj('Tag','CR Coupler Curve Animation Window');   %   set(a,'Userdata',handles);   refresh;case 'Animation'   a = findobj('Tag','CR Coupler Curve Animation Window');   UD=a.UserData;   pp = UD.Dx;   qq = UD.Dy;      [ m, n ] = size( g_AnaRes2);   itotal = n;	timesink = UD.tsink;   i = UD.inum;   dt = 5;   Bx = g_AnaRes2(1,:);   By = g_AnaRes2(2,:);   Cx = g_AnaRes2(3,:);   Cy = g_AnaRes2(4,:);      u = 4;   for m = 1:pp      for n = 1:qq         u = u+1; mx(m,n,:) = g_AnaRes2(u,:);         u = u+1; my(m,n,:) = g_AnaRes2(u,:);      end      end   u = 4+2*pp*qq;   r1 = g_AnaRes2(u+1,5);   Q11 = g_AnaRes2(u+1,10);   b = findobj('tag','hr_cr_ani_axes');   link = get(b,'userdata');   %k = length(link) - 5;   % set timer   tic;     while nAnimationFlag                      cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i == 1         drawnow;      end               SetMechanismPosition( link,i,Bx,By,Cx,Cy,r1,Q11,mx,my,pp,qq);		drawnow;   %flush the draw buffer      i= i+1;            if i == itotal         i = 1;      end      	if nChangeSpeed ~= 0      timesink = timesink * nChangeSpeed;      nChangeSpeed = 0;   end   while toc < timesink      end         tic;   end   nAnimationFlag = 0;   UD.inum = i;   UD.tsink = timesink;   set(a,'Userdata',UD);%case 'Close'%hr_cr_animation('Stop');%a = findobj('Tag','CR Coupler Curve Animation Window');   %close(a);case 'Set Calls' % get the handle of the objects used to control% the mouse input a = findobj('Tag','CR Coupler Curve Animation Window');set(a,'windowbuttonupfcn', 'a = findobj(''Tag'',''CR Coupler Curve Animation Window'');set(a,''windowbuttonmotion'','''');refresh');set(a,'windowbuttonmotionfcn','hr_cr_animation(''Rotate'')');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Callbacks When The User Moves the Mouse Button.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'Rotate'   a = findobj('Tag','CR Coupler Curve Animation Window');   UD=a.UserData;   i = UD.inum;   h_anal = UD.hand(4);   h_betatxt = UD.hand(5);   h_r6txt = UD.hand(6);   pp = UD.Dx;   qq = UD.Dy;      b = findobj('Tag','hr_cr_ani_axes');      pt = get(b,'currentpoint');   pt = pt(1,1:2);   ptx = pt(1);   pty = pt(2);   Bx(1) = g_AnaRes2(1,1);   By(1) = g_AnaRes2(2,1);   u = 4+2*pp*qq;   r = g_AnaRes2(u+1,5:8);   Q11 = g_AnaRes2(u+1,10)*180/pi;   w2 = g_AnaRes2(u+1,11);      u = 4;   for m = 1:pp      for n = 1:qq         u = u+1; mx(m,n,:) = g_AnaRes2(u,:);         u = u+1; my(m,n,:) = g_AnaRes2(u,:);      end      end   min1 = (mx(1,1,i)-ptx)^2 + (my(1,1,i)-pty)^2;   for m = 1:pp      for n = 1:qq         min2 = (mx(m,n,i)-ptx)^2 + (my(m,n,i)-pty)^2;         if min2 <= min1            min1 = min2;            nxg = m;            nyg = n;         end      end   end   if isempty(nxg)      return   end   pt= [ mx(nxg,nyg,i) my(nxg,nyg,i) ]; 	r6=sqrt((Bx(1)-mx(nxg,nyg,1))^2+(By(1)-my(nxg,nyg,1))^2);	beta=(180/pi)*atan2((my(nxg,nyg,1)-By(1)),(mx(nxg,nyg,1)-Bx(1)));   % color the slected points    b = findobj('tag','hr_cr_ani_axes');   handles = get(b,'userdata');   gridpt = handles(6:5+pp*qq);   for k = 1:pp*qq   	  if k == qq*(nxg-1)+nyg         set(gridpt(k),'color','g','linewidth' ,2);      else          set(gridpt(k),'color','k','linewidth' ,1);      end   end   % Update data: x, y, beta and r6 values on the screen   %   set(a,'userdata',handles);   set(h_betatxt,'string',num2str(beta),'userdata',beta);   set(h_r6txt,'string',num2str(r6),'userdata',r6);   set(h_anal,'Enable','on');   case 'Analysis'   a = findobj('Tag','CR Coupler Curve Animation Window');   UD=a.UserData;   h_betatxt = UD.hand(5);   h_r6txt = UD.hand(6);   beta = get(h_betatxt,'userdata');   r6 = get(h_r6txt,'userdata');   pp = UD.Dx;   qq = UD.Dy;   u = 4+2*pp*qq;   r = g_AnaRes2(u+1,5:8);   Q11 = g_AnaRes2(u+1,10)*180/pi;   w2 = g_AnaRes2(u+1,11);   rr = [r r6];   fourbar_ana('initialize',rr,beta,Q11,w2,2,1,1,-1,2);case 'SetSpeed'nChangeSpeed = r(1);   case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','CR Coupler Curve Animation Window');   UD=a.UserData;   h_status = UD.hand(7);   set(UD.hand(3),'Enable','off');   set(UD.hand(4),'Enable','off');      nAnimationFlag = 1;	nChangeSpeed = 0;   UD.nAni = nAnimationFlag;   set(a,'userdata',UD);   set(h_status,'string','');   hr_cr_animation('Animation');   case 'Stop'   if  isempty(findobj('Tag','CR Coupler Curve Animation Window'))   	return;      end   a = findobj('Tag','CR Coupler Curve Animation Window');   UD=a.UserData;   handles = get(a,'userdata');   h_status = UD.hand(7);   nAnimationFlag = 0;   UD.nAni = nAnimationFlag;   set(a,'userdata',UD);   set(UD.hand(3),'Enable','on');   set(UD.hand(4),'Enable','off');   set(h_status,'string','Click on the desired coupler point, then start the analysis by clicking on the analysis button');    pp = UD.Dx;   qq = UD.Dy;      % retrieve the handles od gridpoint so that the buttondownfcn can be specified.   % That function is that whenever those gridpoints are pressed, call 'rotate' function to    % calculate the point position   b = findobj('tag','hr_cr_ani_axes');   handles = get(b,'userdata');   gridpoint = handles(6:5+pp*qq);   gridline = handles(6+pp*qq:5+2*pp*qq);   set([gridpoint gridline],...     'buttondownfcn','hr_cr_animation(''Set Calls'');hr_cr_animation(''Rotate'')');case 'Return'   hr_cr_animation('Stop');   if ~isempty(findobj('Tag','hr_crankrocker_dsgn'))      	b = findobj('Tag','hr_crankrocker_dsgn');      figure(b);      if ~isempty(findobj('Tag','Fourbar Analysis Window'))            b = findobj('Tag','Fourbar Analysis Window');         close(b);      end    	b = findobj('Tag','CR Coupler Curve Animation Window');        	close(b);   else     	return;         endend%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig()StdColor = get(0,'DefaultUIcontrolBackgroundColor');bgframe = StdColor;bgedit = [1 1 1];bgtext = bgframe;ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','Pixels', ...   'Color',[0.8 0.8 0.8], ...   'Name','CR Coupler Curve Animation Window', ...   'NumberTitle','off', ...   'Position',FigPos, ...   'Tag','CR Coupler Curve Animation Window');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...	'Position',[0.0096 0.1114 0.2981 0.0841], ...   'Style','frame', ...   'Tag','Frame_angle');b = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...	'Position',[0.3115 0.1114 0.1596 0.0841], ...   'Style','frame', ...   'Tag','Frame_speed');b = uicontrol('Parent',a, ...   'Units','normalized', ...   'ListboxTop',0, ...	'Position',[0.4769 0.1114 0.5058 0.0841], ...   'Style','frame', ...   'Tag','Frame_pushbutton');b = uicontrol('Parent',a, ...   'Units','normalized', ...   'ListboxTop',0, ...	'Position',[0.0096 0.0136 0.9769 0.0886], ...   'Style','frame', ...   'Tag','Frame_status');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axes%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-------Reference axisb = axes('Parent',a, ...   'Box','on', ...   'Color',[1 1 1], ...   'Position',[0.00625 0.2023 0.97917 0.7886], ...   'XColor',[0 0 0], ...   'XGrid','off', ...   'XTick',[],...   'YColor',[0 0 0], ...   'YGrid','off', ...   'YTick',[], ...   'ZColor',[0 0 0], ...   'ZGrid','off', ...   'ZTick',[]);   b = axes('Parent',a, ...   'Box','off', ...   'DataAspectRatio',[1 1 1],...   'CameraUpVector',[0 1 0], ...   'CameraUpVectorMode','manual', ...   'Position',[0.00625 0.2023 0.97917 0.7886], ...   'Tag','hr_cr_ani_axes');axis off;   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...   'CallBack','hr_cr_animation(''Start'')', ...   'Position',[0.610 0.1295 0.12 0.05], ...   'String','Start', ...   'Tag','start_button');h_anal = uicontrol('Parent',a, ...   'Units','normalized', ...   'CallBack','hr_cr_animation(''Analysis'')', ...   'Enable','off', ...	'Position',[0.486 0.1295 0.12 0.05], ...   'String','Analysis', ...   'Tag','analysis_button');h_stop = uicontrol('Parent',a, ...   'Units','normalized', ...   'CallBack','hr_cr_animation(''Stop'')', ...   'Position',[0.734 0.1295 0.12 0.05], ...   'String','Stop', ...   'Userdata',1,...   'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...   'CallBack','hr_cr_animation(''Return'')', ...   'Position',[0.857 0.1295 0.12 0.05], ...   'String','Return', ...   'Tag','return_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.3212 0.1523 0.0808 0.0386], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_cr_animation(''SetSpeed'',0.707);', ...   'Position',[0.3145 0.1182 0.0735 0.034], ... 	'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_cr_animation(''SetSpeed'',1.414);', ...   'Position',[0.389 0.1182 0.072 0.034], ...   'String','-', ... 	'Tag','Minus_button');    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% text controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_status = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...   'Position',[0.0155 0.0301 0.95 0.067], ...   'String','', ...   'Horiz','left', ...   'Style','text');  b = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...   'Position',[0.0212 0.1525 0.125 0.03636], ...   'String','beta angle', ...   'Horiz','left', ...   'Style','text');  h_betatxt = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...	'Position',[0.1865 0.1513 0.1192 0.036], ...   'String','', ...   'Horiz','left', ...   'Style','text');  b = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...	'Position',[0.0212 0.1182 0.1692 0.0341], ...   'String','coupler radius', ...   'Horiz','left', ...   'Style','text');  h_r6txt = uicontrol('Parent',a, ...   'Units','normalized', ...   'BackgroundColor',bgtext, ...	'Position',[0.1865 0.1159 0.1192 0.036], ...   'String','', ...   'Horiz','left', ...   'Style','text');  drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;i = 1;timesink = 0.1;handles = [h_start h_stop h_return h_anal h_betatxt h_r6txt h_status];set( a, 'Userdata', struct('hand',handles,'nAni',nAnimationFlag,'inum',i,'tsink',timesink));%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] =  CalcResult( r,tl0,tv0,nhgp0,nvgp0,w2,xp,yp )r1 = r(1);r2 = 1;r3 = r(2);r4 = r(3);nvgp=nvgp0;nhgp=nhgp0;nvgpoc=nvgp+1;tl=tl0;tv=tv0;cxrc=(1/2)*r3;spacx=(1/(nhgp-1))*tl;spacy=(1/(nvgp-1))*tv;cxmin=cxrc-(tl/2);cxmax=cxrc+(tl/2);cymin=-(nvgpoc/2)*spacy;cymax=(nvgpoc/2)*spacy;	% Locate the first position of the linkage.  In this position, the crank % and frame are aligned so that r1, r2, r3 and r4 form a triangle.  Angle% AA is between r3 and r4 and BB is between r4 and the r1.AA=acos(((r3.^2)+(r4.^2)-((r1+r2).^2))/(2*r4*r3));BB=asin((r3/(r1+r2))*sin(AA));CC=AA+BB;ax=r2*cos(CC);ay=r2*sin(CC);	% Set the first position so that the coupler is horizontal.  The left end % is at b1 and the right end is at c1.  The pivot for r4 is at d1.  The % pivot at the base of r2 is at a1 (0,0).b1=[ax ay];c1=[(r3+ax) ay];d1x=-r1*cos(CC);d1y=-r1*sin(CC);d1=[d1x d1y];a1=[0 0];% Locate the coordinates of the bushing and revolute joints.bush1=bushing(r2/10,0,0,20,0);cir1=circle2(r2/10,0,0,20);bush2=bushing(r2/10,(-r1*cos(CC)),(-r1*sin(CC)),20,0);cir2=circle2(r2/10,(-r1*cos(CC)),(-r1*sin(CC)),20);		gxstart=cxmin-spacx;for i=1:nhgp	xg(i)=b1(1)+gxstart+(i*spacx);endfor i=1:nvgp	ygy(i)=b1(2)+cymin+(i*spacy);endpp = xp(2)-xp(1)+1;qq = yp(2)-yp(1)+1;xgg = xg(xp(1):xp(2));ygg = ygy(yp(1):yp(2));%n = size(xg);%m = yp(2)-yp(1)+1;%yg1 = yp;%   yg1 = ygy(5);%   yg=yg1*ones(size(xg));%	xga=xg;%	yga=yg;%	xg=xga-ax;%	yg=yga-ay;%   yg=ygy(5)*ones(size(xgg));%   xg=xgg-ax;%   yg=yg-ay;   xgg=xgg-ax;   ygg=ygg-ay;% Locate each coupler point by rr and ppheta%rr=sqrt((xg.^2)+(yg.^2));%ppheta=atan2(yg,xg);for m = 1:pp   for n = 1:qq      rr(m,n)=sqrt((xgg(m)^2)+(ygg(n)^2));      ppheta(m,n)=atan2(ygg(n),xgg(m));   endend   % Locate the first position of the crankQ1=(180/pi)*(pi+CC);Q11=pi+CC;gp=1; 	        % Define constantsi=0;d2r=pi/180;r2d=180/pi;mode=-1;dt=5;%nhgpa=nhgp;%nvgpa=nvgp;nvgp=1;Qs=Q1;if Qs<0   Qs=Qs+180;elseif Qs>180   Qs=Qs-180;end% Loop to analyze the linkage for one cyclefor Q21 = Qs:dt:360+Qs;   i=i+1;   Q2 = Q21*d2r;% Call fourbar function to compute the position   para = fourbar(r1,r2,r3,r4,Q21,w2,0,mode,Q1,2);    Q3=para(7);   Q33(i)=Q3;   Q4=para(8);   Q44(i)=Q4;   w33(i)=para(11);   w44(i)=para(12);   assem=para(29);			% Store position information in matrices.   Bx(i)= para(17);   By(i)= para(18);   Cx(i)= para(19);   Cy(i)= para(20);   vbx(i)=para(21);   vby(i)=para(22);   vcx(i)=para(23);   vcy(i)=para(24);   %   for j=1:nhgp   pp = xp(2)-xp(1)+1;%   for j=1:pp%	mx(j,i)=Bx(i)+rr(j)*cos((para(7)*pi/180)+ppheta(j));%	my(j,i)=By(i)+rr(j)*sin((para(7)*pi/180)+ppheta(j));%   endfor m=1:pp   for n= 1:qq 	  mx(m,n,i)=Bx(i)+rr(m,n)*cos((para(7)*pi/180)+ppheta(m,n));	  my(m,n,i)=By(i)+rr(m,n)*sin((para(7)*pi/180)+ppheta(m,n));   end   end   Q22(i) = Q21;enditotal=i;%r6=sqrt((Bx(1)-mx(gp,1)).^2+(By(1)-my(gp,1)).^2);%beta=(180/pi)*atan2((my(gp,1)-By(1)),(mx(gp,1)-Bx(1)));width=0.95;height=0.95;%xmina=min([min(min(mx(gp:(gp+nhgp-1),:))) min(Bx) min(Cx)... %      d1(1) min(bush1(:,1)) min(bush2(:,1)) -tl/2]);%xmaxa=max([max(max(mx(gp:(gp+nhgp-1),:))) max(Bx) max(Cx)... %      d1(1) max(bush1(:,1)) max(bush2(:,1)) tl/2]);%ymina=min([min(min(my(gp:(gp+nhgp-1),:))) min(By) min(Cy)...%%		d1(2) min(bush1(:,2)) min(bush2(:,2))]);%ymaxa=max([max(max(my(gp:(gp+nhgp-1),:))) max(By) max(Cy)...%		d1(2) max(bush1(:,2)) max(bush2(:,2))]);xmina=min([min(min(mx(1:pp,1,:))) min(min(mx(1,1:qq,:))) min(Bx) min(Cx)...       d1(1) min(bush1(:,1)) min(bush2(:,1)) -tl/2]);xmaxa=max([max(max(mx(1:pp,1,:))) max(max(mx(1,1:qq,:))) max(Bx) max(Cx)...       d1(1) max(bush1(:,1)) max(bush2(:,1)) tl/2]);ymina=min([min(min(my(1:pp,1,:))) min(min(my(1,1:qq,:))) min(By) min(Cy)...		d1(2) min(bush1(:,2)) min(bush2(:,2))]);ymaxa=max([max(max(my(1:pp,1,:))) max(max(my(1,1:qq,:))) max(By) max(Cy)...		d1(2) max(bush1(:,2)) max(bush2(:,2))]);rangex=xmaxa-xmina;rangey=ymaxa-ymina;xmin=xmina-0.01*rangex;xmax=xmaxa+0.01*rangex;ymin=ymina-0.01*rangey;ymax=ymaxa+0.01*rangey;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin=values(1);xmax=values(2);ymin=values(3);ymax=values(4);res = zeros( 15, itotal);  i = 0;i = i+1; res( i,: ) = Bx;i = i+1; res( i,: ) = By; i = i+1; res( i,: ) = Cx;i = i+1; res( i,: ) = Cy;for m = 1:pp    for n = 1:qq      i = i+1; res( i,: ) = mx(m,n,:);      i = i+1; res( i,: ) = my(m,n,:);   end   endi = 4+2*pp*qq;res( i+1,1 ) = xmin;res( i+1,2 ) = xmax;res( i+1,3 ) = ymin;res( i+1,4 ) = ymax;res( i+1,5:8 ) = [r1 1 r3 r4];res( i+1,9 ) = CC;res( i+1,10 ) = Q11;res( i+1,11 ) = w2;   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function CreateMechanismHandles( handle,r1,r2,CC,mx,my,xmin,xmax,ymin,ymax,pp,qq,...         itotal)axes(handle);hdls = get(handle,'userdata');if ~isempty(hdls)   if hdls ~= 0      delete(hdls);   end   endaxis([xmin, xmax, ymin, ymax]);bush1=bushing(r2/10,0,0,20,0);cir1=circle2(r2/10,0,0,20);bush2=bushing(r2/10,(-r1*cos(CC)),(-r1*sin(CC)),20,0);cir2=circle2(r2/10,(-r1*cos(CC)),(-r1*sin(CC)),20);		joint1=line('xdata', [], 'ydata', [], 'marker', 'o','markersize', 6, 'color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','markersize', 6, 'color', 'k');crank=line('xdata', [], 'ydata' ,[], 'linewidth',2, 'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth',2, 'color', 'k');rocker=line('xdata', [], 'ydata' ,[], 'linewidth',2, 'color', 'k');busho1=line('xdata',bush1(:,1),'ydata',bush1(:,2),'linewidth',1,'linestyle','-','color','r');circo1=line('xdata',cir1(:,1),'ydata',cir1(:,2),'linewidth',1,'linestyle','-','color','r');busho2=line('xdata',bush2(:,1),'ydata',bush2(:,2),'linewidth',1,'linestyle','-','color','r');circo2=line('xdata',cir2(:,1),'ydata',cir2(:,2),'linewidth',1,'linestyle','-','color','r');k = 1;for m = 1:pp   for n = 1:qq      gridline(k) =line('xdata',[],'ydata',[],'linewidth',1,'linestyle','-','color','r');		for ipoints=1:itotal			gridline2(k,ipoints)=line('xdata',[],'ydata',[],'linewidth',1,'linestyle','-','color','r');				end	      gridpoint(k)=line('xdata',[],'ydata',[],'marker','o','linewidth',1,'color','k');      k = k+1;   end   end% Draw the coupler curvesk = 1;for m = 1:pp   for n = 1:qq	   for ipoints =1:itotal		   	if ipoints <itotal		   		msdx=mx(m,n,ipoints);				midx=mx(m,n,ipoints)+(mx(m,n,ipoints+1)-mx(m,n,ipoints))/2;				msdy=my(m,n,ipoints);				midy=my(m,n,ipoints)+(my(m,n,ipoints+1)-my(m,n,ipoints))/2;			end			if ipoints ==itotal		   		msdx=mx(m,n,ipoints);				midx=mx(m,n,ipoints)+(mx(m,n,1)-mx(m,n,ipoints))/2;				msdy=my(m,n,ipoints);				midy=my(m,n,ipoints)+(my(m,n,1)-my(m,n,ipoints))/2;			end							 set(gridline2(k,ipoints),'xdata',[msdx midx],'ydata',[msdy midy]);		end        k = k+1;      end   endhdls = [joint1 joint2 crank coupler rocker gridpoint gridline busho1 busho2 circo1 circo2]; set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition( link,i,Bx,By,Cx,Cy,r1,Q11,mx,my,pp,qq)joint1 = link(1);joint2 = link(2);crank = link(3);coupler = link(4);rocker = link(5);gridpoint = link(6:5+pp*qq);set(joint1,'xdata', Bx(i), 'ydata',By(i));set(joint2,'xdata', Cx(i), 'ydata',Cy(i));set(crank,'xdata',[0 Bx(i)],'ydata', [0 By(i)]);set(rocker,'xdata',[(r1*cos(Q11)) Cx(i)],'ydata', [(r1*sin(Q11)) Cy(i)]);set(coupler,'xdata', [Bx(i) Cx(i)],'ydata', [By(i) Cy(i)]);k = 1;for m = 1:pp   for n = 1:qq      set(gridpoint(k),'xdata',mx(m,n,i),...         'ydata',my(m,n,i));      k = k+1;   end   end
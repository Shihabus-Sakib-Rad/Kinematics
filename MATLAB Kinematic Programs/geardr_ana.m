function geardr_ana(Action,Dp,ar,br,phi,rt,rf,N,ag,ptregion)% the contents of the userdata of Analysis Window % handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1% handles(18) = handle of reference axe for axe2% handles(21) = handle of submenu 'Load'% handles(22) = handle of submenu 'Save'% handles(23) = handle of 'Return' button% handles(24) = handle of speed button h_plus% handles(25) = handle of L1% handles(26) = handle of L2% each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler block];      global strFigType global nAnimationFlagglobal g_AnaResglobal nChangeSpeed% Define the axes for the first graph (input/output angle graph)if nargin==0 && isempty(findobj('Tag','geardr Analysis Window')),  % geardr_ana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','geardr Analysis Window'))      % geardr_ana is already open   Action='None';elseif nargin== 1 && ~isempty(findobj('Tag','geardr Analysis Window')) && strcmp( Action, 'initialize'), % cogana is already open	% Recalculate the value, and then redraw	Action='None';endswitch Actioncase 'initialize'   if  isempty(findobj('Tag','geardr Analysis Window'))         LocalOpenFig;      nAnimationFlag = 0;   else  		geardr_ana('None');   end      if nargin < 10   Dp = 10;   ar = 1.25;   br = 1;   phi = 20;   rt = 0.02;   rf = 0.04;   N = 10;   ag = 1;   ptregion = [30 30 40 30 30];   ptregion1 = ptregion(1);   ptregion2 = ptregion(2);   ptregion3 = ptregion(3);   ptregion4 = ptregion(4);   ptregion5 = ptregion(5);   end      if exist('nAnimationFlag')       if nAnimationFlag == 1      	geardr_ana('Stop');         return;      end   end        g_AnaRes = CalcResult( Dp,ar,br,phi,rt,rf,N,ag,ptregion);   DrawAnalysisWindow;   geardr_ana('ShowFigure');%   geardr_ana('Start');    	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	%	Change Figure Call Back Function	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'ChangeFigure'   DrawAnalysisWindow;   geardr_ana('ShowFigure');   case 'SetSpeed'   nChangeSpeed = Dp;   case 'ChangeFigureNo'   nTotalFigNum = 2;   a = findobj('Tag','geardr Analysis Window');   handles = get( a,'userdata');   nFigNum = get(handles(1),'value');   % to enable or disable some Uicontrols   for i = 1: nTotalFigNum	 	set(handles(i+1),'Enable','off');	end            for i = 1:nFigNum,	 	set(handles(i+1),'Enable','on');	end      DrawAnalysisWindow;   geardr_ana('ShowFigure');   case 'Animation'   case 'ShowFigure'   a = findobj('Tag','geardr Analysis Window');   handles = get( a,'userdata');   nFigNum = get(handles(1),'value');      [ m, n ] = size( g_AnaRes);      i = m;   xmin1 = g_AnaRes(i,1);    xmax1 = g_AnaRes(i,2);    ymin1 = g_AnaRes(i,3);    ymax1 = g_AnaRes(i,4);    xmin2 = g_AnaRes(i,5);    xmax2 = g_AnaRes(i,6);    ymin2 = g_AnaRes(i,7);    ymax2 = g_AnaRes(i,8);    lengthtooth = g_AnaRes(i,9);   lengthgear = g_AnaRes(i,10);   lengthtoothb = g_AnaRes(i,11);   lengthgearb = g_AnaRes(i,12);   i = 0;   i = i+1; g1x= g_AnaRes(i,1:lengthtooth);   i = i+1; g1y= g_AnaRes(i,1:lengthtooth);   i = i+1; g2x= g_AnaRes(i,1:lengthgear);   i = i+1; g2y= g_AnaRes(i,1:lengthgear);   i = i+1; pc1x= g_AnaRes(i,1:lengthtoothb);   i = i+1; pc1y= g_AnaRes(i,1:lengthtoothb);   i = i+1; pc2x= g_AnaRes(i,1:lengthgearb);   i = i+1; pc2y= g_AnaRes(i,1:lengthgearb);   if nFigNum > 0      nType = get(handles(2),'value');      axes(handles(6));      if nType == 1         CreateToothPlot(handles(6),pc1x,pc1y,g1x,g1y,xmin1,xmax1,ymin1,ymax1);      else % nType == 2			CreateGearPlot( handles(6),pc2x,pc2y,g2x,g2y,xmin2,xmax2,ymin2,ymax2);      end   end         if nFigNum > 1      nType = get(handles(3),'value');      axes(handles(7));      if nType == 1         CreateToothPlot(handles(7),pc1x,pc1y,g1x,g1y,xmin1,xmax1,ymin1,ymax1);      else % nType == 2			CreateGearPlot( handles(7),pc2x,pc2y,g2x,g2y,xmin2,xmax2,ymin2,ymax2);      end	end            drawnow;   a = findobj('Tag','geardr Analysis Window');      set(a,'Userdata',handles);   case 'None'	figure( findobj('Tag','geardr Analysis Window'));	% Bring the figure to front, if it already existscase 'Close'   geardr_ana('Stop');   a = findobj('Tag','geardr Analysis Window');      close(a);case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end     case 'Stop'   if  isempty(findobj('Tag','geardr Analysis Window'))   	return;      end   case 'Return'   geardr_ana('Stop');   if ~isempty(findobj('Tag','geardr_dsgn'))     		b = findobj('Tag','geardr_dsgn');      figure(b);   	b = findobj('Tag','geardr Analysis Window');   	  	close(b);   else   	return;         endcase 'GetFile'   % Get the file name using the UIGETFILE   [sFileName sFilePath] = uigetfile('*.dat','Load File');      if sFileName == 0 && sFilePath == 0      return;   end         % Combine the path and file name together   sTemp = strcat( sFilePath, sFileName );	% get the size to erase the '.dat' extension      sz  = size(sFileName);	% load the data file      load(sTemp);	% assign the parameter to a variable   Parameter = eval(sFileName(1:(sz(2)-4)));      a = findobj('Tag','geardr Analysis Window');      handles = get(a,'userdata');      if length(Parameter) == 5	   nFigNum  = Parameter(1);   	nType1 = Parameter(2);	   nType2 = Parameter(3);         	set(handles(1),'Value',nFigNum);   	set(handles(2),'Value',nType1);   	set(handles(3),'Value',nType2);            set(a,'userdata',handles);   	DrawAnalysisWindow;      geardr_ana('ShowFigure');   else      return;   end             case 'PutFile'   [sFileName sFilePath] = uiputfile('*.dat','Save As');      a = findobj('Tag','geardr Analysis Window');      handles = get(a,'userdata');      nFigNum  = get(handles(1),'Value');   nType1 = get(handles(2),'Value');	nType2 = get(handles(3),'Value');   ParameterData = [nFigNum; nType1; nType2];   %   sTemp = strcat( sFilePath, sFileName)   [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);   [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');   eval(strCmd);      end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow();a = findobj('Tag','geardr Analysis Window');handles = get(a,'userdata');h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);nFigNum=get(h_fignum,'Value');position = zeros( 2, 2, 4);position(1,1,:) = [0.05 0.15 0.9 0.83];position(2,1,:) = [0.25 0.58 0.5 0.41];position(2,2,:) = [0.25 0.148 0.5 0.41];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:9,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 17:20,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 1:nFigNum,	set(handles(i+1),'Enable','on');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 1	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...   'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;end	set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig();strFigType = [ ...      'gear tooth';...      'whole gear'];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','Pixels', ...		'Color',[0.8 0.8 0.8], ...      'Name','geardr Analysis Window', ...       'NumberTitle','off', ...		'Position',FigPos, ...	 	'Tag','geardr Analysis Window');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...   'Position',[0.01731 0.020 0.77 0.1117], ...   'Style','frame', ...	'Tag','Frame2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.7808 0.020 0.2038 0.1117], ...   'Style','frame', ...   'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');h_load = uimenu('Parent',b, ...	'Callback','geardr_ana(''GetFile'')', ...	'Label','Load', ...	'Tag','submenu_load');h_save = uimenu('Parent',b, ...	'Callback','geardr_ana(''PutFile'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...	'Position',[0.03 0.07 0.095 0.03911], ... 	'String','No. of figs ', ...	'Style','text', ...	'Tag','StaticText2');h_fignum = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','geardr_ana(''ChangeFigureNo'');', ...   'Position',[0.135 0.0837 0.10 0.03538], ...   'String',['1';'2'], ...   'Style','popupmenu', ...	'Tag','FigNumber', ... 	'Value',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.03 0.02793 0.08 0.03910], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','geardr_ana(''SetSpeed'',0.707);', ...   'Enable','off', ...   'Position',[0.1327 0.02955 0.04038 0.03182], ...    'String','+', ...	'Tag','Plus_button');h_minus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','geardr_ana(''SetSpeed'',1.414);', ...   'Enable','off', ...   'Position',[0.2 0.02955 0.04038 0.03182], ...   'String','-', ... 	'Tag','Minus_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.07821 0.06262 0.03724], ...   'String','Fig 1', ...	'Style','text', ... 	'Tag','StaticText1'); b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.08007 0.06262 0.03724], ...   'String','Fig 2', ...	'Style','text', ...	'Tag','StaticText1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup the Popup menu contents for Figure Type Selection 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_fig1 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','geardr_ana(''ChangeFigure'',1);', ...   'Position',[0.3077 0.0837 0.19256 0.03538], ...   'String',strFigType, ... 	'Style','popupmenu', ...	'Tag','Fig1', ...	'Value',1);h_fig2 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','geardr_ana(''ChangeFigure'',2);', ...   'Position',[0.5692 0.0837 0.19256 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig2', ...	'Value',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','geardr_ana(''Start'')', ...   'Position',[0.7942 0.07727 0.08577 0.04318], ...   'Enable','off', ...   'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','geardr_ana(''Stop'')', ...	'Position',[0.8854 0.07727 0.08577 0.04318], ...    'Enable','off', ...   'String','Stop', ...   'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','geardr_ana(''Return'')', ...	'Position',[0.7942 0.02891 0.1773 0.04318], ...    'String','Return', ...   'Tag','return_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(10) = nAnimationFlag;% initial animation starting indexhandles(15) = 1;% initial timesink valuehandles(16) = 0.1;handles(21) = h_load;handles(22) = h_save;handles(23) = h_return;handles(24) = h_plus;set( a, 'Userdata', handles);drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] = CalcResult(Dp,ar,br,phi,rt,rf,N,ag,ptregion);ptregion1 = ptregion(1);ptregion2 = ptregion(2);ptregion3 = ptregion(3);ptregion4 = ptregion(4);ptregion5 = ptregion(5);% Compute basic parameter values.	A=ar/Dp;B=br/Dp;p=pi/Dp;r=p*N/(pi*2);ro=r+ag/Dp;r2d=180/(4*atan(1.0));d2r=1/r2d;phir=phi*d2r;gamma=pi/2-phir;lt=pi/(2*Dp)-2*A*tan(phir)-2*rt*tan(gamma/2);lb=pi/(2*Dp)-2*B*tan(phir)-2*rf*tan(gamma/2);% Check for negative values for lt and lb.  If either is negative,% set the value to zero and compute the corresponding radius.if lt < 0	lt=0;	rt=(pi/(2*Dp)-2*A*tan(phir))/(2*tan(gamma/2));endif lb < 0	lb=0;	rf=(pi/(2*Dp)-2*B*tan(phir))/(2*tan(gamma/2));end		% Determine a set of points in region Ibeta=0.0;i=0;dbeta=1/ptregion1;for j=1:1:ptregion1	i=i+1;		beta=beta+dbeta;	rack(1,i)=beta*lt/2;	rack(2,i)=A;	n(1,i)=0;	n(2,i)=1.0;end	% Determine a set of points for region IIbeta = 0.0;dbeta=1/ptregion2;for j=1:1:ptregion2	i=i+1;	beta=beta+dbeta;	rack(1,i)=lt/2+rt*sin(beta*gamma);	rack(2,i)=A-rt*(1-cos(beta*gamma));	n(1,i)=sin(beta*gamma);	n(2,i)=cos(beta*gamma);end	% Determine a set of points for region IIIbeta = 0.0;dbeta=1/ptregion3;for j=1:1:ptregion3	i=i+1;	beta=beta+dbeta;	sgamma=sin(gamma);	cgamma=cos(gamma);	rack(1,i)=(1-beta)*(lt/2+rt*sgamma)+beta*(pi/(2*Dp)-lb/2-rf*sgamma);	rack(2,i)=(1-beta)*(A-rt*(1-cgamma))+beta*(-B+rf*(1-cgamma));	n(1,i)=cos(phir);	n(2,i)=sin(phir);end% Determine a set of points for region IVbeta = 0.0;dbeta=1/ptregion4;for j=1:1:ptregion4	i=i+1;	beta=beta+dbeta;	somb=sin((1-beta)*gamma);	comb=cos((1-beta)*gamma);	rack(1,i)=pi/(2*Dp)-lb/2-rf*somb;	rack(2,i)=-B+rf*(1-comb);	n(1,i)=somb;	n(2,i)=comb;end% Determine a set of points for region Vbeta = 0.0;dbeta=1/ptregion5;for j=1:1:ptregion5	i=i+1;	beta=beta+dbeta;	somb=sin((1-beta)*gamma);	comb=cos((1-beta)*gamma);	rack(1,i)=pi/(2*Dp)-lb/2*(1-beta);	rack(2,i)=-B;	n(1,i)=0;	n(2,i)=1;enditotal = i;% Define the basic gear profilefor i=1:1:itotal	theta=(rack(1,i)*n(2,i)-rack(2,i)*n(1,i))/(r*n(2,i));	geart(1,i)=-cos(theta)*(rack(1,i)-r*theta)+sin(theta)*(rack(2,i)-r);	geart(2,i)=-sin(theta)*(rack(1,i)-r*theta)-cos(theta)*(rack(2,i)-r);	ang(i)=theta;end% Define the pitch circle arcmaxang=max(ang);minang=min(ang);dk=(maxang-minang)/20;i=0;for k=minang:dk:maxang	i=i+1;	plx(i)=r*sin(k);	ply(i)=r*cos(k);end	% Rotate the coordinate system by -pi/N so that the y axis is along the % centerline of the gear tooth instead of the centerline of the gap.beta=-pi/N;for i=1:1:itotal	xx(i)=geart(1,i)*cos(beta)-geart(2,i)*sin(beta);	yy(i)=geart(1,i)*sin(beta)+geart(2,i)*cos(beta);end% Test for the undercut points which cannot be on the gearjstop=itotal+1;istop=itotal+1;for i = 1:1:itotal-2	for j=i+1:1:itotal-1		if istop==itotal+1 && jstop==itotal+1			ra(1)=xx(i);			ra(2)=yy(i);			rb(1)=xx(i+1);			rb(2)=yy(i+1);			rc(1)=xx(j);			rc(2)=yy(j);			rd(1)=xx(j+1);			rd(2)=yy(j+1);			rba=rb-ra;			rca=rc-ra;			rac=ra-rc;			rda=rd-ra;			rdc=rd-rc;			rbc=rb-rc;			rbd=rb-rd;			Aabc=rba(1)*rca(2)-rba(2)*rca(1);			Aabd=rba(1)*rda(2)-rba(2)*rda(1);			Acda=rdc(1)*rac(2)-rdc(2)*rac(1);			Aadb=rda(1)*rba(2)-rda(2)*rba(1);			Acdb=rdc(1)*rbc(2)-rdc(2)*rbc(1);			test1=Aabc*Aabd;			test2=Acda*Acdb;				% Check for the intersection of two line segments			if test1<0 && test2<0 				istop=i;				jstop=j+1;				alpha=abs(Acdb)/(abs(Acda)+abs(Acdb));				re(1)=alpha*ra(1)+(1-alpha)*rb(1);				re(2)=alpha*ra(2)+(1-alpha)*rb(2);				j=itotal;				i=itotal;			end			end			endend% If two lines intersect, delete the points in the undercut region.j=0;for i=1:1:itotal	if i<=istop || i >= jstop		j=j+1;		geart(1,j)=xx(i);		geart(2,j)=yy(i);		if i==istop			j=j+1;			geart(1,j)=re(1);			geart(2,j)=re(2);		end	endenditotal=j;% Check that the points do not extend beyond the addendum circle (ro).j=0;rtest1=0;istop='n';i=0;for i=1:1:itotal	if istop=='n'		rtest2=sqrt(geart(1,i)^2+geart(2,i)^2);		if rtest2<=ro			j=j+1;			gear(1,j)=geart(1,i);			gear(2,j)=geart(2,i);			xx(j)=gear(1,j);			yy(j)=gear(2,j);		end		% If the points extend beyond the addendum circle, discard the % points beyond ro and find the intersection of the gear with the % ro circle.				if rtest2>ro			alpha=(ro-rtest1)/(rtest2-rtest1);			j=j+1;			gear(1,j)=geart(1,i-1)+alpha*(geart(1,i)-geart(1,i-1));			gear(2,j)=geart(2,i-1)+alpha*(geart(2,i)-geart(2,i-1));			xx(j)=gear(1,j);			yy(j)=gear(2,j);			istop='y';		end		rtest1=rtest2;	endend% if the addendum is reached replace the points beyond the % addendum with points on a circle arc.if j<itotal	beta = atan2(gear(1,j), gear(2,j));	dbeta=beta/5;	betak=beta;	for k=1:1:5		j=j+1;		betak=betak-dbeta;		sbetak=sin(betak);		cbetak=cos(betak);		gear(1,j)=ro*sbetak;		gear(2,j)=ro*cbetak;	endendjtotal=j;% Reflect the points to draw the rest of the gear toothfor i=1:1:jtotal-1	j=j+1;	gear(1,j)=-gear(1,jtotal-i);	gear(2,j)=gear(2,jtotal-i);end	itotal=j;	% Print the gear tooth coordinatesg_AnaRes = [j gear(1,:) gear(2,:)];for i=1:1:itotal	xtemp(i)=gear(1,i);	ytemp(i)=gear(2,i);endg1x = xtemp;g1y = ytemp;pc1x = plx;pc1y = ply;width = 0.95;height = 0.95;xmax=max(xtemp);xmin=min(xtemp);ymax=max(ytemp);ymin=min(ytemp);xrange=xmax-xmin;yrange=ymax-ymin;xmin=xmin-0.05*xrange;xmax=xmax+0.05*xrange; ymin=ymin-0.05*yrange; ymax=ymax+0.05*yrange;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin1=values(1);xmax1=values(2);ymin1=values(3);ymax1=values(4);% Find the coordinates of the teeth on the rest of the gear.dtheta=2*pi/N;%j=itotal;for i=1:1:N-1	theta = i*dtheta;	sth = sin(theta);	cth = cos(theta);	for k=1:1:itotal		j=j+1;		gear(1,j)=gear(1,k)*cth-gear(2,k)*sth;		gear(2,j)=gear(1,k)*sth+gear(2,k)*cth;	endenditotal=j;% Compute the pitch circle for the whole gearq=0;dq=-pi/90;for i=1:1:180	q=q+dq;	plx(i)=r*sin(q);	ply(i)=r*cos(q);endfor i=1:1:itotal	xtemp(i)=gear(1,i);	ytemp(i)=gear(2,i);endg2x = xtemp;g2y = ytemp;pc2x = plx;pc2y = ply;xmax=max(xtemp);xmin=min(xtemp);ymax=max(ytemp);ymin=min(ytemp);xrange=xmax-xmin;yrange=ymax-ymin;xmin=xmin-0.05*xrange;xmax=xmax+0.05*xrange; ymin=ymin-0.05*yrange; ymax=ymax+0.05*yrange;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin2=values(1);xmax2=values(2);ymin2=values(3);ymax2=values(4);lengthtooth = length(g1x);lengthtoothb = length(pc1x);lengthgear = length(g2x);lengthgearb = length(pc2x);itotal = max([lengthtooth lengthgear lengthtoothb lengthgearb]);res = zeros( 9, itotal);i = 0;i = i+1; res( i,1:lengthtooth ) = g1x;i = i+1; res( i,1:lengthtooth ) = g1y;i = i+1; res( i,1:lengthgear ) = g2x;i = i+1; res( i,1:lengthgear ) = g2y;i = i+1; res( i,1:lengthtoothb ) = pc1x;i = i+1; res( i,1:lengthtoothb ) = pc1y;i = i+1; res( i,1:lengthgearb ) = pc2x;i = i+1; res( i,1:lengthgearb ) = pc2y;i = i+8;res( i,1:4 ) = [xmin1 xmax1 ymin1 ymax1];res( i,5:8 ) = [xmin2 xmax2 ymin2 ymax2];res( i,9:12 ) = [lengthtooth lengthgear lengthtoothb lengthgearb];%res( i,25 ) = nposn;%res( i,26 ) = Cd;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateMechanismHandles( handle,pc2x,pc2y,pc3x,pc3y,Cd,xmin,xmax,ymin,ymax) axes(handle);%setup the aspect ratio of the mechanism to 1 set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;axis([xmin xmax ymin ymax]);% Determine the coordinates of gear 1 relative to the frame% as gear 1 rotates by phi through 2*g2angle.gearline1=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', [1,0,0]);gearpitchline1=line('xdata', [], 'ydata' ,[], 'linewidth',0.4,'color', 'k', 'linestyle', '-.');gearline2=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', [1,0,0]);gearpitchline2=line('xdata', [], 'ydata' ,[], 'linewidth',0.4,'color', 'k', 'linestyle', '-.');		 set(gearpitchline1, 'xdata',pc2x, 'ydata', pc2y);set(gearpitchline2, 'xdata',pc3x+Cd, 'ydata', pc3y);hdls=[ gearline1 gearline2 ];set( handle,'userdata', hdls);    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = SetMechanismPosition( links,i,g2xm,g2ym,g3xm,g3ym)gearline1 = links(1);gearline2 = links(2);   % Plot the meshing gearsset(gearline1, 'xdata', g2xm, 'ydata', g2ym);set(gearline2, 'xdata', g3xm, 'ydata', g3ym);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create the gear 1 tooth%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateToothPlot( handle,pcxtooth,pcytooth,gxtooth,gytooth,xmin,xmax,ymin,ymax)axes(handle);set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;axis([xmin xmax ymin ymax]);gearline=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', [1,0,0]);gearpitchline=line('xdata', [], 'ydata' ,[], 'linewidth',0.4,'color', 'k', 'linestyle', '-.');   % Plot the toothset(gearline, 'xdata', gxtooth, 'ydata', gytooth);set(gearpitchline, 'xdata', pcxtooth, 'ydata', pcytooth);drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create the whole gear% index 1 for gear 1 and index2 for gear 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateGearPlot( handle,pcx,pcy,gx,gy,xmin,xmax,ymin,ymax)axes(handle);set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;axis([xmin xmax ymin ymax]);gearline=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', [1,0,0]);gearpitchline=line('xdata', [], 'ydata' ,[], 'linewidth',0.4,'color', 'k', 'linestyle', '-.');origin=line('xdata', 0, 'ydata', 0,'color', 'r', 'marker', '+','markersize', 6);	% Plot the meshing gearsset(gearline, 'xdata', gx, 'ydata', gy);set(gearpitchline, 'xdata', pcx, 'ydata', pcy);drawnow;
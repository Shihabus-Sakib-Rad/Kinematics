function []=ShakeAnalysis(Action,Argument2)% shake.m% MATLAB program for balancing a slider-crank mechanism%Variables%   r1=frame length%   r2=crank length%   r3=coupler length%   r4=rocker length%   cpad=coupler angle (rad) (to point D2 from the rocker pin)%   Q1=frame angle (deg)%   Q11=frame angle (rad)%   Q2=crank angle (rad)%   Q21=crank angle (deg)%   Q22=crank angle (deg) (vector)%   Q3,Q33=coupler angle (deg)%   Q4,Q44=rocker angle (deg)%   w2=angular velocity of the crank (rad/sec)%   w22=w2 (vector)%   w33=angular velocity of the coupler (rad/sec)%   w44=angular velocity of the rocker (rad/sec)%   mode = assembly mode%   tt=number of cycles to animate%   dt=number of animation positions per revolution%   itotal=number of animation positions%   cycle=number of cycles as an integer%   bush1,bush2=x,y coordinates of the bushings%   cir1,cir2=x,y coordinates of the circles inside the bushings%   Bx,By=x,y coordinates of the crank pin%   Cx,Cy=x,y coordinates of the rocker pin%   Bx2,By2=x,y coordinates of the crank pointer%   Cx2,Cy2=x,y coordinates of the rocker pointer%   d2r,r2d=conversion factors between radians and degrees%   i=counting variable%	W2= weight of the crank%	R2= distance from crank pivot to crank CG%	W3= weight of the coupler%	R3= distance from coupler CG to point A%	W4= weight of the piston%	Wcb= counter balance weight%	g= acceleration of gravity%Graphics variables%   xmin,xmax,ymin,ymax=axes limits%   h1=handle on the first axes in the window (crank angle vs. slider displacement)%   h2=handle on the second axes in the window (crank angle vs. slider velocity)%   h3=handle on the third axes in the window (crank angle vs. input torque)%   h4=handle on the fourth axes in the window (linkage animation)%   displ=line representing the crank angle vs. rocker angle%   vel=line representing the crank angle vs. rocker velocity%   dbead=bead which follows the crank angle/slider displacement throughout animation%   vbead=bead which follows the crank angle/slider velocity throughout animation%   sbead=bead which follows the shaking force plot throughout animation%   bushy1=line representing the bushing at the crank hinge%   circ1=line representing the circle inside the bushing at the crank hinge %   joint1=line representing the joint at the crank pin %   joint2=line representing the joint at the rocker pin%   crank=line representing the crank %   coupler=line representing the coupler%   couplerptr=line representing the coupler point%   couplerpt1=line from the crank pin to the coupler point one% Program  if nargin==0 && isempty(findobj('Tag','shake_dsgn'))	Action='initialize';elseif nargin==0 && ~isempty(findobj('Tag','shake_dsgn'))	Action='None';endif ~strcmp(Action,'initialize') && ~strcmp(Action,'Help')	a=findobj('Tag','shake_dsgn');	%To retrieve handles for uicontrols	    UD=a.UserData;    hdls = UD.hand;    h_R = hdls(1:4);	h_vel = hdls(5);	h_W = hdls(6:9);	h_G = hdls(10);	h_ASradio = hdls(11:12);	h_txt = hdls(13:21);	h_status = hdls(22);   for i = 1 : 4      r(i) = get(h_R(i),'userdata');      W(i) = get(h_W(i),'userdata');   end   	r2 = r(1);%crank length	r3 = r(2);%coupler length	R2 = r(3);%distance from crank pivot to crank CG	R3 = r(4);%distance from coupler CG to point A	W2 = W(1);%the weight of the crank   W3 = W(2);%the weight of the coupler   W4 = W(3);%the weight of the piston   Wcb = W(4);%the counter balance weight   	w2 = get(h_vel,'userdata');  %angular velocity of crank   g = get(h_G,'userdata'); %acceleration of gravity      if get(h_ASradio(1),'value') == 1   	mode = 1;	else   	mode = -1;   end              b=findobj('Tag','shake_axes');	hdls = get(b,'userdata');	joint1 = hdls(1);       	joint2 = hdls(2);       	crank = hdls(3);       	coupler = hdls(4);       	block = hdls(5);       	sliderline1 = hdls(6);       	bush1 = hdls(7);       	circ1 = hdls(8);       endswitch Actioncase'None'	findobj('Tag','shake_dsgn');case 'initialize'   if nargin >= 2 || ~isempty(findobj('tag','menu_page'))	   LocalOpenFig;      ShakeAnalysis('Draw Axes');   else   	show_me_logo('initialize','ShakeAnalysis');   end      case 'Draw Axes'	% Define constants	driver=1;	r4=0;	times=1;	Q1=0;	i=0;	d2r=pi/180;	r2d=180/pi;	Q11=Q1*d2r;	[qstart, qstop]=sc_angle_limits_cr(r2,r3,r4,Q1); 	npos=3600;	dq=(qstop-qstart)/(npos-1);	Astar=[0;0];	rpivot=0.15*r2;	delta=0.3*r2;	QM1=qstart-dq;	% Compute the masses at points A and B	mA=(W2/g)*(r2/R2);	mAprime=(W3/g)*(r3-R3)/r3;	mBprime=(W3/g)*(R3/r3);	MA0=mA+mAprime;	MA=MA0-Wcb/g;	MB=mBprime+W4/g;	% Loop to analyze the linkage for tt full cycles	for motion=1:1:npos		QM1=QM1+dq;		i=i+1;		QM = QM1*d2r;% Call function to compute the position		para = sldcrkc(r2,r3,r4,QM1,w2,0,mode,Q1,3);			Q2=para(6);		if Q2<0; Q2=Q2+360; end		Q22(i)=Q2;		w22(i)=para(14);		Q3=para(7);		Q33(i)=Q3;		w33(i)=para(15);		r1(i)=para(1);		rd1(i)=para(9);		Addx(i)=para(33);		Addy(i)=para(34);		Bddx(i)=para(35);		Bddy(i)=para(36);			assem=para(37);	% Compute the shaking force components		fBx(i)=-MB*Bddx(i);		fBy(i)=-MB*Bddy(i);		fsx(i)=-MA*Addx(i)+fBx(i);		fsy(i)=-MA*Addy(i)+fBy(i);		fsx0(i)=-MA0*Addx(i)+fBx(i);		fsy0(i)=-MA0*Addy(i)+fBy(i);		fstotal(i)=sqrt(fsx(i)^2+fsy(i)^2);		fstotal0(i)=sqrt(fsx0(i)^2+fsy0(i)^2);% Store position information in matrices.		Bx(i)= para(25);		By(i)= para(26);		Cx(i)= para(27);		Cy(i)= para(28);	% Locate the slider block coordinates		xpin=Cx(i);		ypin=Cy(i);		height=delta;		length=2*height;		coords = rect(length,height,xpin,ypin,Q1,0);		for j=1:1:5			xblocka(i,j)=coords(j,1);			yblocka(i,j)=coords(j,2);		end	end% Print the maximum value of the shaking force for Wcg=0 to the screen.	[fsmax0,j]=max(fstotal0);   if Q22(j) < 1e-3      Q22(j) = 0;   end   set(h_txt(1),'string',num2str(fsmax0));	set(h_txt(2),'string',num2str(Q22(j)));% Print the maximum value of the shaking force for the given value for Wcg % to the screen.	[fsmax,j]=max(fstotal);   if Q22(j) < 1e-3      Q22(j) = 0;   end	set(h_txt(4),'string',num2str(fsmax));	set(h_txt(5),'string',num2str(Q22(j)));	set(h_txt(6),'string',num2str(Wcb));      itotal=i;% ************************************************************************% Optimization of shaking force.% Find the optimum counter balance force using the golden section% method.	x(1)=0;	x(4)=(W2+W3+W4)/g;	tau=(sqrt(5)-1)/2;	x(2)=x(4)-tau*x(4);	x(3)=x(1)+tau*x(4);% Compute the shaking force at the three initial points	for k=1:1:4		if k==1; MA=MA0-x(1);end		if k==2; MA=MA0-x(2);end		if k==3; MA=MA0-x(3);end		if k==4; MA=MA0-x(4);end		for j=1:1:npos			fsxo(j)=-MA*Addx(j)+fBx(j);			fsyo(j)=-MA*Addy(j)+fBy(j);			fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);		end		if k==1; f(1)=max(fstotalo);end		if k==2; f(2)=max(fstotalo);end		if k==3; f(3)=max(fstotalo);end		if k==4; f(4)=max(fstotalo);end	end% Make n function evaluations to find the optimum	for k=1:1:20		[fmin,i]=min(f);		if i==1;			dx=x(3)-x(2);			x(4)=x(3);f(4)=f(3);			x(3)=x(2);f(3)=f(2);			x(2)=x(1)+dx;			MA=MA0-x(2);			for j=1:1:npos				fsxo(j)=-MA*Addx(j)+fBx(j);				fsyo(j)=-MA*Addy(j)+fBy(j);				fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);			end			f(2)=max(fstotalo);		end		if i==2			dx=x(3)-x(2);			x(4)=x(3);f(4)=f(3);			x(3)=x(2);f(3)=f(2);			x(2)=x(1)+dx;			MA=MA0-x(2);			for j=1:1:npos				fsxo(j)=-MA*Addx(j)+fBx(j);				fsyo(j)=-MA*Addy(j)+fBy(j);				fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);			end			f(2)=max(fstotalo);		end		if i==3			dx=x(3)-x(2);			x(1)=x(2);f(1)=f(2);			x(2)=x(3);f(2)=f(3);			x(3)=x(4)-dx;			MA=MA0-x(3);			for j=1:1:npos				fsxo(j)=-MA*Addx(j)+fBx(j);				fsyo(j)=-MA*Addy(j)+fBy(j);				fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);			end			f(3)=max(fstotalo);		end		if i==4;			dx=x(3)-x(2);			x(1)=x(2);f(1)=f(2);			x(2)=x(3);f(2)=f(3);			x(3)=x(4)-dx;			MA=MA0-x(3);			for j=1:1:npos				fsxo(j)=-MA*Addx(j)+fBx(j);				fsyo(j)=-MA*Addy(j)+fBy(j);				fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);			end			f(3)=max(fstotalo);		end	end	[y,i]=min(f);	Wcbm=x(i)*g;	MA=MA0-x(i);	% Compute the shaking force	for j=1:1:npos		fsxo(j)=-MA*Addx(j)+fBx(j);		fsyo(j)=-MA*Addy(j)+fBy(j);		fstotalo(j)=sqrt(fsxo(j)^2+fsyo(j)^2);	end	[optsf,j]=max(fstotalo);	optcb=Wcbm;	% ********************************************************************   if Q22(j) < 1e-3      Q22(j) = 0;   end	set(h_txt(7),'string',num2str(optcb));	set(h_txt(8),'string',num2str(optsf));	set(h_txt(9),'string',num2str(Q22(j)));   % Compute shaking force with optimum counterbalance	MA=mA+mAprime-optcb/g;	for j=1:1:npos		fAxo=-MA*Addx(j);		fAyo=-MA*Addy(j);		fsxo(j)=fAxo+fBx(j);		fsyo(j)=fAyo+fBy(j);	end% Determine the coordinates of the slider line					smax=max(r1);	smin=min(r1);		cmin=min(Cx);	cymin=min(Cy);	length1=smax-smin+length;	ndash=20;	csang=cos(Q11);	ssang=sin(Q11);		xe = cmin-(0.5*length)*csang;	ye = cymin-(0.5*length)*ssang;	slflag=1;	coord=frameline(length1,xe,ye,ndash,Q1,slflag);						npoints1=3*ndash;						% Offset slider line by half the height of the slider block.	for i=1:1:npoints1		xsl1(i)=coord(i,1)+(0.6*height)*ssang;		ysl1(i)=coord(i,2)-(0.6*height)*csang;	end					% Define the pin and bushing coordinates	bush=bushing(r2/20,0,0,20,0);	cir1=circle2(r2/20,0,0,20);% Find the limits for the plots	xmina=min([min(Bx) min(Cx) min(bush(:,1)) ...      min(xsl1) min(xblocka)]);	xmaxa=max([max(Bx) max(Cx) max(bush(:,1)) ...      max(xsl1) max(xblocka)]);	ymina=min([min(By) min(Cy) min(bush(:,2)) ...      min(ysl1) min(yblocka)]);	ymaxa=max([max(By) max(Cy) max(bush(:,2)) ...      max(ysl1) max(yblocka)]);	xmin=xmina-0.05*abs(xmaxa-xmina);	xmax=xmaxa+0.05*abs(xmaxa-xmina);	ymin=ymina-0.05*abs(ymaxa-ymina);	ymax=ymaxa+0.05*abs(ymaxa-ymina);	axis([xmin xmax ymin ymax]);	a = findobj('Tag','shake_dsgn');    UD=a.UserData;	hdls = UD.hand;	lim =[xmin xmax ymin ymax];	set(a,'userdata',struct('hand',hdls,'wlim',lim));% Draw the fixed object first.	set(bush1,'xdata',bush(:,1),'ydata',bush(:,2));	set(circ1,'xdata',cir1(:,1),'ydata',cir1(:,2));% Draw the frame line.	set(sliderline1, 'xdata', xsl1, 'ydata', ysl1);   % Plot linkage in fixed position.	i = 400;	set(joint1,'xdata', Bx(i), 'ydata',By(i));	set(joint2,'xdata', Cx(i), 'ydata',Cy(i));	set(crank,'xdata',[0 Bx(i)],'ydata', [0 By(i)]);	set(coupler,'xdata', [Bx(i) Cx(i)],'ydata', [By(i) Cy(i)]);	set(block,'xdata', [xblocka(i,:)],'ydata', [yblocka(i,:)]);   %flush the draw buffer%	drawnow; 	b = findobj('Tag','shake_axes');	hdls = get(b,'userdata');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%The Callbacks When the User Moves or Releases%the Mouse Button.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   case 'Change R'	n=Argument2;	newval=get(h_R(n),'string');	rn=check_val(r(n),newval);	set(h_R(n),'UserData',rn,'string',num2str(rn));   ShakeAnalysis('Draw Axes'); case 'Change Weight'	n=Argument2;	newval=get(h_W(n),'string');	Wn=check_val(W(n),newval);	set(h_W(n),'UserData',Wn,'string',num2str(Wn));   ShakeAnalysis('Draw Axes'); case 'Change G'   newval=get(h_G,'string');   g=check_val(g,newval);   set(h_G,'UserData',g,'string',num2str(g));   ShakeAnalysis('Draw Axes');       case 'Change Velocity'      newval=get(h_vel,'string');   w2=check_val(w2,newval);   set(h_vel,'UserData',w2,'string',num2str(w2));   ShakeAnalysis('Draw Axes');      case 'AS_radio'      num_buttons = 2;   button = Argument2;	if get(h_ASradio(button),'value') == 0		set(h_ASradio(button),'value',1);  	end  	set(h_ASradio([1:(button-1), (button+1):num_buttons]),'value',0);	ShakeAnalysis('Draw Axes');      case 'Resize'	n = Argument2;%To retrieve current axis limits	a=findobj('Tag','shake_dsgn');    UD=a.UserData;%If 'Zoomout' button is pressed, downsize the figure by increasing x and y axis limits%If 'ZoomIn' button is pressed, enlarge the figure by decreasing x and y axis limits	if n==1		factor=1.05;	else		factor=0.95;    end    UD.wlim=factor*UD.wlim;    a.UserData=UD;    axis(UD.wlim);case 'None'         % the following command will bring the existing figure    % to foreground   a = findobj('Tag','shake_dsgn');   figure(a);   case 'Close'         % if the target window exist then close it   if ~isempty(findobj('Tag','Shake Analysis Window'))      shake_ana('Stop');      a = findobj('Tag','Shake Analysis Window');      	close(a);	end      a = findobj('Tag','shake_dsgn');   close(a);   case 'Analysis'	shake_ana('initialize',r,w2,W,g,mode);   case 'Show Definitions'   Show_definition('initialize','ShakeAnalysis2.tif');   case 'Help'   HelpStr={'';    '    "ShakeAnalysis" is a program to analyze a slider-crank mechanism for';    'one-degree  increments  of  the  crank  for   position,   velocity   and';    'acceleration.   In addition, the shaking force is computed at each angle';    'increment for the given value of the counter balance  weight,  for  zero';    'counter-balance weight, and  for  the  optimum  value  of  the  counter-';    'balance weight.  The nomenclature used  by  the program is that given in';    'the textbook, Kinematics, Dynamics, and Design of Mechanisms, 3rd Ed. by';    'Kenneth Waldron, Gary Kinzel, and Sunil Agrawal.';    '';    '    The program  contains two windows: a design window and  an  analysis';    'window.  In the design window, the variables to  define  a  slider-crank';    'mechanism include the  crank length, the coupler length, and the asembly';    'mode.  In addition, the variables needed to calculate the shaking force,';    'such as the distances between the weights  and  associated  joints,  the';    'weights for the crank, coupler, piston, the counter-balance weight,  the';    'angular velocity of the driver, and the acceleration of gravity, can  be';    'specified by the user.';    '';    '    In the analysis window, users can control the number of plots (up to';    'four) and the  contents of each plot (four options) are  provided.   The';    'force and length units used in the plots are the same as those input for';    'the linkage.   The animation speed can be easily adjusted by clicking on';    'the speed buttons.';    '';    '    Two buttons connect the two windows.   The "Return"  button  in  the';    'analysis window closes the analysis window and brings  back  the  design';    'window, while the "Analysis" button  in  the  design  window  opens  the';    'analysis window and start the linkage animation and  associated  shaking';    'force animation.  Each time the "analysis" button is pressed, all of the';    'design parameters are updated to start a new animation.';    '';    '    There is a status bar at the bottom of the design  window.   If  the';    'chosen values for the length variables cannot be used to create a  valid';    'slider-crank mechanism, an error message is shown in the status box.';    ' '};   helpwin(HelpStr,'Shake Analysis');case 'Get File'% Get the file name using the UIGETFILE   [sFileName sFilePath] = uigetfile('*.dat','Load File');     if sFileName == 0 && sFilePath == 0      return;   end      % Combine the path and file name together   sTemp = strcat( sFilePath, sFileName );% get the size to erase the '.dat' extension      sz  = size(sFileName);% load the data file     load(sTemp);% assign the parameter to a variable   Parameter = eval(sFileName(1:(sz(2)-4)));   if 11 == max(size(Parameter))      r(1:4) = Parameter(1:4);      w2 = Parameter(5);      W(1:4) = Parameter(6:9);      g = Parameter(10);      mode = Parameter(11);    	for i=1:4    		set(h_R(i),'UserData',r(i),'string',num2str(r(i)));    		set(h_W(i),'UserData',W(i),'string',num2str(W(i)));   	end      set(h_vel,'Userdata',w2,'string',num2str(w2));   	set(h_G,'UserData',g,'string',num2str(g));         if mode == 1        	ShakeAnalysis('AS_radio',1);      else        	ShakeAnalysis('AS_radio',2);      end        	refresh;   else   	set(h_status,'string','invalid file format');   	return   endcase 'Put File'   [sFileName sFilePath] = uiputfile('*.dat','Save As');  	ParameterData=[r(1);r(2);r(3);r(4);w2;W(1);W(2);W(3);W(4);g;mode];%sTemp = strcat( sFilePath, sFileName);   [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);   [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, '-ascii ParameterData');   eval(strCmd);   endfunction val=check_val(oldval,newval)%Check if the user input is a number input%if not, retrieve the previous value in userdataval=zeros(1);if~isequal(length(oldval),length(str2num(newval))),  	val=oldval;%	set(findobj(gcf,'Tag','status_txt'),'String',...%['Warning:Aninvalidpropertyvaluehasbeenentered.']);else 	val=str2num(newval);end   function LocalOpenFig()hdls = zeros(1,20);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Control the color of the UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%StdColor = get(0,'DefaultUIcontrolBackgroundColor');%PointsPerPixel = 72/get(0,'ScreenPixelsPerInch');%StdColor = [0.7529 0.7529 0.8029];bgframe = StdColor;bgedit = [1 1 1];bgtext = bgframe;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Main Figure of Crank Rocker Design%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 480;sy = 400;FigPos = [ 10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','pixels', ...	'Color',[0.8 0.8 0.8], ...	'Name','Shake Analysis', ...	'NumberTitle','off', ...	'Position',FigPos, ...  	'Tag','shake_dsgn');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Draw Frame First% This will prevent the frames from been drawn on top of% other UICONTROLS. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0083 0.01 0.9833 0.1125], ...	'Style','frame', ...  	'Tag','Frame1');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.7525 0.3896 0.2225], ...	'Style','frame', ...	'Tag','Frame_link');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0083 0.13 0.5833 0.1975], ...	'Style','frame', ...	'Tag','Frame_angle');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.13 0.3896 0.08], ...	'Style','frame', ...	'Tag','Frame_pushbutton');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.6825 0.3896 0.065], ...	'Style','frame', ...	'Tag','Frame_R');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.3025 0.3896 0.0625], ...	'Style','frame', ...  	'Tag','Frame6');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.455 0.3896 0.2225], ...	'Style','frame', ...	'Tag','Frame7');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.37 0.3896 0.08], ...	'Style','frame', ...	'Tag','Frame_assemode');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.2162 0.3896 0.08], ...	'Style','frame', ...	'Tag','Frame_zoombutton');      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');  c = uimenu('Parent',b, ...	'Callback','ShakeAnalysis(''Get File'')', ...	'Label','Load Parameters', ...	'Tag','submenu_load');   c = uimenu('Parent',b, ...	'Callback','ShakeAnalysis(''Put File'',1)', ...	'Label','Save Parameters', ...	'Tag','submenu_save1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create graphics window for design input%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-------Reference axisb = axes('Parent',a, ...  	'Box','on', ...  	'Color',[1 1 1], ...	'Position',[0.0083 0.335 0.5854 0.6375], ...  	'XColor',[0 0 0], ...  	'XGrid','off', ...  	'XTick',[],...  	'YColor',[0 0 0], ...  	'YGrid','off', ...  	'YTick',[], ...  	'ZColor',[0 0 0], ...  	'ZGrid','off', ...  	'ZTick',[]);  b = axes('Parent',a, ...   'Box','off', ...  	'DataAspectRatio',[1 1 1],...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Position',[0.0083 0.335 0.5854 0.6375], ...	'Tag','shake_axes');axis off;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% edit related uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  h_R(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change R'',1)', ...	'Position',[0.825 0.915 0.1375 0.05], ...	'String','4', ...	'Style','edit', ...	'Tag','crlgh_edit', ...	'UserData',4);      h_R(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change R'',2)', ...	'Position',[0.825 0.865 0.1375 0.05], ...	'String','14', ...	'Style','edit', ...	'Tag','coprlgh_edit', ...	'UserData',14);      h_R(3) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change R'',3)', ...	'Position',[0.825 0.8125 0.1375 0.05], ...	'String','2', ...	'Style','edit', ...	'Tag','dis1_edit', ...	'UserData',2);      h_R(4) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change R'',4)', ...	'Position',[0.825 0.76 0.1375 0.05], ...	'String','4', ...	'Style','edit', ...	'Tag','dis2_edit', ...	'UserData',4);            h_vel = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change velocity'')', ...	'Position',[0.825 0.69 0.1375 0.05], ...	'String','104.72', ...	'Style','edit', ...	'Tag','vel_edit', ...	'UserData',104.72);h_W(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change Weight'',1)', ...	'Position',[0.825 0.62 0.1375 0.05], ...	'String','1.875', ...	'Style','edit', ...	'Tag','wc_edit', ...	'UserData',1.875);      h_W(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change Weight'',2)', ...	'Position',[0.825 0.5675 0.1375 0.05], ...	'String','34', ...	'Style','edit', ...	'Tag','wcp_edit', ...	'UserData',34);      h_W(3) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change Weight'',3)', ...	'Position',[0.825 0.515 0.1375 0.05], ...	'String','20', ...	'Style','edit', ...	'Tag','wp_edit', ...	'UserData',20);      h_W(4) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change Weight'',4)', ...	'Position',[0.825 0.4625 0.1375 0.05], ...	'String','47.85', ...	'Style','edit', ...	'Tag','wcb_edit', ...	'UserData',47.85);      h_G = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','ShakeAnalysis(''Change G'')', ...	'Position',[0.825 0.31 0.1375 0.05], ...	'String','386', ...	'Style','edit', ...	'Tag','G_edit', ...	'UserData',386);      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% radio button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%         h_ASradio(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','ShakeAnalysis(''AS_radio'',1)', ...	'Position',[0.8 0.405 0.175 0.0425], ...	'String',' 1', ...	'Style','radiobutton', ...	'Tag','assmode_radio1', ...	'Value',1);   h_ASradio(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','ShakeAnalysis(''AS_radio'',2)', ...	'Position',[0.8 0.3725 0.175 0.0425], ...	'String','-1', ...	'Style','radiobutton', ...	'Tag','assmode_radio2', ...	'Value',0);   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% push button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','ShakeAnalysis(''Analysis'')', ...	'Position',[0.6042 0.136 0.1333 0.06], ...	'String','Analysis');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','ShakeAnalysis(''Close'')', ...	'Position',[0.8542 0.136 0.1324 0.06], ...	'String','Close');   b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','ShakeAnalysis(''Help'')', ...	'Position',[0.7367 0.136 0.1166 0.06], ...	'String','Info');   b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','ShakeAnalysis(''Resize'',1)', ...	'Position',[0.6042 0.2235 0.1333 0.06], ...	'String','Zoom Out');   b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','ShakeAnalysis(''Resize'',2)', ...	'Position',[0.7367 0.2235 0.1166 0.06], ...	'String','Zoom In');b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','ShakeAnalysis(''Show Definitions'')', ...	'Position',[0.8542 0.2235 0.1324 0.06], ...	'String','Definitions');      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% text controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_status = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'HorizontalAlignment','left', ...	'Position',[0.05625 0.0275 0.9083 0.0475], ...	'String',' ', ...	'Style','text', ...	'Tag','status_txt');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6167 0.905 0.1708 0.0425], ...	'String','crank length', ...	'Style','text', ...	'Tag','StaticText2');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6167 0.855 0.1833 0.0425], ...	'String','coupler length', ...	'Style','text', ...	'Tag','StaticText2');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6167 0.8075 0.1833 0.0425], ...	'String','length A* to CG2', ...	'Style','text', ...	'Tag','StaticText3');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6167 0.7625 0.1833 0.0425], ...	'String','length A to CG3', ...	'Style','text', ...	'Tag','StaticText4');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6167 0.6975 0.20625 0.0425], ...	'String','angular velocity', ...	'Style','text', ...	'Tag','StaticText4');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6229 0.4075 0.1667 0.0375], ...	'String','assembly mode', ...	'Style','text', ...	'Tag','StaticText4');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6438 0.62 0.1167 0.0425], ...	'String','crank wt.', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6438 0.565 0.1167 0.0425], ...	'String','coupler wt.', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6438 0.5175 0.1167 0.0425], ...	'String','piston wt.', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6125 0.47 0.2083 0.0425], ...	'String','Wcb', ...	'Style','text', ...	'Tag','StaticText4');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6229 0.315 0.2 0.0425], ...	'String','G acceleration', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.0146 0.27 0.1250 0.0425], ...	'String','Max S.F.=', ...	'Style','text', ...	'Tag','StaticText1');   h_txt(1) = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForegroundColor',[0 0 1 ], ...	'BackgroundColor',bgtext, ...	'Position',[0.1479 0.2675 0.0896 0.0425], ...   'String','10.52', ...	'Style','text', ...   'UserData',10.52);   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.2458 0.2675 0.1 0.0425], ...	'String','at theta', ...	'Style','text', ...	'Tag','StaticText4');h_txt(2) = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForegroundColor',[0 0 1 ], ...	'BackgroundColor',bgtext, ...	'Position',[0.3417 0.2675 0.0979 0.0425], ...	'String','0', ...	'Style','text', ...   'UserData',0);   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.4104 0.2675 0.11 0.0425], ...	'String',',Wcb=', ...	'Style','text', ...	'Tag','StaticText1');   h_txt(3) = uicontrol('Parent',a, ...   'Units','normalized', ...   'ForegroundColor',[0 0 1 ], ...	'BackgroundColor',bgtext, ...	'Position',[0.4917 0.2675 0.097 0.0425], ...	'String','0', ...	'Style','text', ...   'UserData',0);   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.0146 0.2275 0.1250 0.0425], ...	'String','Max S.F.=', ...	'Style','text', ...	'Tag','StaticText4');h_txt(4) = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForegroundColor',[0 0 1 ], ...	'BackgroundColor',bgtext, ...	'Position',[0.1479 0.225 0.0896 0.0425], ...	'String','4.05', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...   'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.2458 0.225 0.1 0.0425], ...	'String','at theta', ...	'Style','text', ...	'Tag','StaticText4');h_txt(5) = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForegroundColor',[0 0 1 ], ...	'BackgroundColor',bgtext, ...	'Position',[0.3417 0.225 0.0979 0.0425], ...	'String','94.55', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.4104 0.2275 0.11 0.0425], ...	'String',',Wcb=', ...	'Style','text', ...	'Tag','StaticText4');h_txt(6) = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForegroundColor',[0 0 1 ], ...	'BackgroundColor',bgtext, ...	'Position',[0.4917 0.2275 0.097 0.0425], ...	'String','47.85', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.0146 0.188 0.1250 0.0425], ...	'String','Opt. Wcb =', ...	'Style','text', ...	'Tag','StaticText4');h_txt(7) = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForegroundColor',[0 0 1 ], ...	'BackgroundColor',bgtext, ...	'Position',[0.1479 0.1825 0.08958 0.0425], ...	'String','43.06', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.0146 0.14 0.1250 0.0425], ...	'String','Max S.F.=', ...	'Style','text', ...	'Tag','StaticText4');h_txt(8) = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForegroundColor',[0 0 1 ], ...	'BackgroundColor',bgtext, ...	'Position',[0.1479 0.14 0.08958 0.0425], ...	'String','3.38', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.2458 0.14 0.1 0.0425], ...	'String','at theta', ...	'Style','text', ...	'Tag','StaticText4');h_txt(9) = uicontrol('Parent',a, ...	'Units','normalized', ...   'ForegroundColor',[0 0 1 ], ...	'BackgroundColor',bgtext, ...	'Position',[0.3417 0.14 0.0979 0.0425], ...	'String','0', ...	'Style','text', ...	'Tag','StaticText4');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.4104 0.14 0.1625 0.0425], ...	'String',',opt. Wcb', ...	'Style','text', ...	'Tag','StaticText4');hdls=[ h_R h_vel h_W h_G h_ASradio h_txt h_status ];a = findobj('Tag','shake_dsgn');set(a,'userdata',struct('hand',hdls));	% Set up the vectors needed to draw the linkagejoint1=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'k');block=line('xdata', [], 'ydata', [], 'linewidth',1,'color', 'k');crank=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');bush1=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');circ1=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');sliderline1=line('xdata', [], 'ydata',[], 'linestyle', '-','color', 'r');hdls=[ joint1 joint2 crank coupler  ...       block sliderline1 bush1 circ1 ];a = findobj('Tag','shake_axes');set(a,'userdata',hdls );
function []=CognateAnalysis(Action,Argument2)% MATLAB program for finding cognates of crank-rocker mechanism%Variables%   r1=frame length (cm)%   r2=crank length (cm)%   r3=coupler length (cm)%   r4=rocker length (cm)%   r5=coupler radius (cm) (to point C from the crank pin)%   beta=coupler angle (deg) (to point C from the coupler line)%   Q1=frame angle (deg)%   Q11=frame angle (rad)%   Q2=crank angle (rad)%   Q21=crank angle (deg)%   Q22=crank angle (deg) (vector)%   Q3,Q33=coupler angle (deg)%   Q4,Q44=rocker angle (deg)%   cang=angle from the line connecting the coupler point one and the crank pin (rad)%   mode,assem=assembly mode%   dt=number of animation positions per revolution%   itotal=number of animation positions%   cycle=number of cycles as an integer%   bush1,bush2=x,y coordinates of the bushings%   cir1,cir2=x,y coordinates of the circles inside the bushings%   Ax,Ay=x,y coordinates of the crank pin%   Bx,By=x,y coordinates of the rocker pin%   Ax2,Ayx2=x,y coordinates of the crank pointer%   Bx2,By2=x,y coordinates of the rocker pointer%   d2r,r2d=conversion factors between radians and degrees%   i=counting variable%   ans=repetition variable%Graphics variables%   xmin,xmax,ymin,ymax=axes limits%   h1=handle on the first axes in the window (basic linkage)%   h2=handle on the second axes in the window (cognates)%   displ=line representing the crank angle vs. rocker angle%   gridpt = point which follows coupler point%   bushy1=line representing the bushing at the crank hinge%   bushy2=line representing the bushing at the rocker hinge%   circ1=line representing the circle inside the bushing at the crank hinge %   circ2=line representing the circle inside the bushing at the rocker hinge%   joint1=line representing the joint at the crank pin %   joint2=line representing the joint at the rocker pin%   crank=line representing the crank %   coupler=line representing the coupler%   rocker=line representing the rocker%   couplerptr=line representing the coupler point%   couplerpt1=line from the crank pin to the coupler point one%Program  global nBetaflag% nBetaflag is the flag for deciding the beta input from the keyboard or from the mouse input% nBetaflag = 0 is for the mouse input; nBetaflag = 1 is for the keyboard inputglobal nCradiusflag% nCradiusflag is the flag for deciding the coupler radius input% nCradiusflag = 0 is for the mouse input; nCradiusflag = 1 is for the keyboard inputglobal d2rd2r=pi/180;if nargin == 0 && isempty(findobj('Tag','cognate_dsgn'))	Action = 'initialize';elseif nargin == 0 && ~isempty(findobj('Tag','cognate_dsgn'))   Action = 'None';endif ~strcmp(Action,'initialize') && ~strcmp(Action,'Help')   a = findobj('Tag','cognate_dsgn');   b = findobj('Tag','cognate_axes');% To retrieve handles for uicontrol objects       UD = a.UserData;    handles=UD.hand;    h_R = handles(1:10);    h_status = handles(11);    h_beta = handles(12);    h_frmangle = handles(13);    h_Mradio = handles(14:15);    for i=1:5 		r(i) = get(h_R(i),'UserData');    end        beta=get(h_beta,'UserData');    Q1 = get(h_frmangle,'UserData');    mode = get(h_Mradio(1),'userdata');    % To retrieve graphics handles      UD=b.UserData;   handles=UD.hand;   joint1 = handles(1);   joint2 = handles(2);   crank = handles(3);   rocker = handles(4);   coupler = handles(5);   couplerptr1 = handles(6);   couplerpt1 = handles(7);   gridpt = handles(8);   bushy1 = handles(9);   bushy2 = handles(10);   pin1 = handles(11);    pin2 = handles(12); endswitch Actioncase 'None'    findobj('Tag','cognate_dsgn');case 'initialize'   nBetaflag = 1;   nCradiusflag = 1;   if nargin >= 2 || ~isempty(findobj('tag','menu_page'))	   LocalOpenFig;      CognateAnalysis('Draw Axes');   else   	show_me_logo('initialize','CognateAnalysis');   end   case 'Draw Axes'      i=0;   w2=1;   Q11=Q1*d2r;   dt=10;   for Q21 = 0:dt:360;   	i=i+1;   	Q2 = Q21*d2r;    % Call function to compute the position   	para = fourbar(r(1),r(2),r(3),r(4),Q21,w2,0,mode,Q1,0);       Q3=para(7);   	Q33(i)=Q3;   	Q4=para(8);   	Q44(i)=Q4;   	w33(i)=para(11);   	w44(i)=para(12);   	assem=para(29);   	cang=(Q3+beta)*d2r;    % Store position information in matrices.   	Ax(i)= para(17);   	Ay(i)= para(18);   	Bx(i)= para(19);   	By(i)= para(20);   	Cx(i)=Ax(i)+r(5)*cos(cang);   	Cy(i)=Ay(i)+r(5)*sin(cang);   	Q22(i) = Q21;   	w22(i) = w2;    end	% Define the location of the cognate linkages.	   itotal=i;   Mx=0.0;   My=0.0;   Qx=Mx+r(1)*cos(Q11);   Qy=My+r(1)*sin(Q11);   angO=(beta+Q1)*d2r;   betar=beta*d2r;   r(6)=r(2)*r(5)/r(3);   r(7)=r(4)*r(5)/r(3);   r(8)=r(1)*r(5)/r(3);   Ox=Mx+r(8)*cos(angO);   Oy=My+r(8)*sin(angO);   for k=1:1:itotal	   	Gx(k)=Cx(k)-Ax(k);   	Gy(k)=Cy(k)-Ay(k);	   	Dx(k)=Cx(k)+(Qx-Bx(k));   	Dy(k)=Cy(k)+(Qy-By(k));   	phi=atan2((Dy(k)-Cy(k)), (Dx(k)-Cx(k)));   	lamda=atan2((Cy(k)-Gy(k)), (Cx(k)-Gx(k)));   	Ex(k)=Cx(k)+r(7)*cos(betar+phi);   	Ey(k)=Cy(k)+r(7)*sin(betar+phi);   	Fx(k)=Gx(k)+r(6)*cos(betar+lamda);   	Fy(k)=Gy(k)+r(6)*sin(betar+lamda);   end   r(9)=sqrt((Ex(1)-Ox)^2+(Ey(1)-Oy)^2);   r(10)=sqrt((Ex(1)-Dx(1))^2+(Ey(1)-Dy(1))^2);% Draw original linkage and Coupler Curve   width=0.95;   height=0.95;     xmint=min([Mx Qx min(Ax) min(Bx) min(Cx)]);   xmaxt=max([Mx Qx max(Ax) max(Bx) max(Cx)]);   ymint=min([My Qy min(Ay) min(By) min(Cy)]);   ymaxt=max([My Qy max(Ay) max(By) max(Cy)]);   xmin=xmint-0.1*(xmaxt-xmint);   xmax=xmaxt+0.1*(xmaxt-xmint);   ymin=ymint-0.1*(ymaxt-ymint);   ymax=ymaxt+0.1*(ymaxt-ymint);   values=axisadjust(xmin, xmax, ymin, ymax, width, height);   xmin=values(1);   xmax=values(2);   ymin=values(3);   ymax=values(4);   axis ([xmin, xmax, ymin, ymax])  % Get the bushing points   bush1=bushing(((ymax-ymin)/50),0,0,20,0);   cir1=circle2(((ymax-ymin)/60),0,0,20);   bush2=bushing(((ymax-ymin)/50),Qx,Qy,20,0);   cir2=circle2(((ymax-ymin)/60),Qx,Qy,20);   set(pin1,'xdata', cir1(:,1), 'ydata', cir1(:,2));   set(bushy1,'xdata', bush1(:,1),'ydata', bush1(:,2));   set(pin2,'xdata', cir2(:,1), 'ydata', cir2(:,2));   set(bushy2,'xdata', bush2(:,1),'ydata', bush2(:,2));% refresh;  % Plot the of the MQ linkage% Draw the coupler curve first.   set(couplerpt1,'xdata', Cx, 'ydata' ,Cy);   set(joint1,'xdata', Ax(6), 'ydata',Ay(6));   set(joint2,'xdata', Bx(6), 'ydata',By(6));   set(crank,'xdata',[Mx Ax(6)],'ydata', [Mx Ay(6)]);   set(coupler,'xdata', [Ax(6) Bx(6)],'ydata', [Ay(6) By(6)]);   set(rocker,'xdata', [Qx Bx(6)],'ydata', [Qy By(6)]);   set(gridpt,'xdata',Cx(6), 'ydata' ,Cy(6));   set(couplerptr1,'xdata', [Ax(6) Cx(6) Bx(6)], 'ydata' ,[Ay(6) Cy(6) By(6)]);   refresh;   for i=6:10     	set(h_R(i),'String',num2str(r(i)));   end   a = findobj('Tag','cognate_dsgn');   UD=get(a,'UserData');   hdls=UD.hand;   lim=[xmin xmax ymin ymax];   a.UserData=struct('hand',hdls,'wlim',lim);   %hdls(16:19)=[xmin xmax ymin ymax];   %set(a,'UserData',hdls);   b = findobj('Tag','cognate_axes');   UD=get(b,'UserData');   hdls=UD.hand;   lim=[Ax(6) Ay(6) Bx(6) By(6)];   b.UserData=struct('hand',hdls,'wlim',lim);   %hdls(13:16)=[ Ax(6) Ay(6) Bx(6) By(6) ];   %set(b,'UserData',hdls);   set([gridpt couplerpt1],...   	'buttondownfcn','CognateAnalysis(''Set Calls'');CognateAnalysis(''Move'')');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Callbacks When the User Moves or Releases % the Mouse Button.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'Set Calls' % get the handle of the objects used to control% the mouse input    a = findobj('Tag','cognate_dsgn');   nBetaflag = 0;   nCradiusflag = 0;   set(a,'windowbuttonupfcn', 'a = findobj(''Tag'',''cognate_dsgn'');set(a,''windowbuttonmotion'','''');refresh;');   set(a,'windowbuttonmotionfcn','CognateAnalysis(''Move'')');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Callbacks When The User Moves the Mouse Button.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'Move'% Find out where the mouse pointer is located.   a = findobj('Tag','cognate_dsgn');   b = findobj('Tag','cognate_axes');   set(h_status,'string','');   hdls = get(b,'userdata');   Ax = hdls(13);   Ay = hdls(14);   Bx = hdls(15);   By = hdls(16);   if nBetaflag == 1 || nCradiusflag == 1      a = get(h_beta,'userdata');      b = get(h_beta,'string');      beta = check_val(a,b);      a = get(h_R(5),'userdata');      b = get(h_R(5),'string');      r(5) = check_val(a,b);   else        	pt = get(b,'currentpoint');      pt = pt(1,1:2);          	beta = atan2(pt(2)-Ay,pt(1)-Ax)*180/pi-atan2(By-Ay,Bx-Ax)*180/pi;     	r(5) = sqrt((pt(2) -Ay)^2 + (pt(1) -Ax)^2);   end   % Set beta angle range between 180 and -180 degree% When beta exceeds 180, its value will be converted into minus value, and vise versa     if beta > 180      beta = beta -360;   elseif beta < -180      beta = beta + 360;   end      	% Store the value in the current axes UserData% where it can be retrieved by an application.   set(h_beta,'userdata',beta);   set(h_beta,'string',num2str(beta));   set(h_R(5),'userdata',r(5));   set(h_R(5),'string',num2str(r(5)));   w2=1;   Q11=Q1*d2r;   dt=10;   i = 0;   for Q21 = 0:dt:360;   	i = i+1;   	Q2 = Q21*d2r;% Call function to compute the position   	para = fourbar(r(1),r(2),r(3),r(4),Q21,w2,0,mode,Q1,0);    	Q3=para(7);   	Q33(i)=Q3;   	Q4=para(8);   	Q44(i)=Q4;   	w33(i)=para(11);   	w44(i)=para(12);   	assem=para(29);   	cang=(Q3+beta)*d2r;   % Store position information in matrices.      Ax(i)= para(17);      Ay(i)= para(18);   	Bx(i)= para(19);   	By(i)= para(20);   	Cx(i)=Ax(i)+r(5)*cos(cang);   	Cy(i)=Ay(i)+r(5)*sin(cang);   	Q22(i) = Q21;   	w22(i) = w2;    end	% Define the location of the cognate linkages.	   Mx=0.0;   My=0.0;   Qx=Mx+r(1)*cos(Q11);   Qy=My+r(1)*sin(Q11);   angO=(beta+Q1)*d2r;   betar=beta*d2r;   r(6)=r(2)*r(5)/r(3);   r(7)=r(4)*r(5)/r(3);   r(8)=r(1)*r(5)/r(3);   Ox=Mx+r(8)*cos(angO);   Oy=My+r(8)*sin(angO);   k = 1;   Dx(k)=Cx(k)+(Qx-Bx(k));   Dy(k)=Cy(k)+(Qy-By(k));   phi=atan2((Dy(k)-Cy(k)), (Dx(k)-Cx(k)));   Ex(k)=Cx(k)+r(7)*cos(betar+phi);   Ey(k)=Cy(k)+r(7)*sin(betar+phi);   r(9)=sqrt((Ex(1)-Ox)^2+(Ey(1)-Oy)^2);   r(10)=sqrt((Ex(1)-Dx(1))^2+(Ey(1)-Dy(1))^2);%Draw the curve   set(couplerpt1,'xdata', Cx, 'ydata' ,Cy);   set(gridpt,'xdata',Cx(6), 'ydata' ,Cy(6));   set(couplerptr1,'xdata', [Ax(6) Cx(6) Bx(6)], 'ydata' ,[Ay(6) Cy(6) By(6)]);   drawnow;   for i=6:10     	set(h_R(i),'String',num2str(r(i)));   end   a = findobj('Tag','cognate_dsgn');   hdls=get(a,'UserData');   hdls(20:24)=[r(1:5)];   set(a,'UserData',hdls);case 'Change R'   n = Argument2;   newval=get(h_R(n),'string');   r(n)=check_val(r(n),newval);   set(h_R(n),'UserData',r(n));   set(h_R(n),'string',num2str(r(n)));   CognateAnalysis('Draw Axes');   case 'Change Cradius'   nCradiusflag = 1;      CognateAnalysis('Move');  case 'Change Beta'   nBetaflag = 1;   CognateAnalysis('Move');  case 'Change Frame Angle'   newval=get(h_frmangle,'string');   Q1=check_val(Q1,newval);   set(h_frmangle,'UserData',Q1);   set(h_frmangle,'string',num2str(Q1));   CognateAnalysis('Draw Axes');   case 'Analysis'   cogana('initialize',r(1:5),beta,Q1,mode);  case 'Close'   % if the target window exist then close it   if ~isempty(findobj('Tag','Cognate Analysis Window'))      cogana('Stop');      a = findobj('Tag','Cognate Analysis Window');         close(a);   end      a = findobj('Tag','cognate_dsgn');   close(a);case 'Show Definitions'   Show_definition('initialize','CognateAnalysis.jpg');   case 'Help'%-------On-line help     HelpStr={'Cognate Analysis';    '';    '    "CognateAnalysis" is a program to design cognate fourbar mechanisms';    'and to analyze the result.  The program contains two windows: a design';    'window and an analysis window.    The nomenclature used by the program ';    'is that  given in  the textbook, Kinematics,  Dynamics, and  Design of ';    'Mechanisms by Kenneth Waldron and Gary Kinzel.';    '';    '    In the  design  window,  the  variables  are the  five link length ';    '(frame, crank, coupler, rocker  and  coupler  radius) and two  angles( ';    'beta and frame angle).   One of the program features is that users can ';    'drag the mouse to  change  the coupler  point in a continuous fashion. ';    'This changes  both the beta angle and  coupler  radius.  In  addition, ';    'five  more link  lengths  of  the  cognates  mechanism  are  shown and ';    'updated  dynamically.    Two assembly modes (1 or -1) are available in ';    'radio  buttons.     Because  changing  the coupler  point can move the ';    'mechanism  plot out  of  the  figure  window, "Zoom In" and "Zoom Out" ';    'buttons are available to downsize and upsize the mechanism plot.';    '';    '    In the analysis  window, users can control the number of plots (up ';    'to four)  and the  contents  of each plot (four options) are provided. ';    'Furthermore, the animation  speed  can be easily  adjusted by clicking ';    'on the speed buttons.';     '';    '    Two buttons connect the two windows.    The "Return" button in the ';    'analysis window closes the analysis  window and brings back the design ';    'window, while  the  "Analysis"  button  in the design window opens the ';    'analysis  window and starts the  linkage animation.     Every time the ';    '"Analysis"  button  is  pressed, all  of  the  design  parameters  are ';    'updated to start a new animation. ';    '';    '    There is a status bar at the bottom of  the design window.  If the ';    'chosen values for the  variables  cannot be used to create a  cognates ';    'mechanism, an error message will be shown in the status box.  ';     ' '};   helpwin(HelpStr,'Cognate Analysis');case 'Resize'   n = Argument2;% To retrieve current axis limits      a = findobj('Tag','cognate_dsgn');   UD=a.UserData;% If 'Zoom out' button is pressed, downsize the figure by increasing x any y axis limits% If 'Zoom In' button is pressed, enlarge the figure by decreasing x any y axis limits   if n ==1      factor = 1.05;   else      factor = 0.95;   end      UD.wlim=factor*UD.wlim;   a.UserData=UD;   findobj('Tag','cognate_axes');   axis(UD.wlim);case 'Change Mode'      num_buttons = 2;   button = Argument2;% Mode value is stored in the userdata of control h_Mradio(1)% theredore, reset the userdata of h_Mradio(1) to the corresponding button number% when the radio buttons are clicked.% radio button 1 is for mode 1, and radio button 2 is for mode -1   if button ==1      set(h_Mradio(1),'userdata', 1);   else       set(h_Mradio(1),'userdata',-1);   end% Update the radio button status in the figure by setting the value property of a radio button control% value 1 is an activated status while value 0 is a non-activated status % If the activated button has the value 0, reset its value to 1.   if get(h_Mradio(button),'value') == 0      set(h_Mradio(button),'value',1);   end% For all other radio buttons, set their values to 0   set(h_Mradio([1:(button-1), (button+1):num_buttons]),'value',0);   CognateAnalysis('Draw Axes');case 'Get File'% Get the file name using the UIGETFILE   [sFileName sFilePath] = uigetfile('*.dat','Load File');     if sFileName == 0 && sFilePath == 0      return;   end      % Combine the path and file name together   sTemp = strcat( sFilePath, sFileName );% get the size to erase the '.dat' extension      sz  = size(sFileName);% load the data file     load(sTemp);% assign the parameter to a variable   Parameter = eval(sFileName(1:(sz(2)-4)));   if length(Parameter) == 8      r(1:5) = Parameter(1:5);      beta = Parameter(6);      Q1 = Parameter(7);      mode = Parameter(8);   	for i=1:5    		set(h_R(i),'UserData',r(i));      end          set(h_frmangle,'UserData',Q1);   	set(h_beta,'Userdata',beta);      set(h_Mradio(1),'userdata',mode);         for i=1:5         set(h_R(i),'string',num2str(r(i)));      end          set(h_frmangle,'string',num2str(Q1));      set(h_beta,'string',num2str(beta));      if mode == 1         CognateAnalysis('Change Mode',1);      else          CognateAnalysis('Change Mode',2);      end   	CognateAnalysis('Draw Axes');            refresh;   else      set(h_status,'string','invalid file format');        return;   end             case 'Put File'   [sFileName sFilePath] = uiputfile('*.dat','Save As');   ParameterData = [r(1); r(2); r(3); r(4); r(5); beta; Q1; mode];  %sTemp = strcat( sFilePath, sFileName);   [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);   [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');   eval(strCmd);   end   function val=check_val(oldval,newval)% Check if the user input is number input% if not, retrieve the previous value in userdataval=zeros(1);if ~isequal(length(oldval),length(str2num(newval))),  	val=oldval;%	set(findobj(gcf,'Tag','status_txt'),'String', ...%   ['Warning: An invalid property value has been entered.']);else  	val=str2num(newval);endfunction LocalOpenFig()hdls = zeros(25,0);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Control the color of the UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%StdColor = get(0,'DefaultUIcontrolBackgroundColor');%PointsPerPixel = 72/get(0,'ScreenPixelsPerInch');bgframe = StdColor;bgedit = [1 1 1];bgtext = bgframe;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% The Main Figure of Crank Rocker Design%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 480;sy = 400;FigPos = [ 10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','pixels', ...	'Color',[0.8 0.8 0.8], ...	'Name','Cognates Analysis', ...	'NumberTitle','off', ...	'Position',FigPos, ...  	'Tag','cognate_dsgn');  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Draw Frame First% This will prevent the frames from been drawn on top of% other UICONTROLS. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.01 0.0119332 0.98 0.102625], ...	'Style','frame', ...	'Tag','Frame_status');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.6850 0.3917 0.305], ...	'Style','frame', ...	'Tag','Frame_link');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.4 0.3917 0.275], ...	'Style','frame', ...	'Tag','Frame_R');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.0083 0.1275 0.577 0.0775], ...	'Style','frame', ...  	'Tag','Frame_angle');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.1275 0.3917 0.0775], ...	'Style','frame', ...	'Tag','Frame_pushbutton');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.215 0.3917 0.0775], ...	'Style','frame', ...	'Tag','Frame_zoombutton');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgframe, ...	'Position',[0.6 0.3 0.3917 0.09], ...	'Style','frame', ...	'Tag','Frame_mode');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');  c = uimenu('Parent',b, ...	'Callback','CognateAnalysis(''Get File'')', ...	'Label','Load', ...	'Tag','submenu_load');  c = uimenu('Parent',b, ...	'Callback','CognateAnalysis(''Put File'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create graphics window for design input%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-------Reference axisb = axes('Parent',a, ...  	'Box','on', ...  	'Color',[1 1 1], ...	'Position',[0.0083 0.22 0.577 0.77], ...  	'XColor',[0 0 0], ...  	'XGrid','off', ...  	'XTick',[],...  	'YColor',[0 0 0], ...  	'YGrid','off', ...  	'YTick',[], ...  	'ZColor',[0 0 0], ...  	'ZGrid','off', ...  	'ZTick',[]);  b = axes('Parent',a, ...   'Box','off', ...  	'DataAspectRatio',[1 1 1],...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Position',[0.0083 0.22 0.577 0.77], ...	'Tag','cognate_axes');	axis off;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% edit related uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_beta = uicontrol('Parent',a, ...  	'Units','normalized', ...  	'BackgroundColor',bgedit, ...	'Callback','CognateAnalysis(''Change Beta'')', ...	'Position',[0.1645 0.1425 0.1125 0.05], ...	'String','-4', ...  	'Horiz','left', ...	'Style','edit', ...	'Tag','beta_edit', ...  	'UserData',-4);     h_frmangle = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CognateAnalysis(''Change Frame Angle'')', ...	'Position',[0.4625 0.1425 0.1125 0.05], ...	'String','57', ...  	'Horiz','left', ...	'Style','edit', ...	'Tag','frmangle_edit', ...  	'UserData',57);  h_R(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CognateAnalysis(''Change R'',1)', ...	'Position',[0.8292 0.925 0.1375 0.05], ...	'String','2.75', ...  	'Horiz','left', ...	'Style','edit', ...	'Tag','R_edit(1)', ...  	'UserData',2.75);  h_R(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CognateAnalysis(''Change R'',2)', ...	'Position',[0.8292 0.87 0.1375 0.05], ...	'String','0.9', ...  	'Horiz','left', ...	'Style','edit', ...	'Tag','R_edit(2)', ...	'UserData',0.9);  h_R(3) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CognateAnalysis(''Change R'',3)', ...	'Position',[0.8292 0.8150 0.1375 0.05], ...	'String','2.4', ...  	'Horiz','left', ...	'Style','edit', ...	'Tag','R_edit(3)', ...	'UserData',2.4);  h_R(4) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CognateAnalysis(''Change R'',4)', ...	'Position',[0.8292 0.76 0.1375 0.05], ...	'String','1.3', ...  	'Horiz','left', ...	'Style','edit', ...	'Tag','R_edit(4)', ...	'UserData',1.3);  h_R(5) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgedit, ...	'Callback','CognateAnalysis(''Change Cradius'')', ...	'Position',[0.8292 0.705 0.1375 0.05], ...	'String','4.85', ...  	'Horiz','left', ...	'Style','edit', ...	'Tag','R_edit(5)', ...	'UserData',4.85);   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% push button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CognateAnalysis(''Analysis'')', ...	'Position',[0.6042 0.136 0.1333 0.06], ...	'String','Analysis');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CognateAnalysis(''Close'')', ...	'Position',[0.8542 0.136 0.1324 0.06], ...	'String','Close');  b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CognateAnalysis(''Help'')', ...	'Position',[0.7367 0.136 0.1166 0.06], ...	'String','Info');   b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CognateAnalysis(''Resize'',1)', ...	'Position',[0.6042 0.2235 0.1333 0.06], ...	'String','Zoom Out');b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CognateAnalysis(''Resize'',2)', ...	'Position',[0.7367 0.2235 0.1166 0.06], ...	'String','Zoom In');b = uicontrol('Parent',a, ...  	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CognateAnalysis(''Show Definitions'')', ...	'Position',[0.8542 0.2235 0.1324 0.06], ...	'String','Definitions');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% radio button controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_Mradio(1) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CognateAnalysis(''Change Mode'',1)', ...   'Position',[0.825 0.3475 0.07917 0.035], ...	'String',' 1', ...   'Userdata',-1, ...   'value',0, ...  	'Style','radiobutton', ...	'Tag','Radiobutton1');h_Mradio(2) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Callback','CognateAnalysis(''Change Mode'',2)', ...	'Position',[0.825 0.3025 0.09375 0.035], ...	'String','-1', ...   'Style','radiobutton', ...   'value',1, ...	'Tag','Radiobutton2');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% text controls%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_status = uicontrol('Parent',a, ...	'Units','normalized', ...	'HorizontalAlignment','left', ...	'ListboxTop',0, ...	'Position',[0.0412186 0.0381862 0.908602 0.0477327], ...	'Style','text', ...	'Tag','status_txt');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.025 0.14 0.1375 0.0425], ...	'String','beta angle', ...  	'Horiz','left', ...	'Style','text', ...	'Tag','StaticText1');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.2979 0.14 0.1521 0.0425], ...	'String','frame angle', ...  	'Horiz','left', ...	'Style','text', ...	'Tag','StaticText1');  b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.61875 0.9175 0.1729 0.0425], ...	'String','frame length', ...	'Style','text', ...	'Tag','StaticText2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.61875 0.8625 0.1708 0.0425], ...	'String','crank length', ...	'Style','text', ...	'Tag','StaticText2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.61875 0.8075 0.183 0.0425], ...	'String','coupler length', ...	'Style','text', ...	'Tag','StaticText2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.61875 0.76 0.1813 0.0425], ...	'String','rocker length', ...	'Style','text', ...	'Tag','StaticText2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.61875 0.705 0.1813 0.0425], ...	'String','coupler radius', ...	'Style','text', ...	'Tag','StaticText2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6354 0.61 0.15 0.0425], ...	'String','r6', ...	'Style','text', ...	'Tag','StaticText2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6354 0.5625 0.15 0.0425], ...	'String','r7', ...	'Style','text', ...	'Tag','StaticText2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6354 0.5175 0.15 0.0425], ...	'String','r8', ...	'Style','text', ...	'Tag','StaticText2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6354 0.4625 0.15 0.0425], ...	'String','r9', ...	'Style','text', ...	'Tag','StaticText2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6333 0.41 0.15 0.0425], ...	'String','r10', ...	'Style','text', ...	'Tag','StaticText2');h_R(6) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.7979 0.605 0.15 0.0475], ...	'String','nr6', ...	'Style','text', ...	'Tag','StaticText2');h_R(7) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.7979 0.5575 0.15 0.0475], ...	'String','nr7', ...	'Style','text', ...	'Tag','StaticText2');h_R(8) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.7979 0.5075 0.15 0.0475], ...	'String','nr8', ...	'Style','text', ...	'Tag','StaticText2');h_R(9) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.7979 0.4575 0.15 0.0475], ...	'String','nr9', ...	'Style','text', ...	'Tag','StaticText2');   h_R(10) = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.7979 0.4075 0.15 0.0475], ...	'String','nr10', ...	'Style','text', ...	'Tag','StaticText2');   b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',bgtext, ...	'Position',[0.6354 0.34 0.1625 0.0425], ...	'String','assembly mode', ...	'Style','text', ...	'Tag','StaticText1');     hdls = [h_R h_status h_beta h_frmangle h_Mradio];set(a,'UserData',struct('hand',hdls));% Set up vectors to be drawnjoint1=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'k');crank=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'k');couplerptr1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');	   couplerpt1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r', 'linestyle', '-');	gridpt=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k', 'marker', 'o');	rocker=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');bushy1=line('xdata',[],'ydata',[],'color', 'r');bushy2=line('xdata',[],'ydata',[], 'color', 'r');pin1=line('xdata',[],'ydata',[], 'color', 'r');pin2=line('xdata',[],'ydata',[],'color', 'r');hdls = [	joint1 joint2 crank rocker coupler ...         couplerptr1 couplerpt1 gridpt  ...     	   bushy1 bushy2 pin1 pin2];a = findobj('Tag','cognate_axes');set(a,'UserData',struct('hand',hdls));	drawnow;   
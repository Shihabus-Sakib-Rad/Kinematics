function hr_slidercrank_ana(Action,r,w2,r6,beta)% the contents of the userdata of Analysis Window % handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(4) = handle of fig3 popupmenu% handles(5) = handle of fig4 popupmenu% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(8) = handle of axe3% handles(9) = handle of axe4% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(13) = handle of bead(3)% handles(14) = handle of bead(4)% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1% handles(18) = handle of reference axe for axe2% handles(19) = handle of reference axe for axe3% handles(20) = handle of reference axe for axe4% handles(21) = handle of submenu 'Load'% handles(22) = handle of submenu 'Save'% handles(23) = handle of return button;% handles(24) = handle of speed plus button;% each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler rocker];      global strFigType global nAnimationFlagglobal g_AnaResglobal nChangeSpeed% Define the axes for the first graph (input/output angle graph)if nargin==0 && isempty(findobj('Tag','SC Coupler Curve Analysis Window')),  % cogana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','SC Coupler Curve Analysis Window'))      % cogana is already open   Action='None';elseif nargin== 1 && ~isempty(findobj('Tag','SC Coupler Curve Analysis Window')) && strcmp( Action, 'initialize'), % cogana is already open	% Recalculate the value, and then redraw	Action='None';endswitch Actioncase 'initialize'   if  isempty(findobj('Tag','SC Coupler Curve Analysis Window'))         LocalOpenFig;      nAnimationFlag = 0;   else  		hr_slidercrank_ana('None');   end      if nargin < 5            r = [ 0.75 2.75 1 ];      w2 = 5;      r6 = 1.6525;      beta = -33.6901;   end      if exist('nAnimationFlag')       if nAnimationFlag == 1      	hr_slidercrank_ana('Stop');         return;      end   end         g_AnaRes = CalcResult( r, w2, r6, beta );   DrawAnalysisWindow;   hr_slidercrank_ana('ShowFigure');   hr_slidercrank_ana('Start');    	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	%	Change Figure Call Back Function	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'ChangeFigure'   DrawAnalysisWindow;   hr_slidercrank_ana('ShowFigure');   hr_slidercrank_ana('Start');   case 'SetSpeed'   nChangeSpeed = r(1);   case 'ChangeFigureNo'   DrawAnalysisWindow;   hr_slidercrank_ana('ShowFigure');   hr_slidercrank_ana('Start');   case 'Animation'   a = findobj('Tag','SC Coupler Curve Analysis Window');      handles = get(a,'userdata');   Q1 = 0;      [ m, n ] = size( g_AnaRes);   itotal = n;   timesink = handles(16);   i = handles(15);   dt = 5;      nFigNum  = get( handles(1),'value');   nType(1) = get( handles(2),'value');   nType(2) = get( handles(3),'value');   nType(3) = get( handles(4),'value');   nType(4) = get( handles(5),'value');      bead  = zeros(1,4);   links = zeros(4,10);   bead(1) = handles(11);   bead(2) = handles(12);   bead(3) = handles(13);   bead(4) = handles(14);      h_plus = handles(24);   Bx = g_AnaRes(7,:);   By = g_AnaRes(8,:);   Cx = g_AnaRes(9,:);   Cy = g_AnaRes(10,:);   Dx = g_AnaRes(11,:);   Dy = g_AnaRes(12,:);   pistxx= g_AnaRes(13,1:5);   pistyy= g_AnaRes(14,1:5);   pistx = pistxx';   pisty = pistyy';   mx= g_AnaRes(15,:);   my= g_AnaRes(16,:);	theta1r = g_AnaRes(17,9);   	hpist = g_AnaRes(17,10);         for j = 1:nFigNum      if nType(j) == 4      	links(j,:) = get(handles(j+5),'userdata');   	end   end         % set timer   tic;   	while nAnimationFlag                      cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i ==1         drawnow;      end            if nFigNum > 0         if nType(1) == 4				SetMechanismPosition( links(1,:),i,hpist,theta1r,Bx,By,Cx,Cy,Dx,Dy,pistx,pisty,mx,my);         else              	j = nType(1) * 2 - 1;				set(bead(1), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));        			end      end         		if nFigNum > 1         if nType(2) == 4				SetMechanismPosition( links(2,:),i,hpist,theta1r,Bx,By,Cx,Cy,Dx,Dy,pistx,pisty,mx,my);         else              	j = nType(2) * 2 - 1;         	set(bead(2), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end        end      		if nFigNum > 2        if nType(3) == 4				SetMechanismPosition( links(3,:),i,hpist,theta1r,Bx,By,Cx,Cy,Dx,Dy,pistx,pisty,mx,my);         else              	j = nType(3) * 2 - 1;   	   	set(bead(3), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end      end               if nFigNum > 3        if nType(4) == 4				SetMechanismPosition( links(4,:),i,hpist,theta1r,Bx,By,Cx,Cy,Dx,Dy,pistx,pisty,mx,my);        else            	j = nType(4) * 2 - 1;	     		set(bead(4), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end        end        		drawnow;   %flush the draw buffer      i= i+1;      if i == itotal         i = 1;      end      if nChangeSpeed ~= 0         timesink = timesink * nChangeSpeed;         nChangeSpeed = 0;      end      while toc < timesink      end         tic;   end   nAnimationFlag = 0;   handles(15) = i;   handles(16) = timesink;   set(a,'Userdata',handles);   case 'ShowFigure'   a = findobj('Tag','SC Coupler Curve Analysis Window');   handles = get( a,'userdata');   nFigNum = get(handles(1),'value');   [ m, n ] = size( g_AnaRes);   mx = g_AnaRes(15,:);   my = g_AnaRes(16,:);   xmin = g_AnaRes(17,1);    xmax = g_AnaRes(17,2);    ymin = g_AnaRes(17,3);    ymax = g_AnaRes(17,4);    r = g_AnaRes(17,5:8);   theta1r = g_AnaRes(17,9);   if nFigNum > 0      nType = get(handles(2),'value');      axes(handles(6));      if nType == 4         CreateMechanismHandles( handles(6),r,theta1r,mx,my,xmin,xmax,ymin,ymax);      else            i = nType * 2 - 1;      	line1 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line1','color', 'r');			b1 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b1');      	handles(11) = b1;    		labels = GetFigLabel( nType );      	xlabel(labels(1));         ylabel(labels(2));         axis([ 0 360 min(g_AnaRes(i+1,:)) max(g_AnaRes(i+1,:)) ]);      end   end         if nFigNum > 1      nType = get(handles(3),'value');      axes(handles(7));      if nType == 4         CreateMechanismHandles( handles(7),r,theta1r,mx,my,xmin,xmax,ymin,ymax);      else            i = nType * 2 - 1;      	line2 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line2','color', 'r');			b2 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b2');      	handles(12) = b2;    		labels = GetFigLabel( nType );      	xlabel(labels(1));         ylabel(labels(2));         axis([ 0 360 min(g_AnaRes(i+1,:)) max(g_AnaRes(i+1,:)) ]);      end	end            if nFigNum > 2      nType = get(handles(4),'value');      axes(handles(8));      if nType == 4         CreateMechanismHandles( handles(8),r,theta1r,mx,my,xmin,xmax,ymin,ymax);      else            i = nType * 2 - 1;      	line3 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line3','color', 'r');			b3 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b3');      	handles(13) = b3;    		labels = GetFigLabel( nType );      	xlabel(labels(1));         ylabel(labels(2));         axis([ 0 360 min(g_AnaRes(i+1,:)) max(g_AnaRes(i+1,:)) ]);      end	end            if nFigNum > 3      nType = get(handles(5),'value');      axes(handles(9));      if nType == 4         CreateMechanismHandles( handles(9),r,theta1r,mx,my,xmin,xmax,ymin,ymax);   	else           i = nType * 2 - 1;      	line4 = line( 'xdata', g_AnaRes(i,:), 'ydata', g_AnaRes(i+1,:),'tag','line4','color', 'r');			b4 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b4');      	handles(14) = b4;    		labels = GetFigLabel( nType );      	xlabel(labels(1));         ylabel(labels(2));         axis([ 0 360 min(g_AnaRes(i+1,:)) max(g_AnaRes(i+1,:)) ]);      end   end   refresh;   a = findobj('Tag','SC Coupler Curve Analysis Window');      set(a,'Userdata',handles);   case 'None'	figure( findobj('Tag','SC Coupler Curve Analysis Window'));	% Bring the figure to front, if it already existscase 'Close'   hr_slidercrank_ana('Stop');   a = findobj('Tag','SC Coupler Curve Analysis Window');      close(a);case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','SC Coupler Curve Analysis Window');      handles = get(a,'userdata');   set(handles(1),'Enable','off');   set(handles(2),'Enable','off');   set(handles(3),'Enable','off');   set(handles(4),'Enable','off');   set(handles(5),'Enable','off');   set(handles(21),'Enable','off');   set(handles(22),'Enable','off');   set(handles(23),'Enable','off');      nAnimationFlag = 1;   nChangeSpeed = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   hr_slidercrank_ana('Animation');   case 'Stop'   if  isempty(findobj('Tag','SC Coupler Curve Analysis Window'))   	return;      end   a = findobj('Tag','SC Coupler Curve Analysis Window');      handles = get(a,'userdata');   nAnimationFlag = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   set(handles(1),'Enable','on');   set(handles(21),'Enable','on');   set(handles(22),'Enable','on');   set(handles(23),'Enable','on');   nFigNum = get(handles(1),'value');   for i = 1:nFigNum,   	set(handles(i+1),'Enable','on');   end   case 'Return'   hr_slidercrank_ana('Stop');   if ~isempty(findobj('Tag','SC Coupler Curve Animation Window'))      	b = findobj('Tag','SC Coupler Curve Animation Window');         figure(b);   	b = findobj('Tag','SC Coupler Curve Analysis Window');   	  	close(b);   else   	return;         endcase 'GetFile'   % Get the file name using the UIGETFILE   [sFileName sFilePath] = uigetfile('*.dat','Load File');      if sFileName == 0 && sFilePath == 0      return;   end         % Combine the path and file name together   sTemp = strcat( sFilePath, sFileName );	% get the size to erase the '.dat' extension      sz  = size(sFileName);	% load the data file      load(sTemp);	% assign the parameter to a variable   Parameter = eval(sFileName(1:(sz(2)-4)));      a = findobj('Tag','SC Coupler Curve Analysis Window');      handles = get(a,'userdata');      if length(Parameter) == 5	   nFigNum  = Parameter(1);   	nType1 = Parameter(2);	   nType2 = Parameter(3);   	nType3 = Parameter(4);      nType4 = Parameter(5);         	set(handles(1),'Value',nFigNum);   	set(handles(2),'Value',nType1);   	set(handles(3),'Value',nType2);   	set(handles(4),'Value',nType3);      set(handles(5),'Value',nType4);            set(a,'userdata',handles);   	DrawAnalysisWindow;      hr_slidercrank_ana('ShowFigure');      hr_slidercrank_ana('Start');   else      return;   end             case 'PutFile'   [sFileName sFilePath] = uiputfile('*.dat','Save As');      a = findobj('Tag','SC Coupler Curve Analysis Window');      handles = get(a,'userdata');      nFigNum  = get(handles(1),'Value');   nType1 = get(handles(2),'Value');	nType2 = get(handles(3),'Value');   nType3 = get(handles(4),'Value');   nType4 = get(handles(5),'Value');   ParameterData = [nFigNum; nType1; nType2; nType3; nType4];   %   sTemp = strcat( sFilePath, sFileName)   [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);   [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');   eval(strCmd);      end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow()a = findobj('Tag','SC Coupler Curve Analysis Window');handles = get(a,'userdata');h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);h_fig3 = handles(4);h_fig4 = handles(5);nFigNum=get(h_fignum,'Value');position = zeros( 4, 4, 4);position(1,1,:) = [0.08 0.25 0.87 0.73];position(2,1,:) = [0.25 0.63 0.5 0.36];position(2,2,:) = [0.25 0.198 0.5 0.36];position(3,1,:) = [0.1 0.42 0.38 0.31];position(3,2,:) = [0.58 0.65 0.38 0.31];position(3,3,:) = [0.58 0.22 0.38 0.31];position(4,1,:) = [0.1 0.65 0.38 0.31];position(4,2,:) = [0.58 0.65 0.38 0.31];position(4,3,:) = [0.1 0.22 0.38 0.31];position(4,4,:) = [0.58 0.22 0.38 0.31]; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:9,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 17:20,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 1:nFigNum,	set(handles(i+1),'Enable','on');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 1	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...   'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 3%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 3	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 4%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 4	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...   'Color',[1 1 1], ...	'Position',position(4,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(4,4,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(20) = b;h_4 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(4,4,:), ...	'Tag','Axes4', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;handles(9) = h_4;end	set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig();strFigType = [ ...      'slider dis ';...      'cp vel     ';...      'cp acc     ';...      'mechanism  '];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-50 ScreenSize(4)-sy-80 sx sy ] ;a = figure('Units','Pixels', ...		'Color',[0.8 0.8 0.8], ...      'Name','SC Coupler Curve Analysis Window', ...       'NumberTitle','off', ...		'Position',FigPos, ...	 	'Tag','SC Coupler Curve Analysis Window');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...   'Position',[0.01731 0.020 0.77 0.1117], ...   'Style','frame', ...	'Tag','Frame2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.7808 0.020 0.2038 0.1117], ...   'Style','frame', ...   'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');h_load = uimenu('Parent',b, ...	'Callback','hr_slidercrank_ana(''GetFile'')', ...	'Label','Load', ...	'Tag','submenu_load');h_save = uimenu('Parent',b, ...	'Callback','hr_slidercrank_ana(''PutFile'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...	'Position',[0.03 0.07 0.095 0.03911], ... 	'String','No. of figs ', ...	'Style','text', ...	'Tag','StaticText2');h_fignum = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_slidercrank_ana(''ChangeFigureNo'');', ...   'Position',[0.135 0.0837 0.10 0.03538], ...   'String',['1';'2';'3';'4'], ...   'Style','popupmenu', ...	'Tag','FigNumber', ... 	'Value',4);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.03 0.02793 0.08 0.03910], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_slidercrank_ana(''SetSpeed'',0.707);', ...   'Position',[0.1327 0.02955 0.04038 0.03182], ...    'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_slidercrank_ana(''SetSpeed'',1.414);', ...   'Position',[0.2 0.02955 0.04038 0.03182], ...   'String','-', ... 	'Tag','Minus_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.07821 0.06262 0.03724], ...   'String','Fig 1', ...	'Style','text', ... 	'Tag','StaticText1'); b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.08007 0.06262 0.03724], ...   'String','Fig 2', ...	'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.03352 0.06262 0.03724], ...   'String','Fig 3', ...   'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.03724 0.06262 0.03724], ...   'String','Fig 4', ...	'Style','text', ...	'Tag','StaticText1');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup the Popup menu contents for Figure Type Selection 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_fig1 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_slidercrank_ana(''ChangeFigure'',1);', ...   'Position',[0.3077 0.0837 0.19256 0.03538], ...   'String',strFigType, ... 	'Style','popupmenu', ...	'Tag','Fig1', ...	'Value',4);h_fig2 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_slidercrank_ana(''ChangeFigure'',2);', ...   'Position',[0.5692 0.0837 0.19256 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig2', ...	'Value',1);h_fig3 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_slidercrank_ana(''ChangeFigure'',3);', ...   'Position',[0.3077 0.04024 0.1926 0.03538], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig3', ...	'Value',2);h_fig4 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','hr_slidercrank_ana(''ChangeFigure'',4);', ...   'Position',[0.5692 0.04024 0.1926 0.03538], ...   'String',strFigType, ...   'Style','popupmenu', ...	'Tag','Fig4', ...	 'Value',3);	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','hr_slidercrank_ana(''Start'')', ...   'Position',[0.7942 0.07727 0.08577 0.04318], ...   'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','hr_slidercrank_ana(''Stop'')', ...	'Position',[0.8854 0.07727 0.08577 0.04318], ...    'String','Stop', ...   'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','hr_slidercrank_ana(''Return'')', ...	'Position',[0.7942 0.02891 0.1773 0.04318], ...    'String','Return', ...   'Tag','return_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(4) = h_fig3;handles(5) = h_fig4;handles(10) = nAnimationFlag;handles(15) = 1;% initial animation starting indexhandles(16) = 0.1;% initial timesink valuehandles(21) = h_load;handles(22) = h_save;handles(23) = h_return;handles(24) = h_plus;set( a, 'Userdata', handles);drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(4) = h_fig3;handles(5) = h_fig4;handles(10) = nAnimationFlag;handles(15) = 1;% initial animation starting indexhandles(16) = 0.1;% initial timesink valuehandles(21) = h_load;handles(22) = h_save;handles(23) = h_return;handles(24) = h_plus;set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	String Table%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [ labels ] = GetFigLabel( nFigType )	strTable = cell( 3, 3 );   strTable( 1,:) = {'crank angle (deg)';'slider distance (len)';'slider displacement';};   strTable( 2,:) = {'crank angle (deg)';'coupler pt velocity (len/s)';...                    'coupler point velocity graph';};   strTable( 3,:) = {'crank angle (deg)';'coupler pt acceleration (len/s^2)';...                    'coupler point acceleration graph';};   labels = strTable( nFigType, : );%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] =  CalcResult( r,w2,r6,beta );r2 = r(1);r3 = r(2);r4 = r(3);r1=sqrt(((r2+r3).^2)-(r4.^2));theta1r=(2*pi)-atan2(r4,r1);theta1=(180/pi)*theta1r;sigma=1;flag=3;%driver == 'c';Q2=0;% Locate the first position of the linkagea1=[0 0];b1=[r2 0];c1=[(r2+r3) 0];d1=[(r1*cos(theta1r)) (r1*sin(theta1r))];% Define the piston datar=[r2 r3 r4];rtot=sum(r);lpist=rtot/8;hpist=rtot/16;coor=rect((lpist),(hpist),0,0,theta1,0);pistx=coor(:,1);pisty=coor(:,2);coor=bushing((rtot/70),0,0,20,0);bushx=coor(:,1);bushy=coor(:,2);coor=circle2((rtot/60),0,0,20);circx=coor(:,1);circy=coor(:,2);coor=frameline(((r2+r3)*1.05),(r2*cos((2*pi)-theta1r)),...     ((-r2*sin((2*pi)-theta1r))-(rtot/30)),20,theta1,1);framex=coor(:,1);framey=coor(:,2);	% Compute the grid coordinatesrr=r6;      ppheta=beta*pi/180;	  % Loop to vary the linkage positiongp=1; 	   dx=5;fc=360;dc=fc/dx;i=0;for count=0:dx:fc;	i=i+1;	Q2=count;	para=sldcrkc(r2,r3,r4,Q2,w2,0,sigma,theta1,flag);	% Store position variables in matrices	Q22(i)=para(6);	Bx(i)=para(25);	By(i)=para(26);	Cx(i)=para(27);	Cy(i)=para(28);	Dx(i)=para(27)-(r4*sin((2*pi)-theta1r));	Dy(i)=para(28)-(r4*cos((2*pi)-theta1r));		mx(i)=Bx(i)+rr*cos((para(7)*pi/180)+ppheta);	my(i)=By(i)+rr*sin((para(7)*pi/180)+ppheta);   r11(i)=para(1);   r1d(i)=para(5);   w22(i)=para(14);   w33(i)=para(15);   r1dd(i)=para(9);   vbx(i)=para(29);   vby(i)=para(30);   vcx(i)=para(31);   vcy(i)=para(32);   abx(i)=para(33);   aby(i)=para(34);   acx(i)=para(35);   acy(i)=para(36);	  end itotal=i;width=0.95;height=0.95;xmina=min([min(min(mx)) min(Bx) ...		min(Cx) min(Dx) min(bushx) min(framex)]);xmaxa=max([max(max(mx)) max(Bx) ...		max(Cx) max(Dx) max(bushx) max(framex)]);ymina=min([min(min(my)) min(By) ...		min(Cy) min(Dy) min(bushy) min(framey)]);ymaxa=max([max(max(my)) max(By) ...	max(Cy) max(Dy) max(bushy) max(framey)]);rangex=xmaxa-xmina;rangey=ymaxa-ymina;xmin=xmina-0.05*rangex;xmax=xmaxa+0.05*rangex;ymin=ymina-0.05*rangey;ymax=ymaxa+0.05*rangey;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin=values(1);xmax=values(2);ymin=values(3);ymax=values(4);%r6=sqrt((Bx(1)-mx(1))^2+(By(1)-my(1))^2);%beta=(180/pi)*atan2((my(1)-By(1)),(mx(1)-Bx(1)));for i=1:itotal	para=rbody1(r6,beta,Bx(i),By(i),Cx(i),Cy(i),vbx(i),vby(i),vcx(i),vcy(i),...	      abx(i),aby(i),acx(i),acy(i),3);	vmx=para(3);	vmy=para(4);	vm(i)=sqrt((vmx.^2)+(vmy.^2));	amx=para(5);	amy=para(6);	am(i)=sqrt((amx.^2)+(amy.^2));end res = zeros( 15, itotal);i = 0;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = r11;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = vm;i = i+1; res( i,: ) = Q22;i = i+1; res( i,: ) = am;i = i+1; res( i,: ) = Bx;i = i+1; res( i,: ) = By; i = i+1; res( i,: ) = Cx;i = i+1; res( i,: ) = Cy;i = i+1; res( i,: ) = Dx;i = i+1; res( i,: ) = Dy;% pistx and pisty are matries with size (5,1)i = i+1; res( i,1:5 ) = pistx';i = i+1; res( i,1:5 ) = pisty';i = i+1; res( i,: ) = mx;i = i+1; res( i,: ) = my;      i = 16;res( i+1,1 ) = xmin;res( i+1,2 ) = xmax;res( i+1,3 ) = ymin;res( i+1,4 ) = ymax;res( i+1,5:8 ) = [r1 r2 r3 r4];res( i+1,9 ) = theta1r;res( i+1,10 ) = hpist;res( i+1,11 ) = w2;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function CreateMechanismHandles( handle,r,theta1r,mx,my,xmin,xmax,ymin,ymax)axes(handle);set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;hdls = get(handle,'userdata');if ~isempty(hdls)   if hdls ~= 0      delete(hdls);   end   endaxis([xmin, xmax, ymin, ymax]);r2 = r(2);r3 = r(3);rtot=sum(r(2:4));theta1=(180/pi)*theta1r;coor=bushing((rtot/70),0,0,20,0);bushx=coor(:,1);bushy=coor(:,2);coor=circle2((rtot/60),0,0,20);circx=coor(:,1);circy=coor(:,2);coor=frameline(((r2+r3)*1.05),(r2*cos((2*pi)-theta1r)),...     ((-r2*sin((2*pi)-theta1r))-(rtot/30)),20,theta1,1);framex=coor(:,1);framey=coor(:,2);	[n m]=size(mx);itotal=m;		joint1=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',6, 'color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','markersize',6, 'color', 'k');crank=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');	   	      coupline1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color','k');coupline2=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'k');gridpoint=line('xdata',[],'ydata',[],'marker','o','markersize',6,'color','k');gridline=line('xdata',[],'ydata',[],'linestyle', '-','linewidth',1,'color','g');for ipoints =1:itotal	   	gridline1(ipoints)=line('xdata',[],'ydata',[],'linewidth',1,'color','r','linestyle','-');	end	   busho=line('xdata', [], 'ydata',[], 'linestyle', '-','markersize', 6,'color', 'r');circo=line('xdata', [], 'ydata',[], 'linestyle', '-','markersize', 6,'color', 'r');pisto=line('xdata',[],'ydata',[],'linestyle','-','linewidth',1,'color','k');frame=line('xdata',[],'ydata',[],'linewidth',1,'linestyle','-','color','r');slline=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');   %draw the coupler curved dashedfor ipoints = 1:itotal	if ipoints <itotal		msdx=mx(ipoints);		midx=mx(ipoints)+(mx(ipoints+1)-mx(ipoints))/2;		msdy=my(ipoints);		midy=my(ipoints)+(my(ipoints+1)-my(ipoints))/2;	end	if ipoints ==itotal		msdx=mx(ipoints);		midx=mx(ipoints)+(mx(1)-mx(ipoints))/2;		msdy=my(ipoints);		midy=my(ipoints)+(my(1)-my(ipoints))/2;	end					set(gridline1(ipoints),'xdata', [msdx midx],'ydata',[msdy midy]);endset(busho,'xdata',bushx,'ydata',bushy);set(circo,'xdata',circx,'ydata',circy);set(frame,'xdata',framex,'ydata',framey);drawnow;		hdls = [joint1 joint2 crank coupler pisto coupline1 coupline2 slline gridpoint gridline]; set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition( link,i,hpist,theta1r,Bx,By,Cx,Cy,Dx,Dy,pistx,pisty,mx,my)joint1 = link(1);joint2 = link(2);crank = link(3);coupler = link(4);pisto = link(5);coupline1 = link(6);coupline2 = link(7);slline = link(8);gridpoint = link(9);set(pisto,'xdata',(pistx+Dx(i)),'ydata',(pisty+Dy(i)));set(joint1,'xdata', Bx(i), 'ydata',By(i));set(joint2,'xdata', Cx(i), 'ydata',Cy(i));set(crank,'xdata',[0 Bx(i)],'ydata', [0 By(i)]);set(coupler,'xdata', [Bx(i) Cx(i)],'ydata', [By(i) Cy(i)]);set(coupline1, 'xdata', [Bx(i) mx(i)], 'ydata',[By(i) my(i)]);set(coupline2, 'xdata', [Cx(i) mx(i)], 'ydata',[Cy(i) my(i)]);			set(slline,'xdata',[Cx(i) Dx(i)-(hpist/2)*sin(theta1r)], ...			'ydata',[Cy(i) Dy(i)+(hpist/2)*cos(theta1r)]);set(gridpoint,'xdata',mx(i),'ydata',my(i));
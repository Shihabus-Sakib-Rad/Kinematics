function off_cam_ana(Action,length,direction,ainc)% the contents of the userdata of Analysis Window % handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(4) = handle of fig3 popupmenu% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(8) = handle of axe3% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(13) = handle of bead(3)% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1% handles(18) = handle of reference axe for axe2% handles(19) = handle of reference axe for axe3% handles(20) = handle of reference axe for axe4% handles(21) = handle of submenu 'Load'% handles(22) = handle of submenu 'Save'% handles(23) = handle of return button;% handles(24) = handle of speed plus button;% handles(25) = flag1;% each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler rocker];      global strFigType global nAnimationFlagglobal g_AnaResglobal nChangeSpeed% Define the axes for the first graph (input/output angle graph)if nargin==0 && isempty(findobj('Tag','OFF Cam Analysis Window')),  % cogana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','OFF Cam Analysis Window'))      % cogana is already open   Action='None';elseif nargin== 1 && ~isempty(findobj('Tag','OFF Cam Analysis Window')) && strcmp( Action, 'initialize'), % cogana is already open	% Recalculate the value, and then redraw	Action='None';endswitch Action   case 'initialize'   if  isempty(findobj('Tag','OFF Cam Analysis Window'))         LocalOpenFig;      nAnimationFlag = 0;   else  		off_cam_ana('None');   end      if nargin < 7       rb = 2;      r1 = 6;      r3 = 9;      d = 0.5;      rised = 15;      direction = '-';   	ainc = 10;   end      if exist('nAnimationFlag')       if nAnimationFlag == 1      	off_cam_ana('Stop');         return;      end   end   rb = length(1);   rised=length(3);   r1 = length(6);   r3 = length(8);   d = length(9);   g_AnaRes = CalcResult( rb,r1,r3,d,rised,direction,ainc );   DrawAnalysisWindow;   off_cam_ana('ShowFigure');   off_cam_ana('Start');    	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	%	Change Figure Call Back Function	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'ChangeFigure'   DrawAnalysisWindow;   off_cam_ana('ShowFigure');   off_cam_ana('Start');   case 'SetSpeed'   rb = length(1);   nChangeSpeed = rb;   case 'ChangeFigureNo'   DrawAnalysisWindow;   off_cam_ana('ShowFigure');   off_cam_ana('Start');   case 'Animation'   a = findobj('Tag','OFF Cam Analysis Window');      handles = get(a,'userdata');   Q1 = 0;      [ m, n ] = size( g_AnaRes);   jtotal = g_AnaRes(m,7);   ntotal = g_AnaRes(m,8);   rotinc = g_AnaRes(m,9);   itotal = ntotal;   timesink = handles(16);   i = handles(15);   dt = 5;         nFigNum  = get( handles(1),'value');   nType(1) = get( handles(2),'value');   nType(2) = get( handles(3),'value');   nType(3) = get( handles(4),'value');%   nType(4) = get( handles(5),'value');     %*************** 4th fig. ****************************         bead  = zeros(1,4);   links = zeros(4,2);   bead(1) = handles(11);   bead(2) = handles(12);   bead(3) = handles(13);%   bead(4) = handles(14);           %*************** 4th fig. ****************************      u = 14;   u = u+1; xca = g_AnaRes(u:u+ntotal-1,1:jtotal);   u = u+ntotal; yca = g_AnaRes(u:u+ntotal-1,1:jtotal);   u = u+ntotal; xstema = g_AnaRes(u:u+2,1:ntotal);   u = u+3; ystema = g_AnaRes(u:u+2,1:ntotal);   xstema = xstema';   ystema = ystema';      for j = 1:nFigNum      if nType(j) == 1       	links(j,:) = get(handles(j+5),'userdata');     	end   end      % set timer   tic;   while nAnimationFlag                      cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i ==1         drawnow;      end               if nFigNum > 0         if nType(1) == 1   			SetMechanismPosition( links(1,:),i,xca,yca,xstema,ystema);         else         j = nType(1) * 2 -3;         set(bead(1), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));   		end      end               	if nFigNum > 1         if nType(2) == 1   			SetMechanismPosition( links(2,:),i,xca,yca,xstema,ystema);         else         j = nType(2) * 2 -3;         set(bead(2), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end        end         	if nFigNum > 2         if nType(3) == 1   			SetMechanismPosition( links(3,:),i,xca,yca,xstema,ystema);         else         j = nType(3) * 2 -3;         set(bead(3), 'xdata', g_AnaRes(j,i), 'ydata', g_AnaRes(j+1,i));         end      end           	drawnow;   %flush the draw buffer%      i= i+1;% In cam program, the increment is decided by ainc, a variable given by users% therefore, we setup animation increment = rotinc which is a variable directly% decided by ainc.      i= i+rotinc;      if i >= itotal         i = 1;      end      if nChangeSpeed ~= 0         timesink = timesink * nChangeSpeed;         nChangeSpeed = 0;      end      while toc < timesink      end         tic;   end      nAnimationFlag = 0;   handles(15) = i;   handles(16) = timesink;   set(a,'Userdata',handles);   case 'ShowFigure'   a = findobj('Tag','OFF Cam Analysis Window');   handles = get( a,'userdata');   nFigNum = get(handles(1),'value');   [ m, n ] = size( g_AnaRes);   axislimit = g_AnaRes(m,1:4);   bpoints = g_AnaRes( m,5);   npoints = g_AnaRes( m,6);   jtotal = g_AnaRes( m,7);   ntotal = g_AnaRes( m,8);      u = 6;   u = u+1; xbush1 = g_AnaRes(u,1:bpoints);   u = u+1; ybush1 = g_AnaRes(u,1:bpoints);   u = u+1; xcoordcp = g_AnaRes(u,1:npoints);   u = u+1; ycoordcp = g_AnaRes(u,1:npoints);   u = u+1; xbush2 = g_AnaRes(u,1:bpoints);   u = u+1; ybush2 = g_AnaRes(u,1:bpoints);   u = u+1; xcoordfp = g_AnaRes(u,1:npoints);   u = u+1; ycoordfp = g_AnaRes(u,1:npoints);   qstart = 0;   qstop = 360;   if nFigNum > 0      nType = get(handles(2),'value');      axes(handles(6));      if nType == 1         CreateMechanismHandles( handles(6),axislimit,xcoordcp,ycoordcp,xbush1,ybush1,xcoordfp,ycoordfp,xbush2,ybush2);      else         i = nType * 2 -3;         line1 = line( 'xdata', g_AnaRes(i,1:ntotal), 'ydata', g_AnaRes(i+1,1:ntotal),'tag','line3','color', 'r');   		b1 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b3');        	handles(11) = b1;   		labels = GetFigLabel( nType-1 );        	xlabel(labels(1));        	ylabel(labels(2));         set(handles(6), 'XTick',[0 60 120 180 240 300 360]);         axis([qstart qstop 0.8*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);      end   end         if nFigNum > 1      nType = get(handles(3),'value');      axes(handles(7));      if nType == 1         CreateMechanismHandles( handles(7),axislimit,xcoordcp,ycoordcp,xbush1,ybush1,xcoordfp,ycoordfp,xbush2,ybush2);      else         i = nType * 2 -3;         line2 = line( 'xdata', g_AnaRes(i,1:ntotal), 'ydata', g_AnaRes(i+1,1:ntotal),'tag','line3','color', 'r');   		b2 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b3');        	handles(12) = b2;   		labels = GetFigLabel( nType-1 );        	xlabel(labels(1));        	ylabel(labels(2));         set(handles(7), 'XTick',[0 60 120 180 240 300 360]);         axis([qstart qstop 0.8*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);      end   end            if nFigNum > 2      nType = get(handles(4),'value');      axes(handles(8));      if nType == 1         CreateMechanismHandles( handles(8),axislimit,xcoordcp,ycoordcp,xbush1,ybush1,xcoordfp,ycoordfp,xbush2,ybush2);      else         i = nType * 2 -3;         line3 = line( 'xdata', g_AnaRes(i,1:ntotal), 'ydata', g_AnaRes(i+1,1:ntotal),'tag','line3','color', 'r');   		b3 = line('xdata', [], 'ydata', [],'marker','o','markersize', 6, 'tag','b3');        	handles(13) = b3;   		labels = GetFigLabel( nType-1 );        	xlabel(labels(1));        	ylabel(labels(2));         set(handles(8), 'XTick',[0 60 120 180 240 300 360]);         axis([qstart qstop 0.8*min(g_AnaRes(i+1,:)) 1.2*max(g_AnaRes(i+1,:)) ]);      end   end            drawnow;   a = findobj('Tag','OFF Cam Analysis Window');      set(a,'Userdata',handles);   case 'None'   figure( findobj('Tag','OFF Cam Analysis Window'));% Bring the figure to front, if it already existscase 'Close'   off_cam_ana('Stop');   a = findobj('Tag','OFF Cam Analysis Window');      close(a);case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','OFF Cam Analysis Window');      handles = get(a,'userdata');   set(handles(1),'Enable','off');   set(handles(2),'Enable','off');   set(handles(3),'Enable','off');   set(handles(4),'Enable','off');%   set(handles(5),'Enable','off');      %*************** 4th fig. ****************************   set(handles(21),'Enable','off');   set(handles(22),'Enable','off');   set(handles(23),'Enable','off');      nAnimationFlag = 1;   nChangeSpeed = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   off_cam_ana('Animation');   case 'Stop'   if  isempty(findobj('Tag','OFF Cam Analysis Window'))     	return;      end   a = findobj('Tag','OFF Cam Analysis Window');      handles = get(a,'userdata');   nAnimationFlag = 0;   handles(10) = nAnimationFlag;   set(a,'userdata',handles);   set(handles(1),'Enable','on');   set(handles(21),'Enable','on');   set(handles(22),'Enable','on');   set(handles(23),'Enable','on');   nFigNum = get(handles(1),'value');   for i = 1:nFigNum,     	set(handles(i+1),'Enable','on');   end      case 'Return'       %************************ modified to close analysis window ******************   off_cam_ana('Stop');%    if ~isempty(findobj('Tag','cam_dsgn'))   %      	b = findobj('Tag','cam_dsgn');%       figure(b);%      	b = findobj('Tag','OFF Cam Analysis Window');   %      	close(b);%    else%   	   return;      %    end   a = findobj('Tag','OFF Cam Analysis Window');      close(a);case 'Get File'% Get the file name using the UIGETFILE   [sFileName sFilePath] = uigetfile('*.dat','Load File');    if sFileName == 0 && sFilePath == 0   	return;   end% Combine the path and file name together   sTemp = strcat( sFilePath, sFileName );% get the size to erase the '.dat' extension    sz = size(sFileName);% load the data file   load(sTemp);% assign the parameter to a variable   Parameter = eval(sFileName(1:(sz(2)-4)));    a = findobj('Tag','Analysis Window');   handles = get(a,'userdata');   if length(Parameter) == 5   	nFigNum = Parameter(1);   	nType1 = Parameter(2);   	nType2 = Parameter(3);   	nType3 = Parameter(4);%    nType4 = Parameter(5);          %*************** 4th fig. ****************************   	set(handles(1),'Value',nFigNum);    set(handles(2),'Value',nType1);   	set(handles(3),'Value',nType2);   	set(handles(4),'Value',nType3);%    set(handles(5),'Value',nType4);     %*************** 4th fig. ****************************   	set(a,'userdata',handles);   	DrawAnalysisWindow;   	off_cam_ana('ShowFigure');   	off_cam_ana('Start');   else   	return;   endcase 'Put File'   [sFileName sFilePath] = uiputfile('*.dat','Save As');    a = findobj('Tag','Analysis Window');   handles = get(a,'userdata');   nFigNum = get(handles(1),'Value');   nType1 = get(handles(2),'Value');   nType2 = get(handles(3),'Value');   nType3 = get(handles(4),'Value');%   nType4 = get(handles(5),'Value');        %*************** 4th fig. ****************************   ParameterData = [nFigNum; nType1; nType2; nType3]; % sTemp = strcat( sFilePath, sFileName)   [sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);   [strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');   eval(strCmd);end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow()a = findobj('Tag','OFF Cam Analysis Window');handles = get(a,'userdata');h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);h_fig3 = handles(4);nFigNum=get(h_fignum,'Value');position = zeros( 4, 4, 4);position(1,1,:) = [0.2 0.25 0.6 0.6];position(2,1,:) = [0.25 0.65 0.5 0.31];position(2,2,:) = [0.25 0.22 0.5 0.31];position(3,1,:) = [0.1 0.42 0.38 0.31];position(3,2,:) = [0.58 0.65 0.38 0.31];position(3,3,:) = [0.58 0.22 0.38 0.31];%***************** 4th fig. ***********************************************% position(4,1,:) = [0.1 0.65 0.38 0.31];% position(4,2,:) = [0.58 0.65 0.38 0.31];% position(4,3,:) = [0.1 0.22 0.38 0.31];% position(4,4,:) = [0.58 0.22 0.38 0.31]; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:8,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 17:19,	if handles(i) ~= 0		delete(handles(i));		handles(i) = 0;	endendfor i = 1:nFigNum,	set(handles(i+1),'Enable','on');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 1	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(1,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...   'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(2,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 3%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 3	b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(17) = b;h_1 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,1,:), ...	'Tag','Axes1', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(18) = b;h_2 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,2,:), ...	'Tag','Axes2', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);b = axes('Parent',a, ...	'Box','on', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'XColor',[0 0 0], ...	'XGrid','off', ...	'XTick',[],...	'YColor',[0 0 0], ...	'YGrid','off', ...	'YTick',[], ...	'ZColor',[0 0 0], ...	'ZGrid','off', ...	'ZTick',[]);handles(19) = b;h_3 = axes('Parent',a, ...	'CameraUpVector',[0 1 0], ...	'CameraUpVectorMode','manual', ...	'Color',[1 1 1], ...	'Position',position(3,3,:), ...	'Tag','Axes3', ...	'XColor',[0 0 0], ...	'YColor',[0 0 0], ...	'ZColor',[0 0 0]);handles(6) = h_1;handles(7) = h_2;handles(8) = h_3;end% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Axis 4  ******** 4th fig. ************************************************% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if nFigNum == 4% 	b = axes('Parent',a, ...% 	'Box','on', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,1,:), ...% 	'XColor',[0 0 0], ...% 	'XGrid','off', ...% 	'XTick',[],...% 	'YColor',[0 0 0], ...% 	'YGrid','off', ...% 	'YTick',[], ...% 	'ZColor',[0 0 0], ...% 	'ZGrid','off', ...% 	'ZTick',[]);% handles(17) = b;% % h_1 = axes('Parent',a, ...% 	'CameraUpVector',[0 1 0], ...% 	'CameraUpVectorMode','manual', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,1,:), ...% 	'Tag','Axes1', ...% 	'XColor',[0 0 0], ...% 	'YColor',[0 0 0], ...% 	'ZColor',[0 0 0]);% % b = axes('Parent',a, ...% 	'Box','on', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,2,:), ...% 	'XColor',[0 0 0], ...% 	'XGrid','off', ...% 	'XTick',[],...% 	'YColor',[0 0 0], ...% 	'YGrid','off', ...% 	'YTick',[], ...% 	'ZColor',[0 0 0], ...% 	'ZGrid','off', ...% 	'ZTick',[]);% handles(18) = b;% % h_2 = axes('Parent',a, ...% 	'CameraUpVector',[0 1 0], ...% 	'CameraUpVectorMode','manual', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,2,:), ...% 	'Tag','Axes2', ...% 	'XColor',[0 0 0], ...% 	'YColor',[0 0 0], ...% 	'ZColor',[0 0 0]);% % b = axes('Parent',a, ...% 	'Box','on', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,3,:), ...% 	'XColor',[0 0 0], ...% 	'XGrid','off', ...% 	'XTick',[],...% 	'YColor',[0 0 0], ...% 	'YGrid','off', ...% 	'YTick',[], ...% 	'ZColor',[0 0 0], ...% 	'ZGrid','off', ...% 	'ZTick',[]);% handles(19) = b;% % h_3 = axes('Parent',a, ...% 	'CameraUpVector',[0 1 0], ...% 	'CameraUpVectorMode','manual', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,3,:), ...% 	'Tag','Axes3', ...% 	'XColor',[0 0 0], ...% 	'YColor',[0 0 0], ...% 	'ZColor',[0 0 0]);% % b = axes('Parent',a, ...% 	'Box','on', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,4,:), ...% 	'XColor',[0 0 0], ...% 	'XGrid','off', ...% 	'XTick',[],...% 	'YColor',[0 0 0], ...% 	'YGrid','off', ...% 	'YTick',[], ...% 	'ZColor',[0 0 0], ...% 	'ZGrid','off', ...% 	'ZTick',[]);% handles(20) = b;% % h_4 = axes('Parent',a, ...% 	'CameraUpVector',[0 1 0], ...% 	'CameraUpVectorMode','manual', ...% 	'Color',[1 1 1], ...% 	'Position',position(4,4,:), ...% 	'Tag','Axes4', ...% 	'XColor',[0 0 0], ...% 	'YColor',[0 0 0], ...% 	'ZColor',[0 0 0]);% % handles(6) = h_1;% handles(7) = h_2;% handles(8) = h_3;% handles(9) = h_4;% end	set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig();strFigType = [ ...   	'mechanism           ';...      'displacement graph  ';...      'pressure angle graph'];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','Pixels', ...	'Color',[0.8 0.8 0.8], ...   'Name','OFF Cam Analysis Window', ...    'NumberTitle','off', ...	'Position',FigPos, ... 	'Tag','OFF Cam Analysis Window');	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',[0.752941 0.752941 0.752941], ...   'Position',[0.01731 0.020 0.77 0.1117], ...   'Style','frame', ...	'Tag','Frame2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.7808 0.020 0.2038 0.1117], ...   'Style','frame', ...   'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');h_load = uimenu('Parent',b, ...	'Callback','off_cam_ana(''GetFile'')', ...	'Label','Load', ...	'Tag','submenu_load');h_save = uimenu('Parent',b, ...	'Callback','off_cam_ana(''PutFile'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...	'Position',[0.03 0.07 0.095 0.03911], ... 	'String','No. of figs ', ...	'Style','text', ...	'Tag','StaticText2');h_fignum = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','off_cam_ana(''ChangeFigureNo'');', ...   'Position',[0.135 0.0985 0.10 0.027], ...   'String',['1';'2';'3'], ...   'Style','popupmenu', ...	'Tag','FigNumber', ... 	'Value',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.03 0.02793 0.08 0.03910], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','off_cam_ana(''SetSpeed'',0.707);', ...   'Position',[0.1327 0.02955 0.04038 0.03182], ...    'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','off_cam_ana(''SetSpeed'',1.414);', ...   'Position',[0.2 0.02955 0.04038 0.03182], ...   'String','-', ... 	'Tag','Minus_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.07821 0.06262 0.03724], ...   'String','Fig 1', ...	'Style','text', ... 	'Tag','StaticText1'); b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.5019 0.08007 0.06262 0.03724], ...   'String','Fig 2', ...	'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.2442 0.03352 0.06262 0.03724], ...   'String','Fig 3', ...   'Style','text', ...	'Tag','StaticText1');% %*************** 4th fig. ************************************************% b = uicontrol('Parent',a, ...% 	'Units','normalized', ...%    'Position',[0.5019 0.03352 0.06262 0.03724], ...%    'String','Fig 4', ...%    'Style','text', ...% 	'Tag','StaticText1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup the Popup menu contents for Figure Type Selection 	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_fig1 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','off_cam_ana(''ChangeFigure'',1);', ...   'Position',[0.3077 0.0985 0.19256 0.027], ...   'String',strFigType, ... 	'Style','popupmenu', ...	'Tag','Fig1', ...	'Value',1);h_fig2 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','off_cam_ana(''ChangeFigure'',2);', ...   'Position',[0.5692 0.0985 0.19256 0.027], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig2', ...	'Value',2);h_fig3 = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','off_cam_ana(''ChangeFigure'',3);', ...   'Position',[0.3077 0.0495 0.1926 0.027], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig3', ...	'Value',3);% %*************** 4th fig. ************************************************% h_fig4 = uicontrol('Parent',a, ...% 	'Units','normalized', ...%    'Callback','ff_cam_ana(''ChangeFigure'',4);', ...%    'Position',[0.5692 0.0495 0.1926 0.027], ...%    'String',strFigType, ...% 	'Style','popupmenu', ...% 	'Tag','Fig4', ...% 	'Value',4);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','off_cam_ana(''Start'')', ...   'Position',[0.7942 0.07727 0.08577 0.04318], ...   'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','off_cam_ana(''Stop'')', ...	'Position',[0.8854 0.07727 0.08577 0.04318], ...    'String','Stop', ...   'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','off_cam_ana(''Return'')', ...	'Position',[0.7942 0.02891 0.1773 0.04318], ...    'String','Return', ...   'Tag','return_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(4) = h_fig3;handles(5) = 0;%handles(5) = h_fig4;     %********** 4th fig. **********************************************handles(10) = nAnimationFlag;handles(15) = 1;% initial animation starting indexhandles(16) = 0.1;% initial timesink valuehandles(21) = h_load;handles(22) = h_save;handles(23) = h_return;handles(24) = h_plus;set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	String Table%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [ labels ] = GetFigLabel( nFigType )strTable = cell( 3, 3 );strTable( 1,:) = {'cam angle (deg)';'follower displacement';'follower displacement graph';};strTable( 2,:) = {'cam angle (deg)';'pressure angle (deg)';'pressure angle graph';};labels = strTable( nFigType, : );%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] = CalcResult( rb,r1,r3,d,rised,direction,ainc );fact=pi/180;rise=rised*fact;% Compute phi0.ae=r1/(1+d/rb);be=sqrt(ae^2-rb^2);phi0=atan2(rb, be);% Compute the angular displacement of the flat-faced follower.  The variable% dtheta will change the resolution of the cam.  Make it smaller for% more accurate results.		dtheta=ainc;if direction=='+'	dtheta=-ainc;endtemp=-dtheta;n=abs(360/dtheta);% Compute the follower displacement and follower center coordinates % relative to cam.for j=1:1:n	temp=temp+dtheta;	theta(j)=temp;	camangle(j)=abs(theta(j));	[coords]=follower(camangle(j),rise);	f(j)=coords(1);	fd(j)=f(j)/fact;	tt=theta(j)*fact;	if tt<0; tt=tt+2*pi; end	mu=3*pi/2+tt-f(j)-phi0;	beta(j)=tt-f(j)-phi0;	cm=cos(mu);	sm=sin(mu);	ct=cos(tt);	st=sin(tt);	XC(j)=r1*ct;	YC(j)=r1*st;	XD(j)=XC(j)+d*cos(mu);	YD(j)=YC(j)+d*sin(mu);end% Compute the XG.B=[XD(1)-XD(n);YD(1)-YD(n)];A=[-cos(beta(1)) cos(beta(n));-sin(beta(1)) sin(beta(n))];t=A\B;s(1)=t(1);XG(1)=XD(1)+s(1)*cos(beta(1));YG(1)=YD(1)+s(1)*sin(beta(1));gamma(1)=(beta(1)+beta(n))/2+3*pi/2;for i=2:1:n	B=[XD(i)-XD(i-1);YD(i)-YD(i-1)];	A=[-cos(beta(i)) cos(beta(i-1));-sin(beta(i)) sin(beta(i-1))];	t=A\B;	s(i)=t(1);	XG(i)=XD(i)+s(i)*cos(beta(i));	YG(i)=YD(i)+s(i)*sin(beta(i));	gamma(i)=(beta(i)+beta(i-1))/2+3*pi/2;	if gamma(i)>2*pi; gamma(i)=gamma(i)-2*pi; endend% Compute the XM.B=[XG(n)-XG(1); YG(n)-YG(1)];A=[-cos(gamma(n)) cos(gamma(1));-sin(gamma(n)) sin(gamma(1))];t=A\B;v(n)=t(1);XM(n)=XG(n)+v(n)*cos(gamma(n));YM(n)=YG(n)+v(n)*sin(gamma(n));for i=1:1:n-1	B=[XD(i)-XD(i+1); YD(i)-YD(i+1)];	A=[-cos(gamma(i)) cos(gamma(i+1));-sin(gamma(i)) sin(gamma(i+1))];	t=A\B;	v(i)=t(1);	XM(i)=XG(i)+v(i)*cos(gamma(i));	YM(i)=YG(i)+v(i)*sin(gamma(i));end% Compute the cam coordinates.for i=1:1:n	B=[XM(i)-XG(i); YM(i)-YG(i)];	kappa(i)=beta(i)+pi/2;	A=[-cos(kappa(i)) cos(beta(i));-sin(kappa(i)) sin(beta(i))];	t=A\B;	z(i)=t(2);	xc(i)=XG(i)+z(i)*cos(beta(i));	yc(i)=YG(i)+z(i)*sin(beta(i));	rcc(i)=sqrt(xc(i)^2+yc(i)^2);	angc(i)=atan2(yc(i), xc(i));	if angc(i)<0; angc(i)=angc(i)+2*pi; endendxc(n+1)=xc(1);yc(n+1)=yc(1);% Compute the pressure anglefor i=1:1:n	psi=atan2((yc(i)-YC(i)),(xc(i)-XC(i)))-pi/2;	lamda=atan2((yc(i)-YM(i)),(xc(i)-XM(i)));	pa(i)=acos((cos(psi)*cos(lamda)+sin(psi)*sin(lamda)))/fact;end% Compute the radius of curvaturefor j=1:1:n	jp1=j+1;	jm1=j-1;	if j==1		a1=[xc(n), yc(n)];		b1=[xc(n+1), yc(n+1)];		a2=b1;		b2=[xc(jp1), yc(jp1)];		sign=(xc(n+1)-xc(n))*(yc(jp1)-yc(n+1))-(xc(jp1)-xc(n+1))*(yc(n+1)-yc(n));			end	if j>1		a1=[xc(jm1), yc(jm1)];		b1=[xc(j), yc(j)];		a2=b1;		b2=[xc(jp1), yc(jp1)];		sign=(xc(j)-xc(jm1))*(yc(jp1)-yc(j))-(xc(jp1)-xc(j))*(yc(j)-yc(jm1));	end	coords=pole(a1,a2,b1,b2);	xcent(j)=coords(1);	ycent(j)=coords(2);	rho(j)=10^10;% If flag =0, compute the true value for rho	if coords(3)==0		rho(j)=sqrt((xc(j)-xcent(j))^2+(yc(j)-ycent(j))^2);	end	% Compute the sign for rho	if sign ~=0;		sign=sign/abs(sign);	end	if sign==0; sign=1; end	rho(j)=rho(j)*sign;end% If rho is large, truncate it for drawing purposesrhom=2*sqrt((max(xc))^2+(max(yc))^2);for j=1:1:n	rhod(j)=rho(j);	if abs(rho(j))>rhom		rhod(j)=rhom*rho(j)/abs(rho(j));	endend% Set up coordinates of bushings and pins.rpivot=rb/10;ninc=20;  npoints=ninc+1;centerx=0;centery=0;coord1=circle2(rpivot,centerx,centery,ninc);% find coordinates of cam pinfor i=1:1:npoints	xcoordcp(i)=coord1(i,1);	ycoordcp(i)=coord1(i,2);	xcoordfp(i)=xcoordcp(i)+r1;	ycoordfp(i)=ycoordcp(i);	end% Find coordinates of cam and follower bushingsbinc=ninc/2;coord2=bushing(rpivot,centerx,centery,binc,0);bpoints=ninc/2+16;for i=1:1:bpoints	xbush1(i)=coord2(i,1);	ybush1(i)=coord2(i,2);	xbush2(i)=xbush1(i)+r1;	ybush2(i)=ybush1(i);end% Find coordinates of follower stemxstem(1)=r1;ystem(1)=0;xstem(2)=xstem(1)-d*cos(pi/2-phi0);ystem(2)=ystem(1)-d*sin(pi/2-phi0);xstem(3)=xstem(2)+r3*cos(pi-phi0);ystem(3)=ystem(2)+r3*sin(pi-phi0);% Loop to analyze the cam machanism for a full cyclenposn=30;rotinc=floor(n/nposn);  %rotation increment to get nrot positions per rotationk=0;jj=0;for j=1:1:n	jj=jj+1;	Q21=-theta(j);	Q2 = Q21*fact;	ct=cos(Q2);	st=sin(Q2);% Rotate the follower by f(j)	muu=pi-phi0-f(j);	xstem(1)=r1;	ystem(1)=0.0;	xstem(2)=-d*cos(muu-pi/2)+xstem(1);	ystem(2)=-d*sin(muu-pi/2)+ystem(1);	xstem(3)=xstem(2)+r3*cos(muu);	ystem(3)=ystem(2)+r3*sin(muu);% find coordinates of follower	for i=1:1:3		k=k+1;		xstema(jj,i)=xstem(i);		ystema(jj,i)=ystem(i);		tempx(k)=xstema(jj,i);		tempy(k)=ystema(jj,i);	end% rotate the cam coordinates by theta(j)	ii=0;	for i=1:1:n		ii=ii+1;		k=k+1;			xca(jj,ii)=xc(i)*ct-yc(i)*st;		yca(jj,ii)=xc(i)*st+yc(i)*ct;			tempx(k)=xca(jj,ii);		tempy(k)=yca(jj,ii);	end	nn=ii;	xca(jj,ii+1)=xc(1)*ct-yc(1)*st;	yca(jj,ii+1)=xc(1)*st+yc(1)*ct;	endntotal = n;jtotal = ii+1;% Set the axis limits for the graphs.  Start with the cam mechanism% position graphwidth = 0.95;height = 0.95;xmina=min(tempx)-0.3*abs(min(tempx));xmaxa=max(tempx)+0.1*abs(max(tempx));ymina=min(tempy)-0.2*abs(min(tempy));ymaxa=max(tempy)+0.2*abs(max(tempy));rangex=xmaxa-xmina;rangey=ymaxa-ymina;xmin=xmina-0.05*rangex;xmax=xmaxa+0.05*rangex;ymin=ymina-0.05*rangey;ymax=ymaxa+0.05*rangey;values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin=values(1);xmax=values(2);ymin=values(3);ymax=values(4);% Decide the matrix size itotal = max([bpoints ntotal]);rtotal = 21+ntotal*2;res = zeros( rtotal, itotal);i = 0;i = i+1; res( i,1:ntotal ) = camangle;i = i+1; res( i,1:ntotal ) = fd;i = i+1; res( i,1:ntotal ) = camangle;i = i+1; res( i,1:ntotal ) = pa;i = i+1; res( i,1:ntotal ) = camangle;i = i+1; res( i,1:ntotal ) = rho;i = i+1; res( i,1:bpoints ) = xbush1;i = i+1; res( i,1:bpoints ) = ybush1;i = i+1; res( i,1:npoints ) = xcoordcp;i = i+1; res( i,1:npoints ) = ycoordcp;i = i+1; res( i,1:bpoints ) = xbush2;i = i+1; res( i,1:bpoints ) = ybush2;i = i+1; res( i,1:npoints ) = xcoordfp;i = i+1; res( i,1:npoints ) = ycoordfp;i = i+1; res( i:i+ntotal-1,1:jtotal ) = xca;i = i+ntotal; res( i:i+ntotal-1,1:jtotal ) = yca;xstema = xstema';ystema = ystema';i = i+ntotal; res( i:i+2,1:ntotal ) = xstema;i = i+3; res( i:i+2,1:ntotal ) = ystema;i = i+3;res( i,1:4 ) = [xmin xmax ymin ymax];res( i,5:9 ) = [bpoints npoints jtotal ntotal rotinc ];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = CreateMechanismHandles( handle,axislimits,xcoordcp,ycoordcp,xbush1,ybush1,xcoordfp,ycoordfp,xbush2,ybush2) axes(handle);%setup the aspect ratio of the mechanism to 1 set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;xmin = axislimits(1);xmax = axislimits(2);ymin = axislimits(3);ymax = axislimits(4);axis([xmin xmax ymin ymax]);cam=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');stem=line('xdata', [], 'ydata' ,[], 'linewidth',3,'color', 'k');bush1=line('xdata',[],'ydata',[],'color','r');pin1=line('xdata',[],'ydata',[],'color','r');bush2=line('xdata',[],'ydata',[],'color','r');pin2=line('xdata',[],'ydata',[],'color','r');% draw the pins and bushings.set(pin1,'xdata', xcoordcp, 'ydata',ycoordcp);set(bush1,'xdata', xbush1,'ydata', ybush1);set(pin2,'xdata', xcoordfp, 'ydata',ycoordfp);set(bush2,'xdata', xbush2,'ydata', ybush2);hdls=[ cam stem ];set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [] = SetMechanismPosition( links,i,xca,yca,xstema,ystema)cam = links(1);stem = links(2);[nn mm] = size(xca);for j=1:1:mm	xcam(j)=xca(i,j);	ycam(j)=yca(i,j);endfor j=1:1:3	xstemn(j)=xstema(i,j);	ystemn(j)=ystema(i,j);end		set(cam,'xdata',xcam,'ydata', ycam);set(stem,'xdata', xstemn,'ydata', ystemn);
function centrode_ana(Action,r1,r2,r3,r4,Q1)% the contents of the userdata of Analysis Window % handles(1) = flag for deciding to start or stop animation% handles(2) = i% handles(3) = handle of strat button% handles(4) = handle of stop button% handles(5) = handle of return button% handles(6) = timesinkglobal nAnimationFlagglobal g_AnaRes2global nChangeSpeedif nargin==0 && isempty(findobj('Tag','Centrode Analysis Window'))  % centrode_ana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','Centrode Analysis Window'))      % centrode_ana is already open   Action='None';end switch Action%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Initialize the User Interface%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'initialize'   if  isempty(findobj('Tag','Centrode Analysis Window'))         LocalOpenFig;      nAnimationFlag = 0;   else      centrode_ana('None');   end      if nargin < 6      r = [ 3 3 2 3];      Q1 = 0;     else      r = [r1 r2 r3 r4];   end   if exist('nAnimationFlag')       if nAnimationFlag == 1   	  	centrode_ana('Stop');         return;      end   end   g_AnaRes2 = CalcResult( r,Q1 );   centrode_ana('ShowFigure');   centrode_ana('Start');   case 'None'   figure( findobj('Tag','Centrode Analysis Window'));   % Bring the figure to front, if it already existscase 'ShowFigure'   a = findobj('Tag','Centrode Analysis Window');   UD=a.UserData;   handles = UD.hand;   [m n] = size(g_AnaRes2);   axislimits= g_AnaRes2(m,1:4);   Ex = g_AnaRes2(m,5);   Ey = g_AnaRes2(m,6);   y1 = g_AnaRes2(m,7);   y2 = g_AnaRes2(m,8);   d = g_AnaRes2(m,9:11);   u = 4;	u = u+1;	Dx1= g_AnaRes2(u,1:d(1));	u = u+1;	Dy1= g_AnaRes2(u,1:d(1));      u = u+1;	Dx2= g_AnaRes2(u,1:d(2));	u = u+1;	Dy2= g_AnaRes2(u,1:d(2));      u = u+1;	Dx3= g_AnaRes2(u,1:d(3));	u = u+1;	Dy3= g_AnaRes2(u,1:d(3));	handle = findobj('tag','centrode_ana_axes');   CreateMechanismHandles( handle,Ex,Ey,Dx1,Dy1,Dx2,Dy2,Dx3,Dy3,y1,y2,axislimits);   drawnow;case 'Animation'   a = findobj('Tag','Centrode Analysis Window');   UD=a.UserData;      [ m, n ] = size( g_AnaRes2);   Ex = g_AnaRes2(m,5);   Ey = g_AnaRes2(m,6);   c = g_AnaRes2(m,12:14);   itotal = n;   i = UD.inum;	timesink = UD.tsink;   dt = 5;   u = 0;   u = u+1;	Bx = g_AnaRes2(u,:);	u = u+1;	By = g_AnaRes2(u,:);   u = u+1; Cx = g_AnaRes2(u,:);   u = u+1;	Cy = g_AnaRes2(u,:);      u = 10;   u = u+1; Dx4 = g_AnaRes2(u,:);   u = u+1;	Dy4 = g_AnaRes2(u,:);      u = u+1; centx1 = g_AnaRes2(u:u+c(1)-1,:);   u = u+c(1);	centy1 = g_AnaRes2(u:u+c(1)-1,:);   centx1 = centx1';	centy1 = centy1';   u = u+c(1); centx2 = g_AnaRes2(u:u+c(2)-1,:);   u = u+c(2);	centy2 = g_AnaRes2(u:u+c(2)-1,:);   centx2 = centx2';	centy2 = centy2';   u = u+c(2); centx3 = g_AnaRes2(u:u+c(3)-1,:);   u = u+c(3);	centy3 = g_AnaRes2(u:u+c(3)-1,:);   centx3 = centx3';	centy3 = centy3';   b = findobj('tag','centrode_ana_axes');   links = get(b,'userdata');      % set timer   tic; 	     while nAnimationFlag                      cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer      if i == 1         drawnow;      end               SetMechanismPosition( links,Bx(i),By(i),Cx(i),Cy(i), ...      	Dx4(i),Dy4(i),Ex,Ey,centx1(i,:),centy1(i,:),centx2(i,:),centy2(i,:),centx3(i,:),centy3(i,:));		drawnow;   %flush the draw buffer      i= i+1;            if i == itotal         i = 1;      end      		if nChangeSpeed ~= 0	      timesink = timesink * nChangeSpeed;	      nChangeSpeed = 0;	   end   	while toc < timesink	   end      	tmax = toc;   	tic;   end   nAnimationFlag = 0;   UD.inum = i;   UD.tsink = timesink;   if ~isempty(a)	   set(a,'Userdata',UD);   end   case 'Close'	centrode_ana('Stop');	a = findobj('Tag','Centrode Analysis Window');      close(a);   case 'SetSpeed'nChangeSpeed = r1;   case 'Start'   if exist('nAnimationFlag')      if nAnimationFlag == 1         return;      end   end      a = findobj('Tag','Centrode Analysis Window');   UD=a.UserData;   handles = UD.hand;   set(handles(3),'Enable','off');      nAnimationFlag = 1;   nChangeSpeed = 0;   UD.nani = nAnimationFlag;   set(a,'userdata',UD);   centrode_ana('Animation');   case 'Stop'   if  isempty(findobj('Tag','Centrode Analysis Window'))   	return;      end   b = findobj('Tag','Centrode Analysis Window');   UD=b.UserData;   handles = UD.hand;   nAnimationFlag = 0;   UD.nani = nAnimationFlag;   set(handles(3),'Enable','on');   set(b,'userdata',UD);   case 'Return'   centrode_ana('Stop');   if ~isempty(findobj('Tag','centrode_dsgn'))        	b = findobj('Tag','centrode_dsgn');      figure(b);     	b = findobj('Tag','Centrode Analysis Window');        	close(b);   else  	   return;         endend        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig()StdColor = get(0,'DefaultUIcontrolBackgroundColor');bgframe = StdColor;bgedit = [1 1 1];bgtext = bgframe;ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-40 ScreenSize(4)-sy-95 sx sy ] ;a = figure('Units','Pixels', ...   'Color',[0.8 0.8 0.8], ...   'Name','Centrode Analysis Window', ...   'NumberTitle','off', ...   'Position',FigPos, ...   'Tag','Centrode Analysis Window');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',bgframe, ...   'Position',[0.01731 0.0227 0.3654 0.1114], ...   'Style','frame', ...	'Tag','Frame2');	b = uicontrol('Parent',a, ...	'Units','normalized', ...   'BackgroundColor',bgframe, ...   'Position',[0.3885 0.0227 0.5923 0.1114], ...   'Style','frame', ...   'Tag','Frame1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axes%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-------Reference axisb = axes('Parent',a, ...   'Box','on', ...   'Color',[1 1 1], ...   'Position',[0.0154 0.1423 0.9692 0.8477], ...   'XColor',[0 0 0], ...   'XGrid','off', ...   'XTick',[],...   'YColor',[0 0 0], ...   'YGrid','off', ...   'YTick',[], ...   'ZColor',[0 0 0], ...   'ZGrid','off', ...   'ZTick',[]);   b = axes('Parent',a, ...   'Box','off', ...   'DataAspectRatio',[1 1 1],...   'CameraUpVector',[0 1 0], ...   'CameraUpVectorMode','manual', ...   'Position',[0.0154 0.1423 0.9692 0.8477], ...   'Tag','centrode_ana_axes');axis off;   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','centrode_ana(''Start'')', ...   'Position',[0.4 0.05 0.1865 0.0636], ...   'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','centrode_ana(''Stop'')', ...	'Position',[0.5923 0.05 0.1865 0.0636], ...    'String','Stop', ...   'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...   'Units','normalized', ...	'CallBack','centrode_ana(''Return'')', ...	'Position',[0.7846 0.05 0.1865 0.0636], ...    'String','Return', ...   'Tag','return_button');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Position',[0.0346 0.0636 0.08 0.04], ...   'String','Speed ', ...	'Style','text', ... 	'Tag','StaticText2');	h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','centrode_ana(''SetSpeed'',0.707);', ...   'Position',[0.13 0.05 0.1192 0.0636], ...    'String','+', ...	'Enable','on', ...	'Tag','Plus_button');b = uicontrol('Parent',a, ...	'Units','normalized', ...   'Callback','centrode_ana(''SetSpeed'',1.414);', ...   'Position',[0.255 0.05 0.1192 0.0636], ...   'String','-', ... 	'Tag','Minus_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;i = 1;timesink = 0.1;handles = [h_start h_stop h_return];set( a, 'Userdata', struct('hand',handles,'inum',i','tsink',timesink,'nani',nAnimationFlag));   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] =  CalcResult( r,Q1 )r1 = r(1);r2 = r(2);r3 = r(3);r4 = r(4);ttt1=1;ddx1=1;ddy1=1;Q11=Q1*pi/180;% Define constantsmode=-1;i=0;d2r=pi/180;r2d=180/pi;dddx=1;dddy=1;qstart=0.0;qstop=360.0;   % Check for the Grashof typer=[r1 r2 r3 r4];[rnew,Inew]=sort(r);drock=1;if (rnew(1)+rnew(4)<rnew(2)+rnew(3))    	drock=0;	if r3==rnew(1); drock=1; end		endif drock ==1	qstart=1.00001*r2d*acos(((r2+r3)^2+r1^2-r4^2)/(2*r1*(r2+r3)));	qstop=0.99999*r2d*acos((r1^2+r2^2-(r3+r4)^2)/(2*r1*r2));end	% Loop to analyze the linkage for tt full cyclesicent1=1;icent2=1;dt=(qstop-qstart)/60;for Q21 = qstart:dt:qstop;	i=i+1;	Q2 = Q21*d2r;% Call function to compute the position	para = fourbar(r1,r2,r3,r4,Q21,1,0,mode,Q1,2); 	Q3=para(7);	Q33(i)=Q3;	Q4=para(8);	Q44(i)=Q4;	assem=para(29);% Store position information in matrices.	Bx(i)= para(17);	By(i)= para(18);	Cx(i)= para(19);	Cy(i)= para(20);	a1(1)=0.0;	a1(2)=0.0;	a2(1)=Bx(i);	a2(2)=By(i);	b1(1)=r1*cos(Q11);	b1(2)=r1*sin(Q11);	b2(1)=Cx(i);	b2(2)=Cy(i);	coords=lineintersect(a1,a2,b1,b2);	Dx4(i)=coords(1);	Dy4(i)=coords(2);% Check distance to instant center.  If it is large, % set it near the previous value.	if i~=1; 		ddx2=Dx4(i)-Dx4(i-1);		ddy2=Dy4(i)-Dy4(i-1);				if ddx1 ~= 0; dddx=ddx2/ddx1; end		if ddy1 ~= 0; dddy=ddy2/ddy1; end		if dddx > 0 || dddy > 0 			ddx1=ddx2;			ddy1=ddy2;		end	end	if i > 1 && dddx<0 && dddy<0		if icent1==1; 			icent1=i-1;		end		if icent2==1 && icent1~=i-1; 			icent2=i-1;		end	end	% Compute the angle to the moving centrode	Qp=r2d*atan2((Dy4(i)-By(i)), (Dx4(i)-Bx(i)));		Qbeta(i)=Qp-Q3;	r5(i)=sqrt((Dy4(i)-By(i))^2+(Dx4(i)-Bx(i))^2);	Q22(i) = Q21;end	itotal=i;% Determine the three parts of the centrode.jstop1=itotal;jstop2=itotal;if icent1~=1; jstop1=icent1; endfor j=1:1:jstop1	Dx1(j)=Dx4(j);	Dy1(j)=Dy4(j);end% Determine the second part of the centrodek=0;Dx2(1)=Dx4(itotal);Dy2(1)=Dy4(itotal);jstart2=icent1+1;jstop2=icent2;if icent2==1; jstop2 = itotal; endif icent1==1; jstart2 = itotal; endfor j=jstart2:1:jstop2;	k=k+1;	Dx2(k)=Dx4(j);	Dy2(k)=Dy4(j);endktotal = k;% Determine the third part of the centrodem=0;jstart3=icent2+1;jstop3=itotal;if icent2==1; jstop3 = itotal; endif icent2==1; jstart3 = itotal; endfor j=jstart3:1:jstop3;	m=m+1;	Dx3(m)=Dx4(j);	Dy3(m)=Dy4(j);endmtotal = m;% Find the coordinates of the moving centrode for each position.% Start with first part.for k=1:1:itotal	for j=1:1:jstop1		angle=(Qbeta(j)+Q33(k))*d2r;		centx1(k,j)=Bx(k)+r5(j)*cos(angle);		centy1(k,j)=By(k)+r5(j)*sin(angle);	end% Do the second part.	l=0;	for j=jstart2:1:jstop2		l=l+1;		angle=(Qbeta(j)+Q33(k))*d2r;		centx2(k,l)=Bx(k)+r5(j)*cos(angle);		centy2(k,l)=By(k)+r5(j)*sin(angle);	end% Do the third part.	m=0;	for j=jstart3:1:itotal		m=m+1;		angle=(Qbeta(j)+Q33(k))*d2r;		centx3(k,m)=Bx(k)+r5(j)*cos(angle);		centy3(k,m)=By(k)+r5(j)*sin(angle);	endend% Define the axes for the graph showing the centrodes.  First find the % extreme values for the points being plotted.width=0.95;height=0.95;Ex = r1*cos(Q11);Ey = r1*sin(Q11);max1=max(Bx);max2=max(Cx);max3=max(Dx4);max4=max(centx1);max5=max(centx2);max6=max(centx3);xmax=max([max1, max2, max3, max4, max5, max6, Ex]);if xmax>4*r1; xmax=4*r1; endmax1=max(By);max2=max(Cy);max3=max(Dy4);max4=max(centy1);max5=max(centy2);max6=max(centy3);ymax=max([max1, max2, max3, max4, max5, max6, Ey]);if ymax>6*r4; ymax=6*r4; endmin1=min(Bx);min2=min(Cx);min3=min(Dx4);min4=min(centx1);min5=min(centx2);min6=min(centx3);xmin=min([min1, min2, min3, min4, min5, min6, Ex]);if xmin<-4*r1; xmin=-4*r1; endmin1=min(By);min2=min(Cy);min3=min(Dy4);min4=min(centy1);min5=min(centy2);min6=min(centy3);ymin=min([min1, min2, min3, min4, min5, min6, Ey]);if ymin<-3*r4; ymin=-3*r4; end%get the bushing pointsy1 = ymin;y2 = ymax;bush1=bushing(((ymax-ymin)/50),0,0,20,0);cir1=circle2(((ymax-ymin)/60),0,0,20);bush2=bushing(((ymax-ymin)/50), Ex, Ey, 20,0);cir2=circle2(((ymax-ymin)/60), Ex, Ey, 20);max1=max(bush1(:, 1));max2=max(bush2(:, 1));xmax1=max([max1, max2, xmax]);max1=max(bush1(:, 2));max2=max(bush2(:, 2));ymax1=max([max1, max2, ymax]);min1=min(bush1(:, 1));min2=min(bush2(:, 1));xmin1=min([min1, min2, xmin]);min1=min(bush1(:, 2));min2=min(bush2(:, 2));ymin1=min([min1, min2, ymin]);xmin=xmin1-0.05*abs(xmax1-xmin1);xmax=xmax1+0.05*abs(xmax1-xmin1);ymin=ymin1-0.05*abs(ymax1-ymin1);ymax=ymax1+0.05*abs(ymax1-ymin1);values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin=values(1);xmax=values(2);ymin=values(3);ymax=values(4);axis([xmin xmax ymin ymax]);d1 = length(Dx1);d2 = length(Dx2);d3 = length(Dx3);[m c1] = size(centx1);[m c2] = size(centx2);[m c3] = size(centx3);rtotal = 13+ 2*(c1 +c2 +c3);res = zeros( rtotal, itotal);i = 0;i = i+1; res( i,: ) = Bx;i = i+1; res( i,: ) = By; i = i+1; res( i,: ) = Cx;i = i+1; res( i,: ) = Cy;i = i+1; res( i,1:d1 ) = Dx1;i = i+1; res( i,1:d1 ) = Dy1;i = i+1; res( i,1:d2 ) = Dx2;i = i+1; res( i,1:d2 ) = Dy2;i = i+1; res( i,1:d3 ) = Dx3;i = i+1; res( i,1:d3 ) = Dy3;i = i+1; res( i,: ) = Dx4;i = i+1; res( i,: ) = Dy4;centx1 = centx1';centy1 = centy1';i = i+1; res( i:i+c1-1,: ) = centx1;i = i+c1; res( i:i+c1-1,: ) = centy1;%i = i+1; res( i:i+c1-1,1:itotal ) = centx1;%i = i+c1; res( i:i+c1-1,1:itotal ) = centy1;centx2 = centx2';centy2 = centy2';i = i+c1; res( i:i+c2-1,: ) = centx2;i = i+c2; res( i:i+c2-1,: ) = centy2;%i = i+1; res( i:i+c2-1,1:itotal ) = centx2;%i = i+c2; res( i:i+c2-1,1:itotal ) = centy2;centx3 = centx3';centy3 = centy3';i = i+c2; res( i:i+c3-1,: ) = centx3;i = i+c3; res( i:i+c3-1,: ) = centy3;%i = i+1; res( i:i+c3-1,1:itotal ) = centx3;%i = i+c3; res( i:i+c3-1,1:itotal ) = centy3;i = i+c3;res( i+1,1:4 ) = [xmin xmax ymin ymax];res( i+1,5:6 ) = [Ex Ey];res( i+1,7:8 ) = [y1 y2];res( i+1,9:14 ) = [d1 d2 d3 c1 c2 c3];   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function CreateMechanismHandles( handle,Ex,Ey,Dx1,Dy1,Dx2,Dy2,Dx3,Dy3,y1,y2,axislimits)axes(handle);hdls = get(handle,'userdata');hdls = get(handle,'userdata');if ~isempty(hdls)   if hdls ~= 0      delete(hdls);   end   endxmin = axislimits(1);xmax = axislimits(2);ymin = axislimits(3);ymax = axislimits(4);axis([xmin, xmax, ymin, ymax]);bush1=bushing(((y2-y1)/50),0,0,20,0);cir1=circle2(((y2-y1)/60),0,0,20);bush2=bushing(((y2-y1)/50), Ex, Ey, 20,0);cir2=circle2(((y2-y1)/60), Ex, Ey, 20);% Set up the vectors needed to draw the linkagejoint1=line('xdata', [], 'ydata', [], 'marker', 'o', 'color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o', 'color', 'k');crank=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'k');rocker=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');fcentrode(1)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r');	fcentrode(2)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r');	fcentrode(3)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r');	gridpt=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'markersize',6,'color', 'k', 'marker', 'o');	bushy(1)=line('xdata', [], 'ydata',[], 'linestyle', '-',...	'color', 'r');bushy(2)=line('xdata', [], 'ydata',[], 'linestyle', '-',...	'color', 'r');circ(1)=line('xdata', [], 'ydata',[], 'linestyle', '-',...	'color', 'r');circ(2)=line('xdata', [], 'ydata',[], 'linestyle', '-', ...	'color', 'r');mcentrode(1)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');	mcentrode(2)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');	mcentrode(3)=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');	line1=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'b');line2=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'b');% draw the pushings.set(circ(1),'xdata', cir1(:,1), 'ydata', cir1(:,2));set(bushy(1),'xdata', bush1(:,1),'ydata', bush1(:,2));set(circ(2),'xdata', cir2(:,1), 'ydata', cir2(:,2));set(bushy(2),'xdata', bush2(:,1),'ydata', bush2(:,2));   % Draw the coupler curve first.set(fcentrode(1),'xdata', Dx1, 'ydata' ,Dy1);set(fcentrode(2),'xdata', Dx2, 'ydata' ,Dy2);set(fcentrode(3),'xdata', Dx3, 'ydata' ,Dy3);		hdls = [	joint1 joint2 crank coupler rocker gridpt mcentrode line1 line2 bushy circ fcentrode];set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition( link,Bx,By,Cx,Cy,Dx4,Dy4,Ex,Ey,centx1,centy1,centx2,centy2,centx3,centy3)joint1 = link(1);joint2 = link(2);crank = link(3);coupler = link(4);rocker = link(5);gridpt = link(6);mcentrode = link(7:9);line1 = link(10);line2 = link(11);% Draw the linkages   set(joint1,'xdata', Bx, 'ydata',By);set(joint2,'xdata', Cx, 'ydata',Cy);set(crank,'xdata',[0 Bx],'ydata', [0 By]);set(coupler,'xdata', [Bx Cx],'ydata', [By Cy]);set(rocker,'xdata', [Ex Cx],'ydata', [Ey Cy]);set(line1,'xdata', [Bx Dx4],'ydata', [By Dy4]);set(line2,'xdata', [Cx Dx4],'ydata', [Cy Dy4]);set(mcentrode(1),'xdata', centx1,'ydata' ,centy1);set(mcentrode(2),'xdata', centx2,'ydata' ,centy2);set(mcentrode(3),'xdata', centx3,'ydata' ,centy3);set(gridpt,'xdata',Dx4, 'ydata' ,Dy4);
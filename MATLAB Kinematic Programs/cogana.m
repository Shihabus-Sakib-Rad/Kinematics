function cogana(Action,r,beta,Q1,mode)% the contents of the userdata of Analysis Window % handles(1) = handle of fig number% handles(2) = handle of fig1 popupmenu% handles(3) = handle of fig2 popupmenu% handles(4) = handle of fig3 popupmenu% handles(5) = handle of fig4 popupmenu% handles(6) = handle of axe1% handles(7) = handle of axe2% handles(8) = handle of axe3% handles(9) = handle of axe4% handles(10) = flag for deciding to start or stop animation% handles(11) = handle of bead(1)% handles(12) = handle of bead(2)% handles(13) = handle of bead(3)% handles(14) = handle of bead(4)% handles(15) = Previous Start Index% handles(16) = timesink% handles(17) = handle of reference axe for axe1% handles(18) = handle of reference axe for axe2% handles(19) = handle of reference axe for axe3% handles(20) = handle of reference axe for axe4% handles(21) = handle of submenu 'Load'% handles(22) = handle of submenu 'Save'% handles(23) = handle of return button;% handles(24) = handle of speed plus button;% each mechanism axes has the its own userdata storing its % unique graphic handle [joint1 joint2 crank coupler rocker];      global strFigType global nAnimationFlagglobal g_AnaResglobal nChangeSpeedif nargin==0 && isempty(findobj('Tag','Cognate Analysis Window')),  % cogana is being initialized   Action='initialize';elseif nargin== 0 && ~isempty(findobj('Tag','Cognate Analysis Window'))      % cogana is already open   Action='None';endswitch Action%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Initialize the User Interface%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'initialize'if  isempty(findobj('Tag','Cognate Analysis Window'))      LocalOpenFig;   nAnimationFlag = 0;else	cogana('None');end   if nargin == 0 || nargin == 1 || nargin == 2 || nargin == 3  	r = [ 2.75 0.90 2.40 1.30 4.85 ];  	beta = -4;      Q1 = 57;end   if exist('nAnimationFlag')    if nAnimationFlag == 1   	cogana('Stop');      return;   endend   g_AnaRes = CalcResult( r,beta,Q1,mode );DrawAnalysisWindow;cogana('ShowFigure');cogana('Start');   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Change Figure Call Back Function%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%case 'ChangeFigure'DrawAnalysisWindow;cogana('ShowFigure');cogana('Start');   case 'SetSpeed'nChangeSpeed = r;   case 'ChangeFigureNo'DrawAnalysisWindow;cogana('ShowFigure');cogana('Start');      case 'None'figure( findobj('Tag','Cognate Analysis Window'));% Bring the figure to front, if it already exists   case 'ShowFigure'a = findobj('Tag','Cognate Analysis Window');handles = get( a,'userdata');nFigNum = get(handles(1),'value');Cx = g_AnaRes(5,:);Cy = g_AnaRes(6,:);Mx = g_AnaRes(15,1);My = g_AnaRes(15,2);Qx = g_AnaRes(15,3);Qy = g_AnaRes(15,4);Ox = g_AnaRes(15,5);Oy = g_AnaRes(15,6);xmin1 = g_AnaRes(15,7);xmax1 = g_AnaRes(15,8);ymin1 = g_AnaRes(15,9);ymax1 = g_AnaRes(15,10);xmin2 = g_AnaRes(15,11);xmax2 = g_AnaRes(15,12);ymin2 = g_AnaRes(15,13);ymax2 = g_AnaRes(15,14);r1 = 2.75;if nFigNum > 0   nType = get(handles(2),'value');   axes(handles(6));   if nType == 1		CreateMechanismHandles_cog( handles(6),r1,Cx,Cy,Mx,My,Qx,Qy,Ox,Oy,xmin2,xmax2,ymin2,ymax2);   elseif nType == 2        	CreateMechanismHandles_MQ( handles(6),Cx,Cy,Qx,Qy,xmin1,xmax1,ymin1,ymax1);	elseif nType == 3   		CreateMechanismHandles_MO( handles(6),Cx,Cy,Mx,My,Ox,Oy,xmin1,xmax1,ymin1,ymax1);   elseif nType == 4   		CreateMechanismHandles_QO( handles(6),Cx,Cy,Qx,Qy,Ox,Oy,xmin1,xmax1,ymin1,ymax1);   endend      if nFigNum > 1   nType = get(handles(3),'value');   axes(handles(7));   if nType == 1		CreateMechanismHandles_cog( handles(7),r1,Cx,Cy,Mx,My,Qx,Qy,Ox,Oy,xmin2,xmax2,ymin2,ymax2);   elseif nType == 2        	CreateMechanismHandles_MQ( handles(7),Cx,Cy,Qx,Qy,xmin1,xmax1,ymin1,ymax1);	elseif nType == 3   		CreateMechanismHandles_MO( handles(7),Cx,Cy,Mx,My,Ox,Oy,xmin1,xmax1,ymin1,ymax1);   elseif nType == 4   		CreateMechanismHandles_QO( handles(7),Cx,Cy,Qx,Qy,Ox,Oy,xmin1,xmax1,ymin1,ymax1);   endend         if nFigNum > 2   nType = get(handles(4),'value');   axes(handles(8));   if nType == 1		CreateMechanismHandles_cog( handles(8),r1,Cx,Cy,Mx,My,Qx,Qy,Ox,Oy,xmin2,xmax2,ymin2,ymax2);   elseif nType == 2        	CreateMechanismHandles_MQ( handles(8),Cx,Cy,Qx,Qy,xmin1,xmax1,ymin1,ymax1);	elseif nType == 3   		CreateMechanismHandles_MO( handles(8),Cx,Cy,Mx,My,Ox,Oy,xmin1,xmax1,ymin1,ymax1);   elseif nType == 4   		CreateMechanismHandles_QO( handles(8),Cx,Cy,Qx,Qy,Ox,Oy,xmin1,xmax1,ymin1,ymax1);   endend         if nFigNum > 3   nType = get(handles(5),'value');   axes(handles(9));   if nType == 1		CreateMechanismHandles_cog( handles(9),r1,Cx,Cy,Mx,My,Qx,Qy,Ox,Oy,xmin2,xmax2,ymin2,ymax2);   elseif nType == 2        	CreateMechanismHandles_MQ( handles(9),Cx,Cy,Qx,Qy,xmin1,xmax1,ymin1,ymax1);	elseif nType == 3   		CreateMechanismHandles_MO( handles(9),Cx,Cy,Mx,My,Ox,Oy,xmin1,xmax1,ymin1,ymax1);   elseif nType == 4		CreateMechanismHandles_QO( handles(9),Cx,Cy,Qx,Qy,Ox,Oy,xmin1,xmax1,ymin1,ymax1);   endend    a = findobj('Tag','Cognate Analysis Window');   set(a,'Userdata',handles);   case 'Animation'a = findobj('Tag','Cognate Analysis Window');   handles = get(a,'userdata');   [ m, n ] = size( g_AnaRes);itotal = n;timesink = handles(16);i = handles(15);dt = 5;   nFigNum  = get( handles(1),'value');nType(1) = get( handles(2),'value');nType(2) = get( handles(3),'value');nType(3) = get( handles(4),'value');nType(4) = get( handles(5),'value');    Ax = g_AnaRes(1,:);Ay = g_AnaRes(2,:);Bx = g_AnaRes(3,:);By = g_AnaRes(4,:);Cx = g_AnaRes(5,:);Cy = g_AnaRes(6,:);Dx = g_AnaRes(7,:);Dy = g_AnaRes(8,:);Ex = g_AnaRes(9,:);Ey = g_AnaRes(10,:);Fx = g_AnaRes(11,:);Fy = g_AnaRes(12,:);Gx = g_AnaRes(13,:);Gy = g_AnaRes(14,:);Mx = g_AnaRes(15,1);My = g_AnaRes(15,2);Qx = g_AnaRes(15,3);Qy = g_AnaRes(15,4);Ox = g_AnaRes(15,5);Oy = g_AnaRes(15,6);link = zeros( 4,20);for j = 1:nFigNum   if nType(j) == 1      link(j,:) = get(handles(j+5),'userdata');   elseif nType(j) == 2      link(j,:) = get(handles(j+5),'userdata');   elseif nType(j) == 3      link(j,:) = get(handles(j+5),'userdata');   elseif nType(j) == 4      link(j,:) = get(handles(j+5),'userdata'); 	endend   % set timertic;  while nAnimationFlag                   cycle=fix((i-0.0000001)/(360/dt)); %determine the cycle as an integer   if i == 1      drawnow;   end      if nFigNum > 0      if nType(1) == 1			SetMechanismPosition_cog( link(1,:),i,Ax,Ay,Bx,By,Cx,Cy,Dx,Dy,Ex,Ey,Fx,Fy,Gx,Gy,Mx,My,Qx,Qy,Ox,Oy);      elseif nType(1) == 2 			SetMechanismPosition_MQ( link(1,:),i,Ax,Ay,Bx,By,Cx,Cy,Mx,My,Qx,Qy);     	elseif nType(1) == 3			SetMechanismPosition_MO( link(1,:),i,Cx,Cy,Fx,Fy,Gx,Gy,Mx,My,Ox,Oy);     	elseif nType(1) == 4			SetMechanismPosition_QO( link(1,:),i,Cx,Cy,Dx,Dy,Ex,Ey,Qx,Qy,Ox,Oy);         end   end         	if nFigNum > 1      if nType(2) == 1			SetMechanismPosition_cog( link(2,:),i,Ax,Ay,Bx,By,Cx,Cy,Dx,Dy,Ex,Ey,Fx,Fy,Gx,Gy,Mx,My,Qx,Qy,Ox,Oy);      elseif nType(2) == 2 			SetMechanismPosition_MQ( link(2,:),i,Ax,Ay,Bx,By,Cx,Cy,Mx,My,Qx,Qy);	 	elseif nType(2) == 3			SetMechanismPosition_MO( link(2,:),i,Cx,Cy,Fx,Fy,Gx,Gy,Mx,My,Ox,Oy);     	elseif nType(2) == 4			SetMechanismPosition_QO( link(2,:),i,Cx,Cy,Dx,Dy,Ex,Ey,Qx,Qy,Ox,Oy);         end      end      	if nFigNum > 2      if nType(3) == 1			SetMechanismPosition_cog( link(3,:),i,Ax,Ay,Bx,By,Cx,Cy,Dx,Dy,Ex,Ey,Fx,Fy,Gx,Gy,Mx,My,Qx,Qy,Ox,Oy);      elseif nType(3) == 2 			SetMechanismPosition_MQ( link(3,:),i,Ax,Ay,Bx,By,Cx,Cy,Mx,My,Qx,Qy);     	elseif nType(3) == 3			SetMechanismPosition_MO( link(3,:),i,Cx,Cy,Fx,Fy,Gx,Gy,Mx,My,Ox,Oy);     	elseif nType(3) == 4			SetMechanismPosition_QO( link(3,:),i,Cx,Cy,Dx,Dy,Ex,Ey,Qx,Qy,Ox,Oy);         end   end           	if nFigNum > 3      if nType(4) == 1			SetMechanismPosition_cog( link(4,:),i,Ax,Ay,Bx,By,Cx,Cy,Dx,Dy,Ex,Ey,Fx,Fy,Gx,Gy,Mx,My,Qx,Qy,Ox,Oy);      elseif nType(4) == 2 			SetMechanismPosition_MQ( link(4,:),i,Ax,Ay,Bx,By,Cx,Cy,Mx,My,Qx,Qy);     	elseif nType(4) == 3			SetMechanismPosition_MO( link(4,:),i,Cx,Cy,Fx,Fy,Gx,Gy,Mx,My,Ox,Oy);     	elseif nType(4) == 4			SetMechanismPosition_QO( link(4,:),i,Cx,Cy,Dx,Dy,Ex,Ey,Qx,Qy,Ox,Oy);         end   end        	drawnow;   %flush the draw buffer   i= i+1;   if i == itotal      i = 1;   end   if nChangeSpeed ~= 0      timesink = timesink * nChangeSpeed;      nChangeSpeed = 0;   end   while toc < timesink   end      tic;endnAnimationFlag = 0;handles(15) = i;handles(16) = timesink;set(a,'Userdata',handles);case 'Close'cogana('Stop');a = findobj('Tag','Cognate Analysis Window');   close(a);case 'Start'if exist('nAnimationFlag')   if nAnimationFlag == 1      return;   endend   a = findobj('Tag','Cognate Analysis Window');   handles = get(a,'userdata');set(handles(1),'Enable','off');set(handles(2),'Enable','off');set(handles(3),'Enable','off');set(handles(4),'Enable','off');set(handles(5),'Enable','off');set(handles(21),'Enable','off');set(handles(22),'Enable','off');set(handles(23),'Enable','off');   nAnimationFlag = 1;nChangeSpeed = 0;handles(10) = nAnimationFlag;set(a,'userdata',handles);cogana('Animation');   case 'Stop'if  isempty(findobj('Tag','Cognate Analysis Window')) 	return;   enda = findobj('Tag','Cognate Analysis Window');   handles = get(a,'userdata');nAnimationFlag = 0;handles(10) = nAnimationFlag;set(a,'userdata',handles);set(handles(1),'Enable','on');set(handles(21),'Enable','on');set(handles(22),'Enable','on');set(handles(23),'Enable','on');nFigNum = get(handles(1),'value');for i = 1:nFigNum, 	set(handles(i+1),'Enable','on');end   case 'Return'cogana('Stop');if ~isempty(findobj('Tag','cognate_dsgn'))   	b = findobj('Tag','cognate_dsgn');   figure(b);%   cogana('Close');   	b = findobj('Tag','Cognate Analysis Window');     	close(b);else  	return;      endcase 'GetFile'% Get the file name using the UIGETFILE[sFileName sFilePath] = uigetfile('*.dat','Load File'); if sFileName == 0 && sFilePath == 0	return;end% Combine the path and file name togethersTemp = strcat( sFilePath, sFileName );% get the size to erase the '.dat' extension sz = size(sFileName);	% load the data fileload(sTemp);	% assign the parameter to a variableParameter = eval(sFileName(1:(sz(2)-4))); a = findobj('Tag','Analysis Window');handles = get(a,'userdata');if length(Parameter) == 5	nFigNum = Parameter(1);	nType1 = Parameter(2);	nType2 = Parameter(3);	nType3 = Parameter(4);	nType4 = Parameter(5);	set(handles(1),'Value',nFigNum);	set(handles(2),'Value',nType1);	set(handles(3),'Value',nType2);	set(handles(4),'Value',nType3);	set(handles(5),'Value',nType4);	set(a,'userdata',handles);	DrawAnalysisWindow;	crana('ShowFigure');	crana('Start');else	return;endcase 'PutFile'[sFileName sFilePath] = uiputfile('*.dat','Save As'); a = findobj('Tag','Analysis Window');handles = get(a,'userdata');nFigNum = get(handles(1),'Value');nType1 = get(handles(2),'Value');nType2 = get(handles(3),'Value');nType3 = get(handles(4),'Value');nType4 = get(handles(5),'Value');ParameterData = [nFigNum; nType1; nType2; nType3; nType4]; % sTemp = strcat( sFilePath, sFileName)[sTemp , errMsg] = sprintf('%s%s', sFilePath, sFileName);[strCmd, errMsg] = sprintf('%s %s %s', 'save', sTemp, ' -ascii ParameterData');eval(strCmd);end % switch%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show User Interface for Cognate Analysis Window%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function DrawAnalysisWindow();a = findobj('Tag','Cognate Analysis Window');   handles = get(a,'userdata');h_fignum = handles(1);h_fig1 = handles(2);h_fig2 = handles(3);h_fig3 = handles(4);h_fig4 = handles(5);nFigNum=get(h_fignum,'Value');position = zeros( 4, 4, 4);position(1,1,:)  = [0.05 0.15 0.9 0.83];position(2,1,:) = [0.25 0.58 0.5 0.41];position(2,2,:) = [0.25 0.148 0.5 0.41];position(3,1,:) = [0.03 0.47 0.45 0.41];position(3,2,:) = [0.51 0.58 0.45 0.41];position(3,3,:) = [0.51 0.148 0.45 0.41];position(4,1,:) = [0.03 0.58 0.45 0.41];position(4,2,:) = [0.51 0.58 0.45 0.41];position(4,3,:) = [0.03 0.148 0.45 0.41];position(4,4,:) = [0.51 0.148 0.45 0.41];   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Clearup previous axes first%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 6:9,   if handles(i) ~= 0  	   delete(handles(i));     	handles(i) = 0;   endend   for i = 17:20,	if handles(i) ~= 0      delete(handles(i));     	handles(i) = 0;	endend     for i = 1:nFigNum,  	set(handles(i+1),'Enable','on');end      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Axis 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   if nFigNum == 1	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(1,1,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(17) = b;      h_1 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(1,1,:), ...		'Tag','Axes1', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...      'ZColor',[0 0 0]);   handles(6) = h_1;   end		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	% Axis 2	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 2	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(2,1,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(17) = b;      h_1 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(2,1,:), ...		'Tag','Axes1', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...	   'ZColor',[0 0 0]);      	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(2,2,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(18) = b;   h_2 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(2,2,:), ...		'Tag','Axes2', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...      'ZColor',[0 0 0]);   handles(6) = h_1;   handles(7) = h_2;   end		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	% Axis 3   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 3 	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(3,1,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(17) = b;      h_1 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(3,1,:), ...		'Tag','Axes1', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...	   'ZColor',[0 0 0]);   	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(3,2,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(18) = b;      h_2 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(3,2,:), ...		'Tag','Axes2', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...      'ZColor',[0 0 0]);   	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(3,3,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(19) = b;   h_3 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(3,3,:), ...		'Tag','Axes3', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...	   'ZColor',[0 0 0]);   handles(6) = h_1;   handles(7) = h_2;   handles(8) = h_3;end   	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	% Axis 4	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nFigNum == 4	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(4,1,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(17) = b;         h_1 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(4,1,:), ...		'Tag','Axes1', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...      'ZColor',[0 0 0]);   	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(4,2,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(18) = b;         h_2 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(4,2,:), ...		'Tag','Axes2', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...      'ZColor',[0 0 0]);   	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(4,3,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(19) = b;   h_3 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(4,3,:), ...		'Tag','Axes3', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...	   'ZColor',[0 0 0]);	b = axes('Parent',a, ...   	'Box','on', ...	   'Color',[1 1 1], ...		'Position',position(4,4,:), ...	   'XColor',[0 0 0], ...   	'XGrid','off', ...	   'XTick',[],...   	'YColor',[0 0 0], ...	   'YGrid','off', ...   	'YTick',[], ...	   'ZColor',[0 0 0], ...   	'ZGrid','off', ...	   'ZTick',[]);   handles(20) = b;         h_4 = axes('Parent',a, ...		'CameraUpVector',[0 1 0], ...		'CameraUpVectorMode','manual', ...		'Color',[1 1 1], ...		'Position',position(4,4,:), ...		'Tag','Axes4', ...		'XColor',[0 0 0], ...		'YColor',[0 0 0], ...      'ZColor',[0 0 0]);   handles(6) = h_1;   handles(7) = h_2;   handles(8) = h_3;   handles(9) = h_4;  end	set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Show UI%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function LocalOpenFig();strFigType = [ ...   	'Cognate Linkage';...      'MQ Linkage     ';...      'MO Linkage     ';...      'QO Linkage     '];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Main Figure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ScreenSize = get(0,'ScreenSize');sx = 520;sy = 440;FigPos = [ ScreenSize(3)-sx-10 ScreenSize(4)-sy-40 sx sy ] ;a = figure('Units','Pixels', ...	'Color',[0.8 0.8 0.8], ...	'Name','Cognate Analysis Window', ...	'NumberTitle','off', ...	'Position',FigPos, ...   'Tag','Cognate Analysis Window');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Draw the frame for Figure Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'BackgroundColor',[0.752941 0.752941 0.752941], ...   'Position',[0.0173077 0.0204842 0.77 0.111732], ...	'Style','frame', ...	'Tag','Frame2');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'Position',[0.780769 0.0204545 0.203846 0.111732], ...	'Style','frame', ...   'Tag','Frame1');  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Menu uicontrols%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uimenu('Parent',a, ...	'Label','Parameter', ...	'Tag','menu_parameter');  h_load = uimenu('Parent',b, ...	'Callback','cogana(''GetFile'')', ...	'Label','Load', ...	'Tag','submenu_load');  h_save = uimenu('Parent',b, ...	'Callback','cogana(''PutFile'')', ...	'Label','Save', ...	'Tag','submenu_save');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup number of figures%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...   'Units','normalized', ...	'Position',[0.03 0.07 0.095 0.0391061], ...	'String','No. of figs ', ...	'Style','text', ...   'Tag','StaticText2');  h_fignum = uicontrol('Parent',a, ...	'Units','normalized', ...	'Callback','cogana(''ChangeFigureNo'');', ...	'Position',[0.135 0.080 0.10 0.0353818], ...	'String',['1';'2';'3';'4'], ...	'Style','popupmenu', ...	'Tag','FigNumber', ...   'Value',1);  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Speed Control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'Position',[0.03 0.027933 0.08 0.0391061], ...	'String','Speed  ', ...	'Style','text', ...   'Tag','StaticText2');h_plus = uicontrol('Parent',a, ...	'Units','normalized', ...	'Callback','cogana(''SetSpeed'',0.707);', ...	'Position',[0.132692 0.0295455 0.0403846 0.0318182], ...   'String','+', ...   'Enable','on', ...	'Tag','Plus_button');h_minus = uicontrol('Parent',a, ...	'Units','normalized', ...	'Callback','cogana(''SetSpeed'',1.414);', ...	'Position',[0.2 0.0295455 0.0403846 0.0318182], ...	'String','-', ...   'Tag','Minus_button');  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Put label in front of the popup menu item%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%b = uicontrol('Parent',a, ...	'Units','normalized', ...	'Position',[0.244231 0.0782123 0.0626151 0.0372439], ...	'String','Fig 1', ...	'Style','text', ...   'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'Position',[0.501923 0.0800745 0.0626151 0.0372439], ...	'String','Fig 2', ...	'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'Position',[0.244231 0.0335196 0.0626151 0.0372439], ...	'String','Fig 3', ...	'Style','text', ...	'Tag','StaticText1');b = uicontrol('Parent',a, ...	'Units','normalized', ...	'Position',[0.501923 0.0372439 0.0626151 0.0372439], ...	'String','Fig 4', ...	'Style','text', ...	'Tag','StaticText1');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Setup the Popup menu contents for Figure Type Selection%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_fig1 = uicontrol('Parent',a, ...	'Units','normalized', ...	'Callback','cogana(''ChangeFigure'',1);', ...	'Position',[0.307692 0.0800745 0.192597 0.0353818], ...   'String',strFigType, ... 	'Style','popupmenu', ...	'Tag','Fig1', ...	'Value',2);h_fig2 = uicontrol('Parent',a, ...	'Units','normalized', ...	'Callback','cogana(''ChangeFigure'',2);', ...	'Position',[0.569231 0.0819367 0.192597 0.0353818], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig2', ...	'Value',2);h_fig3 = uicontrol('Parent',a, ...	'Units','normalized', ...	'Callback','cogana(''ChangeFigure'',3);', ...	'Position',[0.307692 0.0372439 0.192597 0.0353818], ...	'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig3', ...	'Value',3);h_fig4 = uicontrol('Parent',a, ...	'Units','normalized', ...	'Callback','cogana(''ChangeFigure'',4);', ...	'Position',[0.569231 0.0391061 0.192597 0.0353818], ...   'String',strFigType, ...	'Style','popupmenu', ...	'Tag','Fig4', ...   'Value',4);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Start/Stop/Return%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%h_start = uicontrol('Parent',a, ...   'Units','normalized', ...   'CallBack','cogana(''Start'')', ...	'Position',[0.794231 0.0772727 0.0857692 0.0431818], ...		'String','Start', ...	'Tag','start_button');h_stop = uicontrol('Parent',a, ...	'Units','normalized', ...   'CallBack','cogana(''Stop'')', ...	'Position',[0.885385 0.0772727 0.0857692 0.0431818], ...   'String','Stop', ...   'Userdata',1,...	'Tag','stop_button');h_return = uicontrol('Parent',a, ...	'Units','normalized', ...	'CallBack','cogana(''Return'')', ...	'Position',[0.794231 0.0289091 0.177308 0.0431818], ...   'String','Return', ...   'Tag','return_button');drawnow;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Assign Initial value%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nAnimationFlag = 0;handles = zeros( 1, 24);handles(1) = h_fignum;handles(2) = h_fig1;handles(3) = h_fig2;handles(4) = h_fig3;handles(5) = h_fig4;handles(10) = nAnimationFlag;handles(15) = 1;		% initial animation starting indexhandles(16) = 0.1;	% initial timesink valuehandles(21) = h_load;handles(22) = h_save;handles(23) = h_return;set( a, 'Userdata', handles);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	String Table%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [ labels ] = GetFigLabel( nFigType )strTable = cell( 4, 1 );strTable( 1,:) = {'Combination'};strTable( 2,:) = {'MQ Linkage'};strTable( 3,:) = {'MO Linkage'};strTable( 4,:) = {'QO Linkage'};labels = strTable( nFigType, : );%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	Calculate the result%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [res] =  CalcResult( r,beta,Q1,mode );i=0;w2=1;d2r=pi/180;Q11=Q1*d2r;r2d=180/pi;dt=10;% Loop to analyze the linkage for tt full cyclesfor Q21 = 0:dt:360;	i=i+1;	Q2 = Q21*d2r;% Call function to compute the position	para = fourbar(r(1),r(2),r(3),r(4),Q21,w2,0,mode,Q1,0); 	Q3=para(7);	Q33(i)=Q3;	Q4=para(8);	Q44(i)=Q4;	w33(i)=para(11);	w44(i)=para(12);	assem=para(29);	cang=(Q3+beta)*d2r;% Store position information in matrices.	Ax(i)= para(17);	Ay(i)= para(18);	Bx(i)= para(19);	By(i)= para(20);	Cx(i)=Ax(i)+r(5)*cos(cang);	Cy(i)=Ay(i)+r(5)*sin(cang);	Q22(i) = Q21;	w22(i) = w2; end	% Define the location of the cognate linkages.		itotal=i;Mx=0.0;My=0.0;Qx=Mx+r(1)*cos(Q11);Qy=My+r(1)*sin(Q11);angO=(beta+Q1)*d2r;betar=beta*d2r;r(6)=r(2)*r(5)/r(3);r(7)=r(4)*r(5)/r(3);r(8)=r(1)*r(5)/r(3);Ox=Mx+r(8)*cos(angO);Oy=My+r(8)*sin(angO);for k=1:1:itotal		Gx(k)=Cx(k)-Ax(k);	Gy(k)=Cy(k)-Ay(k);		Dx(k)=Cx(k)+(Qx-Bx(k));	Dy(k)=Cy(k)+(Qy-By(k));	phi=atan2((Dy(k)-Cy(k)), (Dx(k)-Cx(k)));	lamda=atan2((Cy(k)-Gy(k)), (Cx(k)-Gx(k)));	Ex(k)=Cx(k)+r(7)*cos(betar+phi);	Ey(k)=Cy(k)+r(7)*sin(betar+phi);	Fx(k)=Gx(k)+r(6)*cos(betar+lamda);	Fy(k)=Gy(k)+r(6)*sin(betar+lamda);endwidth = 0.45;height = 0.35;xmint=min([Mx Qx min(Ax) min(Bx) min(Cx)]);xmaxt=max([Mx Qx max(Ax) max(Bx) max(Cx)]);ymint=min([My Qy min(Ay) min(By) min(Cy)]);ymaxt=max([My Qy max(Ay) max(By) max(Cy)]);xmin=xmint-0.1*(xmaxt-xmint);xmax=xmaxt+0.1*(xmaxt-xmint);ymin=ymint-0.1*(ymaxt-ymint);ymax=ymaxt+0.1*(ymaxt-ymint);values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin1=values(1);xmax1=values(2);ymin1=values(3);ymax1=values(4);   width = 0.95;height = 0.95;xmint=min([Mx Qx Ox min(Ax) min(Bx) min(Cx) min(Dx) min(Ex) min(Fx) min(Gx)]);xmaxt=max([Mx Qx Ox max(Ax) max(Bx) max(Cx) max(Dx) max(Ex) max(Fx) max(Gx)]);ymint=min([My Qy Oy min(Ay) min(By) min(Cy) min(Dy) min(Ey) min(Fy) min(Gy)]);ymaxt=max([My Qy Oy max(Ay) max(By) max(Cy) max(Dy) max(Ey) max(Fy) max(Gy)]);xmin=xmint-0.05*(xmaxt-xmint);xmax=xmaxt+0.05*(xmaxt-xmint);ymin=ymint-0.05*(ymaxt-ymint);ymax=ymaxt+0.05*(ymaxt-ymint);values=axisadjust(xmin, xmax, ymin, ymax, width, height);xmin2=values(1);xmax2=values(2);ymin2=values(3);ymax2=values(4);res = zeros( 15, itotal);  i = 0;i = i+1; res( i,: ) = Ax;i = i+1; res( i,: ) = Ay; i = i+1; res( i,: ) = Bx;i = i+1; res( i,: ) = By; i = i+1; res( i,: ) = Cx;i = i+1; res( i,: ) = Cy;  i = i+1; res( i,: ) = Dx;i = i+1; res( i,: ) = Dy;i = i+1; res( i,: ) = Ex;i = i+1; res( i,: ) = Ey;i = i+1; res( i,: ) = Fx;i = i+1; res( i,: ) = Fy;  i = i+1; res( i,: ) = Gx;i = i+1; res( i,: ) = Gy;i = i+1; res( i,1 ) = Mx;   	      res( i,2 ) = My;            res( i,3 ) = Qx;            res( i,4 ) = Qy;            res( i,5 ) = Ox;            res( i,6 ) = Oy;          res( i,7 ) = xmin1;	  	 res( i,8 ) = xmax1;		 res( i,9 ) = ymin1;		 res( i,10 ) = ymax1;         res( i,11 ) = xmin2;		 res( i,12 ) = xmax2;		 res( i,13 ) = ymin2;		 res( i,14 ) = ymax2;   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function CreateMechanismHandles_cog( handle,r1,Cx,Cy,Mx,My,Qx,Qy,Ox,Oy,xmin,xmax,ymin,ymax)axes(handle);%setup the aspect ratio of the mechanism to 1set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;axis ([xmin, xmax, ymin, ymax])   % Get the bushing pointsbush1=bushing(((ymax-ymin)/50),Mx,My,20,0);cir1=circle2(((ymax-ymin)/60),Mx,My,20);bush2=bushing(((ymax-ymin)/50),Qx,Qy,20,0);cir2=circle2(((ymax-ymin)/60),Qx,Qy,20);bush3=bushing(((ymax-ymin)/50),Ox,Oy,20,0);cir3=circle2(((ymax-ymin)/60),Ox,Oy,20);  % Set up the vectors needed to draw the linkagejoint1=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'k');joint3=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'g');joint4=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'g');joint5=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'b');joint6=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'b');crank=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');crank2=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'g');crank3=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'b');coupler=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'k');coupler2=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'g');coupler3=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'b');couplerptr1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');	   couplerptr2=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'g');	   couplerptr3=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'b');	   couplerpt1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r', 'linestyle', '-');	gridpt=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k', 'marker', 'o');	rocker=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');rocker2=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'g');rocker3=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color','b');bushy1=line('xdata', bush1(:,1), 'ydata',bush1(:,2), 'linestyle', '-','color', 'r');bushy2=line('xdata', bush2(:,1), 'ydata',bush2(:,2), 'linestyle', '-','color', 'r');bushy3=line('xdata', bush3(:,1), 'ydata',bush3(:,2), 'linestyle', '-', 'color', 'r');circ1=line('xdata', cir1(:,1), 'ydata',cir1(:,2), 'linestyle', '-','color', 'r');circ2=line('xdata', cir2(:,1), 'ydata',cir2(:,2), 'linestyle', '-','color', 'r');circ3=line('xdata', cir3(:,1), 'ydata',cir3(:,2), 'linestyle', '-','color', 'r');% Draw the coupler curve first.set(couplerpt1,'xdata', Cx, 'ydata' ,Cy);% Label the pivotstext(Mx-0.2*r1,My,'M','color', 'k');text(Qx+0.1*r1,Qy,'Q','color', 'k');text(Ox+0.1*r1,Oy,'O','color', 'k');hdls = zeros(1,20);hdls(1:19) = [joint1; joint2; joint3; joint4; joint5; joint6; crank; crank2; crank3; ...              coupler; coupler2; coupler3; rocker; rocker2; rocker3; ...              gridpt; couplerptr1; couplerptr2; couplerptr3];      set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function CreateMechanismHandles_MQ( handle,Cx,Cy,Qx,Qy,xmin,xmax,ymin,ymax)axes(handle);%setup the aspect ratio of the mechanism to 1set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;% Set up coordinates of bushings and pins.axis ([xmin, xmax, ymin, ymax])% Get the bushing pointsbush1=bushing(((ymax-ymin)/50),0,0,20,0);cir1=circle2(((ymax-ymin)/60),0,0,20);bush2=bushing(((ymax-ymin)/50),Qx,Qy,20,0);cir2=circle2(((ymax-ymin)/60),Qx,Qy,20);  % Set up the vectors needed to draw the linkagejoint1=line('xdata', [], 'ydata', [], 'marker', 'o', 'color', 'k');joint2=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'k');crank=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'k');coupler=line('xdata', [], 'ydata' ,[], 'linewidth',1, 'color', 'k');couplerptr1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k');	   couplerpt1=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'r', 'linestyle', '-');	gridpt=line('xdata', [], 'ydata' ,[], 'linewidth' ,1, 'color', 'k', 'marker', 'o');	rocker=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'k');bushy1=line('xdata', bush1(:,1), 'ydata',bush1(:,2), 'linestyle', '-','color', 'r');bushy2=line('xdata', bush2(:,1), 'ydata',bush2(:,2), 'linestyle', '-','color', 'r');circ1=line('xdata', cir1(:,1), 'ydata',cir1(:,2), 'linestyle', '-','color', 'r');circ2=line('xdata', cir2(:,1), 'ydata',cir2(:,2), 'linestyle', '-','color', 'r');      % Draw the coupler curve first.set(couplerpt1,'xdata', Cx, 'ydata' ,Cy);% Label the pivotsxdelta=xmax-xmin;ydelta=ymax-ymin;set(couplerpt1,'xdata', Cx, 'ydata' ,Cy);text(xmin+0.05*xdelta,ymax-0.1*ydelta,'MQ Cognate','color', 'k');hdls = zeros(1,20);  hdls(1:7) = [joint1; joint2; crank; coupler; rocker; gridpt; couplerptr1];      set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function CreateMechanismHandles_MO( handle,Cx,Cy,Mx,My,Ox,Oy,xmin,xmax,ymin,ymax)axes(handle);%setup the aspect ratio of the mechanism to 1set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;xdelta=xmax-xmin;ydelta=ymax-ymin;axis ([xmin, xmax, ymin, ymax]);bush1=bushing(((ymax-ymin)/50),Mx,My,20,0);cir1=circle2(((ymax-ymin)/60),Mx,My,20);bush3=bushing(((ymax-ymin)/50),Ox,Oy,20,0);cir3=circle2(((ymax-ymin)/60),Ox,Oy,20);joint3=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'g');joint4=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'g');crank2=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'g');coupler2=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'g');couplerptr2=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'g');	   couplerpt2=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'r', 'linestyle', '-');	gridpt2=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'g', 'marker', 'o');	rocker2=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'g');bushy1=line('xdata', bush1(:,1), 'ydata',bush1(:,2), 'linestyle', '-','color', 'r');bushy3=line('xdata', bush3(:,1), 'ydata',bush3(:,2), 'linestyle', '-','color', 'r');circ1=line('xdata', cir1(:,1), 'ydata',cir1(:,2), 'linestyle', '-','color', 'r');circ3=line('xdata', cir3(:,1), 'ydata',cir3(:,2), 'linestyle', '-','color', 'r');set(couplerpt2,'xdata', Cx, 'ydata' ,Cy);text(xmin+0.05*xdelta,ymax-0.1*ydelta,'MO Cognate','color', 'k');hdls = zeros(1,20);hdls(1:7) = [joint3; joint4; crank2; coupler2; rocker2; gridpt2; couplerptr2];      set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Fig Setting for Special Case%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function CreateMechanismHandles_QO( handle,Cx,Cy,Qx,Qy,Ox,Oy,xmin,xmax,ymin,ymax)axes(handle);%setup the aspect ratio of the mechanism to 1set(handle, 'DataAspectRatio',[1 1 1],'Color','none','box','off');axis off;xdelta=xmax-xmin;ydelta=ymax-ymin;axis ([xmin, xmax, ymin, ymax]);bush2=bushing(((ymax-ymin)/50),Qx,Qy,20,0);cir2=circle2(((ymax-ymin)/60),Qx,Qy,20);bush3=bushing(((ymax-ymin)/50),Ox,Oy,20,0);cir3=circle2(((ymax-ymin)/60),Ox,Oy,20);joint5=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'b');joint6=line('xdata', [], 'ydata', [], 'marker', 'o','color', 'b');crank3=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'b');coupler3=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'b');couplerptr3=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'b');	   couplerpt3=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color','r', 'linestyle', '-');	gridpt3=line('xdata', [], 'ydata' ,[], 'linewidth' ,1,'color', 'b', 'marker', 'o');	rocker3=line('xdata', [], 'ydata' ,[], 'linewidth',1,'color', 'b');bushy2=line('xdata', bush2(:,1), 'ydata',bush2(:,2), 'linestyle', '-','color', 'r');bushy3=line('xdata', bush3(:,1), 'ydata',bush3(:,2), 'linestyle', '-','color', 'r');circ2=line('xdata', cir2(:,1), 'ydata',cir2(:,2), 'linestyle', '-','color', 'r');circ3=line('xdata', cir3(:,1), 'ydata',cir3(:,2), 'linestyle', '-','color', 'r');  set(couplerpt3,'xdata', Cx, 'ydata' ,Cy);text(xmin+0.05*xdelta,ymax-0.1*ydelta,'OQ Cognate','color', 'k');hdls = zeros(1,20);hdls(1:7) = [joint5; joint6; crank3; coupler3; rocker3; gridpt3; couplerptr3];      set(handle,'userdata',hdls);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition_cog( link,i,Ax,Ay,Bx,By,Cx,Cy,Dx,Dy,Ex,Ey,Fx,Fy,Gx,Gy,Mx,My,Qx,Qy,Ox,Oy)joint1 = link(1);joint2 = link(2);joint3 = link(3);joint4 = link(4);joint5 = link(5);joint6 = link(6);crank = link(7);crank2 = link(8);crank3 = link(9);coupler = link(10);coupler2 = link(11);coupler3 = link(12);rocker = link(13);rocker2 = link(14);rocker3 = link(15);gridpt = link(16);couplerptr1 = link(17);couplerptr2 = link(18);couplerptr3 = link(19);set(joint1,'xdata', Ax(i), 'ydata',Ay(i));set(joint2,'xdata', Bx(i), 'ydata',By(i));set(joint3,'xdata', Gx(i), 'ydata',Gy(i));set(joint4,'xdata', Fx(i), 'ydata',Fy(i));set(joint5,'xdata', Dx(i), 'ydata',Dy(i));set(joint6,'xdata', Ex(i), 'ydata',Ey(i));set(crank,'xdata',[Mx Ax(i)],'ydata', [Mx Ay(i)]);set(crank2,'xdata',[Ox Fx(i)],'ydata', [Oy Fy(i)]);set(crank3,'xdata',[Qx Dx(i)],'ydata', [Qy Dy(i)]);set(coupler,'xdata', [Ax(i) Bx(i)],'ydata', [Ay(i) By(i)]);set(coupler2,'xdata', [Fx(i) Gx(i)],'ydata', [Fy(i) Gy(i)]);set(coupler3,'xdata', [Dx(i) Ex(i)],'ydata', [Dy(i) Ey(i)]);set(rocker,'xdata', [Qx Bx(i)],'ydata', [Qy By(i)]);set(rocker2,'xdata', [Mx Gx(i)],'ydata', [My Gy(i)]);set(rocker3,'xdata', [Ox Ex(i)],'ydata', [Oy Ey(i)]);set(gridpt,'xdata',Cx(i), 'ydata' ,Cy(i));set(couplerptr1,'xdata', [Ax(i) Cx(i) Bx(i)], ...    'ydata' ,[Ay(i) Cy(i) By(i)]);set(couplerptr2,'xdata', [Fx(i) Cx(i) Gx(i)], ...    'ydata' ,[Fy(i) Cy(i) Gy(i)]);set(couplerptr3,'xdata', [Dx(i) Cx(i) Ex(i)], ...    'ydata' ,[Dy(i) Cy(i) Ey(i)]); %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition_MQ( link,i,Ax,Ay,Bx,By,Cx,Cy,Mx,My,Qx,Qy)joint1 = link(1);joint2 = link(2);crank = link(3);coupler = link(4);rocker = link(5);gridpt = link(6);couplerptr1 = link(7);set(joint1,'xdata', Ax(i), 'ydata',Ay(i));set(joint2,'xdata', Bx(i), 'ydata',By(i));set(crank,'xdata',[Mx Ax(i)],'ydata', [Mx Ay(i)]);set(coupler,'xdata', [Ax(i) Bx(i)],'ydata', [Ay(i) By(i)]);set(rocker,'xdata', [Qx Bx(i)],'ydata', [Qy By(i)]);set(gridpt,'xdata',Cx(i), 'ydata' ,Cy(i));set(couplerptr1,'xdata', [Ax(i) Cx(i) Bx(i)], ...    'ydata' ,[Ay(i) Cy(i) By(i)]); %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition_MO( link,i,Cx,Cy,Fx,Fy,Gx,Gy,Mx,My,Ox,Oy)joint3 = link(1);joint4 = link(2);crank2 = link(3);coupler2 = link(4);rocker2 = link(5);gridpt2 = link(6);couplerptr2 = link(7);set(joint3,'xdata', Gx(i), 'ydata',Gy(i));set(joint4,'xdata', Fx(i), 'ydata',Fy(i));set(crank2,'xdata',[Ox Fx(i)],'ydata', [Oy Fy(i)]);set(coupler2,'xdata', [Fx(i) Gx(i)],'ydata', [Fy(i) Gy(i)]);set(rocker2,'xdata', [Mx Gx(i)],'ydata', [My Gy(i)]);set(gridpt2,'xdata',Cx(i), 'ydata' ,Cy(i));set(couplerptr2,'xdata', [Fx(i) Cx(i) Gx(i)], ...    'ydata' ,[Fy(i) Cy(i) Gy(i)]); %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Set the mechanism position%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function SetMechanismPosition_QO( link,i,Cx,Cy,Dx,Dy,Ex,Ey,Qx,Qy,Ox,Oy)joint5 = link(1);joint6 = link(2);crank3 = link(3);coupler3 = link(4);rocker3 = link(5);gridpt3 = link(6);couplerptr3 = link(7);set(joint5,'xdata', Dx(i), 'ydata',Dy(i));set(joint6,'xdata', Ex(i), 'ydata',Ey(i));set(crank3,'xdata',[Qx Dx(i)],'ydata', [Qy Dy(i)]);set(coupler3,'xdata', [Dx(i) Ex(i)],'ydata', [Dy(i) Ey(i)]);set(rocker3,'xdata', [Ox Ex(i)],'ydata', [Oy Ey(i)]);set(gridpt3,'xdata',Cx(i), 'ydata' ,Cy(i));set(couplerptr3,'xdata', [Dx(i) Cx(i) Ex(i)], ...    'ydata' ,[Dy(i) Cy(i) Ey(i)]);